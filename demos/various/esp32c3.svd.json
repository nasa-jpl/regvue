{
    "schema": {
        "name": "register-description-format",
        "version": "v1"
    },
    "root": {
        "desc": "ESP32-C3",
        "version": "3",
        "children": [
            "aes",
            "apb_ctrl",
            "apb_saradc",
            "assist_debug",
            "dma",
            "ds",
            "efuse",
            "extmem",
            "gpio",
            "gpiosd",
            "hmac",
            "i2c",
            "i2s",
            "interrupt_core0",
            "io_mux",
            "ledc",
            "rmt",
            "rsa",
            "rtc_cntl",
            "sensitive",
            "sha",
            "spi0",
            "spi1",
            "spi2",
            "system",
            "systimer",
            "timg0",
            "timg1",
            "uart0",
            "uart1",
            "uhci0",
            "uhci1",
            "usb_device",
            "xts_aes"
        ]
    },
    "elements": {
        "aes": {
            "type": "blk",
            "children": [
                "aes.key_0",
                "aes.key_1",
                "aes.key_2",
                "aes.key_3",
                "aes.key_4",
                "aes.key_5",
                "aes.key_6",
                "aes.key_7",
                "aes.text_in_0",
                "aes.text_in_1",
                "aes.text_in_2",
                "aes.text_in_3",
                "aes.text_out_0",
                "aes.text_out_1",
                "aes.text_out_2",
                "aes.text_out_3",
                "aes.mode",
                "aes.endian",
                "aes.trigger",
                "aes.state",
                "aes.iv_mem0",
                "aes.iv_mem1",
                "aes.iv_mem2",
                "aes.iv_mem3",
                "aes.iv_mem4",
                "aes.iv_mem5",
                "aes.iv_mem6",
                "aes.iv_mem7",
                "aes.iv_mem8",
                "aes.iv_mem9",
                "aes.iv_mem10",
                "aes.iv_mem11",
                "aes.iv_mem12",
                "aes.iv_mem13",
                "aes.iv_mem14",
                "aes.iv_mem15",
                "aes.h_mem0",
                "aes.h_mem1",
                "aes.h_mem2",
                "aes.h_mem3",
                "aes.h_mem4",
                "aes.h_mem5",
                "aes.h_mem6",
                "aes.h_mem7",
                "aes.h_mem8",
                "aes.h_mem9",
                "aes.h_mem10",
                "aes.h_mem11",
                "aes.h_mem12",
                "aes.h_mem13",
                "aes.h_mem14",
                "aes.h_mem15",
                "aes.j0_mem0",
                "aes.j0_mem1",
                "aes.j0_mem2",
                "aes.j0_mem3",
                "aes.j0_mem4",
                "aes.j0_mem5",
                "aes.j0_mem6",
                "aes.j0_mem7",
                "aes.j0_mem8",
                "aes.j0_mem9",
                "aes.j0_mem10",
                "aes.j0_mem11",
                "aes.j0_mem12",
                "aes.j0_mem13",
                "aes.j0_mem14",
                "aes.j0_mem15",
                "aes.t0_mem0",
                "aes.t0_mem1",
                "aes.t0_mem2",
                "aes.t0_mem3",
                "aes.t0_mem4",
                "aes.t0_mem5",
                "aes.t0_mem6",
                "aes.t0_mem7",
                "aes.t0_mem8",
                "aes.t0_mem9",
                "aes.t0_mem10",
                "aes.t0_mem11",
                "aes.t0_mem12",
                "aes.t0_mem13",
                "aes.t0_mem14",
                "aes.t0_mem15",
                "aes.dma_enable",
                "aes.block_mode",
                "aes.block_num",
                "aes.inc_sel",
                "aes.aad_block_num",
                "aes.remainder_bit_num",
                "aes.continue",
                "aes.int_clear",
                "aes.int_ena",
                "aes.date",
                "aes.dma_exit"
            ],
            "id": "aes",
            "name": "aes",
            "offset": "0x6003a000",
            "doc": "AES (Advanced Encryption Standard) Accelerator"
        },
        "aes.key_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_0 that is a part of key material."
                }
            ],
            "id": "aes.key_0",
            "name": "key_0",
            "offset": "0x0",
            "doc": "Key material key_0 configure register"
        },
        "aes.key_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_1 that is a part of key material."
                }
            ],
            "id": "aes.key_1",
            "name": "key_1",
            "offset": "0x4",
            "doc": "Key material key_1 configure register"
        },
        "aes.key_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_2 that is a part of key material."
                }
            ],
            "id": "aes.key_2",
            "name": "key_2",
            "offset": "0x8",
            "doc": "Key material key_2 configure register"
        },
        "aes.key_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_3 that is a part of key material."
                }
            ],
            "id": "aes.key_3",
            "name": "key_3",
            "offset": "0xc",
            "doc": "Key material key_3 configure register"
        },
        "aes.key_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_4 that is a part of key material."
                }
            ],
            "id": "aes.key_4",
            "name": "key_4",
            "offset": "0x10",
            "doc": "Key material key_4 configure register"
        },
        "aes.key_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_5 that is a part of key material."
                }
            ],
            "id": "aes.key_5",
            "name": "key_5",
            "offset": "0x14",
            "doc": "Key material key_5 configure register"
        },
        "aes.key_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_6 that is a part of key material."
                }
            ],
            "id": "aes.key_6",
            "name": "key_6",
            "offset": "0x18",
            "doc": "Key material key_6 configure register"
        },
        "aes.key_7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores key_7 that is a part of key material."
                }
            ],
            "id": "aes.key_7",
            "name": "key_7",
            "offset": "0x1c",
            "doc": "Key material key_7 configure register"
        },
        "aes.text_in_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_in_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_in_0 that is a part of source text material."
                }
            ],
            "id": "aes.text_in_0",
            "name": "text_in_0",
            "offset": "0x20",
            "doc": "source text material text_in_0 configure register"
        },
        "aes.text_in_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_in_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_in_1 that is a part of source text material."
                }
            ],
            "id": "aes.text_in_1",
            "name": "text_in_1",
            "offset": "0x24",
            "doc": "source text material text_in_1 configure register"
        },
        "aes.text_in_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_in_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_in_2 that is a part of source text material."
                }
            ],
            "id": "aes.text_in_2",
            "name": "text_in_2",
            "offset": "0x28",
            "doc": "source text material text_in_2 configure register"
        },
        "aes.text_in_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_in_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_in_3 that is a part of source text material."
                }
            ],
            "id": "aes.text_in_3",
            "name": "text_in_3",
            "offset": "0x2c",
            "doc": "source text material text_in_3 configure register"
        },
        "aes.text_out_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_out_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_out_0 that is a part of result text material."
                }
            ],
            "id": "aes.text_out_0",
            "name": "text_out_0",
            "offset": "0x30",
            "doc": "result text material text_out_0 configure register"
        },
        "aes.text_out_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_out_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_out_1 that is a part of result text material."
                }
            ],
            "id": "aes.text_out_1",
            "name": "text_out_1",
            "offset": "0x34",
            "doc": "result text material text_out_1 configure register"
        },
        "aes.text_out_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_out_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_out_2 that is a part of result text material."
                }
            ],
            "id": "aes.text_out_2",
            "name": "text_out_2",
            "offset": "0x38",
            "doc": "result text material text_out_2 configure register"
        },
        "aes.text_out_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "text_out_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits stores text_out_3 that is a part of result text material."
                }
            ],
            "id": "aes.text_out_3",
            "name": "text_out_3",
            "offset": "0x3c",
            "doc": "result text material text_out_3 configure register"
        },
        "aes.mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mode",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bits decides which one operation mode will be used. 3'd0: AES-EN-128, 3'd1: AES-EN-192, 3'd2: AES-EN-256, 3'd4: AES-DE-128, 3'd5: AES-DE-192, 3'd6: AES-DE-256."
                }
            ],
            "id": "aes.mode",
            "name": "mode",
            "offset": "0x40",
            "doc": "AES Mode register"
        },
        "aes.endian": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "endian",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "endian. [1:0] key endian, [3:2] text_in endian or in_stream endian,  [5:4] text_out endian or out_stream endian"
                }
            ],
            "id": "aes.endian",
            "name": "endian",
            "offset": "0x44",
            "doc": "AES Endian configure register"
        },
        "aes.trigger": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "trigger",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to start AES calculation."
                }
            ],
            "id": "aes.trigger",
            "name": "trigger",
            "offset": "0x48",
            "doc": "AES trigger register"
        },
        "aes.state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Those bits shows AES status. For typical AES, 0: idle, 1: busy. For DMA-AES, 0: idle, 1: busy, 2: calculation_done."
                }
            ],
            "id": "aes.state",
            "name": "state",
            "offset": "0x4c",
            "doc": "AES state register"
        },
        "aes.iv_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem0",
            "name": "iv_mem0",
            "offset": "0x50",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem1",
            "name": "iv_mem1",
            "offset": "0x51",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem2",
            "name": "iv_mem2",
            "offset": "0x52",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem3",
            "name": "iv_mem3",
            "offset": "0x53",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem4",
            "name": "iv_mem4",
            "offset": "0x54",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem5",
            "name": "iv_mem5",
            "offset": "0x55",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem6",
            "name": "iv_mem6",
            "offset": "0x56",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem7",
            "name": "iv_mem7",
            "offset": "0x57",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem8",
            "name": "iv_mem8",
            "offset": "0x58",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem9",
            "name": "iv_mem9",
            "offset": "0x59",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem10",
            "name": "iv_mem10",
            "offset": "0x5a",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem11",
            "name": "iv_mem11",
            "offset": "0x5b",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem12",
            "name": "iv_mem12",
            "offset": "0x5c",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem13",
            "name": "iv_mem13",
            "offset": "0x5d",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem14",
            "name": "iv_mem14",
            "offset": "0x5e",
            "doc": "The memory that stores initialization vector"
        },
        "aes.iv_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.iv_mem15",
            "name": "iv_mem15",
            "offset": "0x5f",
            "doc": "The memory that stores initialization vector"
        },
        "aes.h_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem0",
            "name": "h_mem0",
            "offset": "0x60",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem1",
            "name": "h_mem1",
            "offset": "0x61",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem2",
            "name": "h_mem2",
            "offset": "0x62",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem3",
            "name": "h_mem3",
            "offset": "0x63",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem4",
            "name": "h_mem4",
            "offset": "0x64",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem5",
            "name": "h_mem5",
            "offset": "0x65",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem6",
            "name": "h_mem6",
            "offset": "0x66",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem7",
            "name": "h_mem7",
            "offset": "0x67",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem8",
            "name": "h_mem8",
            "offset": "0x68",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem9",
            "name": "h_mem9",
            "offset": "0x69",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem10",
            "name": "h_mem10",
            "offset": "0x6a",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem11",
            "name": "h_mem11",
            "offset": "0x6b",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem12",
            "name": "h_mem12",
            "offset": "0x6c",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem13",
            "name": "h_mem13",
            "offset": "0x6d",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem14",
            "name": "h_mem14",
            "offset": "0x6e",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.h_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.h_mem15",
            "name": "h_mem15",
            "offset": "0x6f",
            "doc": "The memory that stores GCM hash subkey"
        },
        "aes.j0_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem0",
            "name": "j0_mem0",
            "offset": "0x70",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem1",
            "name": "j0_mem1",
            "offset": "0x71",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem2",
            "name": "j0_mem2",
            "offset": "0x72",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem3",
            "name": "j0_mem3",
            "offset": "0x73",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem4",
            "name": "j0_mem4",
            "offset": "0x74",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem5",
            "name": "j0_mem5",
            "offset": "0x75",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem6",
            "name": "j0_mem6",
            "offset": "0x76",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem7",
            "name": "j0_mem7",
            "offset": "0x77",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem8",
            "name": "j0_mem8",
            "offset": "0x78",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem9",
            "name": "j0_mem9",
            "offset": "0x79",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem10",
            "name": "j0_mem10",
            "offset": "0x7a",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem11",
            "name": "j0_mem11",
            "offset": "0x7b",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem12",
            "name": "j0_mem12",
            "offset": "0x7c",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem13",
            "name": "j0_mem13",
            "offset": "0x7d",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem14",
            "name": "j0_mem14",
            "offset": "0x7e",
            "doc": "The memory that stores J0"
        },
        "aes.j0_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.j0_mem15",
            "name": "j0_mem15",
            "offset": "0x7f",
            "doc": "The memory that stores J0"
        },
        "aes.t0_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem0",
            "name": "t0_mem0",
            "offset": "0x80",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem1",
            "name": "t0_mem1",
            "offset": "0x81",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem2",
            "name": "t0_mem2",
            "offset": "0x82",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem3",
            "name": "t0_mem3",
            "offset": "0x83",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem4",
            "name": "t0_mem4",
            "offset": "0x84",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem5",
            "name": "t0_mem5",
            "offset": "0x85",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem6",
            "name": "t0_mem6",
            "offset": "0x86",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem7",
            "name": "t0_mem7",
            "offset": "0x87",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem8",
            "name": "t0_mem8",
            "offset": "0x88",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem9",
            "name": "t0_mem9",
            "offset": "0x89",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem10",
            "name": "t0_mem10",
            "offset": "0x8a",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem11",
            "name": "t0_mem11",
            "offset": "0x8b",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem12",
            "name": "t0_mem12",
            "offset": "0x8c",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem13",
            "name": "t0_mem13",
            "offset": "0x8d",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem14",
            "name": "t0_mem14",
            "offset": "0x8e",
            "doc": "The memory that stores T0"
        },
        "aes.t0_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "aes.t0_mem15",
            "name": "t0_mem15",
            "offset": "0x8f",
            "doc": "The memory that stores T0"
        },
        "aes.dma_enable": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_enable",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'b0: typical AES working mode, 1'b1: DMA-AES working mode."
                }
            ],
            "id": "aes.dma_enable",
            "name": "dma_enable",
            "offset": "0x90",
            "doc": "DMA-AES working mode register"
        },
        "aes.block_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "block_mode",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits decides which block mode will be used. 0x0: ECB, 0x1: CBC, 0x2: OFB, 0x3: CTR, 0x4: CFB-8, 0x5: CFB-128, 0x6: GCM, 0x7: reserved."
                }
            ],
            "id": "aes.block_mode",
            "name": "block_mode",
            "offset": "0x94",
            "doc": "AES cipher block mode register"
        },
        "aes.block_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "block_num",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits stores the number of Plaintext/ciphertext block."
                }
            ],
            "id": "aes.block_num",
            "name": "block_num",
            "offset": "0x98",
            "doc": "AES block number register"
        },
        "aes.inc_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "inc_sel",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit decides the standard incrementing function. 0: INC32. 1: INC128."
                }
            ],
            "id": "aes.inc_sel",
            "name": "inc_sel",
            "offset": "0x9c",
            "doc": "Standard incrementing function configure register"
        },
        "aes.aad_block_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "aad_block_num",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits stores the number of AAD block."
                }
            ],
            "id": "aes.aad_block_num",
            "name": "aad_block_num",
            "offset": "0xa0",
            "doc": "Additional Authential Data block number register"
        },
        "aes.remainder_bit_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "remainder_bit_num",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits stores the number of remainder bit."
                }
            ],
            "id": "aes.remainder_bit_num",
            "name": "remainder_bit_num",
            "offset": "0xa4",
            "doc": "AES remainder bit number register"
        },
        "aes.continue": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "continue",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to continue GCM operation."
                }
            ],
            "id": "aes.continue",
            "name": "continue",
            "offset": "0xa8",
            "doc": "AES continue register"
        },
        "aes.int_clear": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "int_clear",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the AES interrupt."
                }
            ],
            "id": "aes.int_clear",
            "name": "int_clear",
            "offset": "0xac",
            "doc": "AES Interrupt clear register"
        },
        "aes.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable interrupt that occurs when DMA-AES calculation is done."
                }
            ],
            "id": "aes.int_ena",
            "name": "int_ena",
            "offset": "0xb0",
            "doc": "AES Interrupt enable register"
        },
        "aes.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "538513936",
                    "doc": "This bits stores the version information of AES."
                }
            ],
            "id": "aes.date",
            "name": "date",
            "offset": "0xb4",
            "doc": "AES version control register"
        },
        "aes.dma_exit": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_exit",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this register to leave calculation done stage. Recommend to use it after software finishes reading DMA's output buffer."
                }
            ],
            "id": "aes.dma_exit",
            "name": "dma_exit",
            "offset": "0xb8",
            "doc": "AES-DMA exit config"
        },
        "apb_ctrl": {
            "type": "blk",
            "children": [
                "apb_ctrl.sysclk_conf",
                "apb_ctrl.tick_conf",
                "apb_ctrl.clk_out_en",
                "apb_ctrl.wifi_bb_cfg",
                "apb_ctrl.wifi_bb_cfg_2",
                "apb_ctrl.wifi_clk_en",
                "apb_ctrl.wifi_rst_en",
                "apb_ctrl.host_inf_sel",
                "apb_ctrl.ext_mem_pms_lock",
                "apb_ctrl.flash_ace0_attr",
                "apb_ctrl.flash_ace1_attr",
                "apb_ctrl.flash_ace2_attr",
                "apb_ctrl.flash_ace3_attr",
                "apb_ctrl.flash_ace0_addr",
                "apb_ctrl.flash_ace1_addr",
                "apb_ctrl.flash_ace2_addr",
                "apb_ctrl.flash_ace3_addr",
                "apb_ctrl.flash_ace0_size",
                "apb_ctrl.flash_ace1_size",
                "apb_ctrl.flash_ace2_size",
                "apb_ctrl.flash_ace3_size",
                "apb_ctrl.spi_mem_pms_ctrl",
                "apb_ctrl.spi_mem_reject_addr",
                "apb_ctrl.sdio_ctrl",
                "apb_ctrl.redcy_sig0",
                "apb_ctrl.redcy_sig1",
                "apb_ctrl.front_end_mem_pd",
                "apb_ctrl.retention_ctrl",
                "apb_ctrl.clkgate_force_on",
                "apb_ctrl.mem_power_down",
                "apb_ctrl.mem_power_up",
                "apb_ctrl.rnd_data",
                "apb_ctrl.peri_backup_config",
                "apb_ctrl.peri_backup_apb_addr",
                "apb_ctrl.peri_backup_mem_addr",
                "apb_ctrl.peri_backup_int_raw",
                "apb_ctrl.peri_backup_int_st",
                "apb_ctrl.peri_backup_int_ena",
                "apb_ctrl.peri_backup_int_clr",
                "apb_ctrl.date"
            ],
            "id": "apb_ctrl",
            "name": "apb_ctrl",
            "offset": "0x60026000",
            "doc": "Advanced Peripheral Bus Controller"
        },
        "apb_ctrl.sysclk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rst_tick_cnt",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rst_tick_cnt"
                },
                {
                    "name": "clk_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en"
                },
                {
                    "name": "clk_320m_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_320m_en"
                },
                {
                    "name": "pre_div_cnt",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_pre_div_cnt"
                }
            ],
            "id": "apb_ctrl.sysclk_conf",
            "name": "sysclk_conf",
            "offset": "0x0",
            "doc": "APB_CTRL_SYSCLK_CONF_REG"
        },
        "apb_ctrl.tick_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tick_enable",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_tick_enable"
                },
                {
                    "name": "ck8m_tick_num",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "reg_ck8m_tick_num"
                },
                {
                    "name": "xtal_tick_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "39",
                    "doc": "reg_xtal_tick_num"
                }
            ],
            "id": "apb_ctrl.tick_conf",
            "name": "tick_conf",
            "offset": "0x4",
            "doc": "APB_CTRL_TICK_CONF_REG"
        },
        "apb_ctrl.clk_out_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_xtal_oen",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_xtal_oen"
                },
                {
                    "name": "clk40x_bb_oen",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk40x_bb_oen"
                },
                {
                    "name": "clk_dac_cpu_oen",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_dac_cpu_oen"
                },
                {
                    "name": "clk_adc_inf_oen",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_adc_inf_oen"
                },
                {
                    "name": "clk_320m_oen",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_320m_oen"
                },
                {
                    "name": "clk160_oen",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk160_oen"
                },
                {
                    "name": "clk80_oen",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk80_oen"
                },
                {
                    "name": "clk_bb_oen",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_bb_oen"
                },
                {
                    "name": "clk44_oen",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk44_oen"
                },
                {
                    "name": "clk22_oen",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk22_oen"
                },
                {
                    "name": "clk20_oen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk20_oen"
                }
            ],
            "id": "apb_ctrl.clk_out_en",
            "name": "clk_out_en",
            "offset": "0x8",
            "doc": "APB_CTRL_CLK_OUT_EN_REG"
        },
        "apb_ctrl.wifi_bb_cfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "wifi_bb_cfg",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wifi_bb_cfg"
                }
            ],
            "id": "apb_ctrl.wifi_bb_cfg",
            "name": "wifi_bb_cfg",
            "offset": "0xc",
            "doc": "APB_CTRL_WIFI_BB_CFG_REG"
        },
        "apb_ctrl.wifi_bb_cfg_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "wifi_bb_cfg_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wifi_bb_cfg_2"
                }
            ],
            "id": "apb_ctrl.wifi_bb_cfg_2",
            "name": "wifi_bb_cfg_2",
            "offset": "0x10",
            "doc": "APB_CTRL_WIFI_BB_CFG_2_REG"
        },
        "apb_ctrl.wifi_clk_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "wifi_clk_en",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294762544",
                    "doc": "reg_wifi_clk_en"
                }
            ],
            "id": "apb_ctrl.wifi_clk_en",
            "name": "wifi_clk_en",
            "offset": "0x14",
            "doc": "APB_CTRL_WIFI_CLK_EN_REG"
        },
        "apb_ctrl.wifi_rst_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "wifi_rst",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wifi_rst"
                }
            ],
            "id": "apb_ctrl.wifi_rst_en",
            "name": "wifi_rst_en",
            "offset": "0x18",
            "doc": "APB_CTRL_WIFI_RST_EN_REG"
        },
        "apb_ctrl.host_inf_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_io_swap",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_io_swap"
                }
            ],
            "id": "apb_ctrl.host_inf_sel",
            "name": "host_inf_sel",
            "offset": "0x1c",
            "doc": "APB_CTRL_HOST_INF_SEL_REG"
        },
        "apb_ctrl.ext_mem_pms_lock": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ext_mem_pms_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ext_mem_pms_lock"
                }
            ],
            "id": "apb_ctrl.ext_mem_pms_lock",
            "name": "ext_mem_pms_lock",
            "offset": "0x20",
            "doc": "APB_CTRL_EXT_MEM_PMS_LOCK_REG"
        },
        "apb_ctrl.flash_ace0_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace0_attr",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_flash_ace0_attr"
                }
            ],
            "id": "apb_ctrl.flash_ace0_attr",
            "name": "flash_ace0_attr",
            "offset": "0x28",
            "doc": "APB_CTRL_FLASH_ACE0_ATTR_REG"
        },
        "apb_ctrl.flash_ace1_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace1_attr",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_flash_ace1_attr"
                }
            ],
            "id": "apb_ctrl.flash_ace1_attr",
            "name": "flash_ace1_attr",
            "offset": "0x2c",
            "doc": "APB_CTRL_FLASH_ACE1_ATTR_REG"
        },
        "apb_ctrl.flash_ace2_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace2_attr",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_flash_ace2_attr"
                }
            ],
            "id": "apb_ctrl.flash_ace2_attr",
            "name": "flash_ace2_attr",
            "offset": "0x30",
            "doc": "APB_CTRL_FLASH_ACE2_ATTR_REG"
        },
        "apb_ctrl.flash_ace3_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace3_attr",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_flash_ace3_attr"
                }
            ],
            "id": "apb_ctrl.flash_ace3_attr",
            "name": "flash_ace3_attr",
            "offset": "0x34",
            "doc": "APB_CTRL_FLASH_ACE3_ATTR_REG"
        },
        "apb_ctrl.flash_ace0_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "s",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_flash_ace0_addr_s"
                }
            ],
            "id": "apb_ctrl.flash_ace0_addr",
            "name": "flash_ace0_addr",
            "offset": "0x38",
            "doc": "APB_CTRL_FLASH_ACE0_ADDR_REG"
        },
        "apb_ctrl.flash_ace1_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "s",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4194304",
                    "doc": "reg_flash_ace1_addr_s"
                }
            ],
            "id": "apb_ctrl.flash_ace1_addr",
            "name": "flash_ace1_addr",
            "offset": "0x3c",
            "doc": "APB_CTRL_FLASH_ACE1_ADDR_REG"
        },
        "apb_ctrl.flash_ace2_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "s",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "8388608",
                    "doc": "reg_flash_ace2_addr_s"
                }
            ],
            "id": "apb_ctrl.flash_ace2_addr",
            "name": "flash_ace2_addr",
            "offset": "0x40",
            "doc": "APB_CTRL_FLASH_ACE2_ADDR_REG"
        },
        "apb_ctrl.flash_ace3_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "s",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "12582912",
                    "doc": "reg_flash_ace3_addr_s"
                }
            ],
            "id": "apb_ctrl.flash_ace3_addr",
            "name": "flash_ace3_addr",
            "offset": "0x44",
            "doc": "APB_CTRL_FLASH_ACE3_ADDR_REG"
        },
        "apb_ctrl.flash_ace0_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace0_size",
                    "lsb": 0,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "1024",
                    "doc": "reg_flash_ace0_size"
                }
            ],
            "id": "apb_ctrl.flash_ace0_size",
            "name": "flash_ace0_size",
            "offset": "0x48",
            "doc": "APB_CTRL_FLASH_ACE0_SIZE_REG"
        },
        "apb_ctrl.flash_ace1_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace1_size",
                    "lsb": 0,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "1024",
                    "doc": "reg_flash_ace1_size"
                }
            ],
            "id": "apb_ctrl.flash_ace1_size",
            "name": "flash_ace1_size",
            "offset": "0x4c",
            "doc": "APB_CTRL_FLASH_ACE1_SIZE_REG"
        },
        "apb_ctrl.flash_ace2_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace2_size",
                    "lsb": 0,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "1024",
                    "doc": "reg_flash_ace2_size"
                }
            ],
            "id": "apb_ctrl.flash_ace2_size",
            "name": "flash_ace2_size",
            "offset": "0x50",
            "doc": "APB_CTRL_FLASH_ACE2_SIZE_REG"
        },
        "apb_ctrl.flash_ace3_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "flash_ace3_size",
                    "lsb": 0,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "1024",
                    "doc": "reg_flash_ace3_size"
                }
            ],
            "id": "apb_ctrl.flash_ace3_size",
            "name": "flash_ace3_size",
            "offset": "0x54",
            "doc": "APB_CTRL_FLASH_ACE3_SIZE_REG"
        },
        "apb_ctrl.spi_mem_pms_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi_mem_reject_cde",
                    "lsb": 2,
                    "nbits": 5,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_spi_mem_reject_cde"
                },
                {
                    "name": "spi_mem_reject_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_spi_mem_reject_clr"
                },
                {
                    "name": "spi_mem_reject_int",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_spi_mem_reject_int"
                }
            ],
            "id": "apb_ctrl.spi_mem_pms_ctrl",
            "name": "spi_mem_pms_ctrl",
            "offset": "0x88",
            "doc": "APB_CTRL_SPI_MEM_PMS_CTRL_REG"
        },
        "apb_ctrl.spi_mem_reject_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi_mem_reject_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_spi_mem_reject_addr"
                }
            ],
            "id": "apb_ctrl.spi_mem_reject_addr",
            "name": "spi_mem_reject_addr",
            "offset": "0x8c",
            "doc": "APB_CTRL_SPI_MEM_REJECT_ADDR_REG"
        },
        "apb_ctrl.sdio_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sdio_win_access_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sdio_win_access_en"
                }
            ],
            "id": "apb_ctrl.sdio_ctrl",
            "name": "sdio_ctrl",
            "offset": "0x90",
            "doc": "APB_CTRL_SDIO_CTRL_REG"
        },
        "apb_ctrl.redcy_sig0": {
            "type": "reg",
            "fields": [
                {
                    "name": "redcy_andor",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_redcy_andor"
                },
                {
                    "name": "redcy_sig0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_redcy_sig0"
                }
            ],
            "id": "apb_ctrl.redcy_sig0",
            "name": "redcy_sig0",
            "offset": "0x94",
            "doc": "APB_CTRL_REDCY_SIG0_REG"
        },
        "apb_ctrl.redcy_sig1": {
            "type": "reg",
            "fields": [
                {
                    "name": "redcy_nandor",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_redcy_nandor"
                },
                {
                    "name": "redcy_sig1",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_redcy_sig1"
                }
            ],
            "id": "apb_ctrl.redcy_sig1",
            "name": "redcy_sig1",
            "offset": "0x98",
            "doc": "APB_CTRL_REDCY_SIG1_REG"
        },
        "apb_ctrl.front_end_mem_pd": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dc_mem_force_pd",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_dc_mem_force_pd"
                },
                {
                    "name": "dc_mem_force_pu",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_dc_mem_force_pu"
                },
                {
                    "name": "pbus_mem_force_pd",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pbus_mem_force_pd"
                },
                {
                    "name": "pbus_mem_force_pu",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_pbus_mem_force_pu"
                },
                {
                    "name": "agc_mem_force_pd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_agc_mem_force_pd"
                },
                {
                    "name": "agc_mem_force_pu",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_agc_mem_force_pu"
                }
            ],
            "id": "apb_ctrl.front_end_mem_pd",
            "name": "front_end_mem_pd",
            "offset": "0x9c",
            "doc": "APB_CTRL_FRONT_END_MEM_PD_REG"
        },
        "apb_ctrl.retention_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "nobypass_cpu_iso_rst",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_nobypass_cpu_iso_rst"
                },
                {
                    "name": "retention_link_addr",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_retention_link_addr"
                }
            ],
            "id": "apb_ctrl.retention_ctrl",
            "name": "retention_ctrl",
            "offset": "0xa0",
            "doc": "APB_CTRL_RETENTION_CTRL_REG"
        },
        "apb_ctrl.clkgate_force_on": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sram_clkgate_force_on",
                    "lsb": 2,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "reg_sram_clkgate_force_on"
                },
                {
                    "name": "rom_clkgate_force_on",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_rom_clkgate_force_on"
                }
            ],
            "id": "apb_ctrl.clkgate_force_on",
            "name": "clkgate_force_on",
            "offset": "0xa4",
            "doc": "APB_CTRL_CLKGATE_FORCE_ON_REG"
        },
        "apb_ctrl.mem_power_down": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sram_power_down",
                    "lsb": 2,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sram_power_down"
                },
                {
                    "name": "rom_power_down",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rom_power_down"
                }
            ],
            "id": "apb_ctrl.mem_power_down",
            "name": "mem_power_down",
            "offset": "0xa8",
            "doc": "APB_CTRL_MEM_POWER_DOWN_REG"
        },
        "apb_ctrl.mem_power_up": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sram_power_up",
                    "lsb": 2,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "reg_sram_power_up"
                },
                {
                    "name": "rom_power_up",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_rom_power_up"
                }
            ],
            "id": "apb_ctrl.mem_power_up",
            "name": "mem_power_up",
            "offset": "0xac",
            "doc": "APB_CTRL_MEM_POWER_UP_REG"
        },
        "apb_ctrl.rnd_data": {
            "type": "reg",
            "fields": [
                {
                    "name": "rnd_data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rnd_data"
                }
            ],
            "id": "apb_ctrl.rnd_data",
            "name": "rnd_data",
            "offset": "0xb0",
            "doc": "APB_CTRL_RND_DATA_REG"
        },
        "apb_ctrl.peri_backup_config": {
            "type": "reg",
            "fields": [
                {
                    "name": "peri_backup_ena",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_backup_ena"
                },
                {
                    "name": "peri_backup_to_mem",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_backup_to_mem"
                },
                {
                    "name": "peri_backup_start",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_start"
                },
                {
                    "name": "peri_backup_size",
                    "lsb": 19,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_backup_size"
                },
                {
                    "name": "peri_backup_tout_thres",
                    "lsb": 9,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "50",
                    "doc": "reg_peri_backup_tout_thres"
                },
                {
                    "name": "peri_backup_burst_limit",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "reg_peri_backup_burst_limit"
                },
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_backup_flow_err",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_flow_err"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_ctrl.peri_backup_config",
            "name": "peri_backup_config",
            "offset": "0xb4",
            "doc": "APB_CTRL_PERI_BACKUP_CONFIG_REG"
        },
        "apb_ctrl.peri_backup_apb_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "backup_apb_start_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_backup_apb_start_addr"
                }
            ],
            "id": "apb_ctrl.peri_backup_apb_addr",
            "name": "peri_backup_apb_addr",
            "offset": "0xb8",
            "doc": "APB_CTRL_PERI_BACKUP_APB_ADDR_REG"
        },
        "apb_ctrl.peri_backup_mem_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "backup_mem_start_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_backup_mem_start_addr"
                }
            ],
            "id": "apb_ctrl.peri_backup_mem_addr",
            "name": "peri_backup_mem_addr",
            "offset": "0xbc",
            "doc": "APB_CTRL_PERI_BACKUP_MEM_ADDR_REG"
        },
        "apb_ctrl.peri_backup_int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_backup_err_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_err_int_raw"
                },
                {
                    "name": "peri_backup_done_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_done_int_raw"
                }
            ],
            "id": "apb_ctrl.peri_backup_int_raw",
            "name": "peri_backup_int_raw",
            "offset": "0xc0",
            "doc": "APB_CTRL_PERI_BACKUP_INT_RAW_REG"
        },
        "apb_ctrl.peri_backup_int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_backup_err_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_err_int_st"
                },
                {
                    "name": "peri_backup_done_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_done_int_st"
                }
            ],
            "id": "apb_ctrl.peri_backup_int_st",
            "name": "peri_backup_int_st",
            "offset": "0xc4",
            "doc": "APB_CTRL_PERI_BACKUP_INT_ST_REG"
        },
        "apb_ctrl.peri_backup_int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_backup_err_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_backup_err_int_ena"
                },
                {
                    "name": "peri_backup_done_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_peri_backup_done_int_ena"
                }
            ],
            "id": "apb_ctrl.peri_backup_int_ena",
            "name": "peri_backup_int_ena",
            "offset": "0xc8",
            "doc": "APB_CTRL_PERI_BACKUP_INT_ENA_REG"
        },
        "apb_ctrl.peri_backup_int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_backup_err_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_err_int_clr"
                },
                {
                    "name": "peri_backup_done_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_peri_backup_done_int_clr"
                }
            ],
            "id": "apb_ctrl.peri_backup_int_clr",
            "name": "peri_backup_int_clr",
            "offset": "0xd0",
            "doc": "APB_CTRL_PERI_BACKUP_INT_CLR_REG"
        },
        "apb_ctrl.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33583632",
                    "doc": "reg_dateVersion control"
                }
            ],
            "id": "apb_ctrl.date",
            "name": "date",
            "offset": "0x3fc",
            "doc": "APB_CTRL_DATE_REG"
        },
        "apb_saradc": {
            "type": "blk",
            "children": [
                "apb_saradc.ctrl",
                "apb_saradc.ctrl2",
                "apb_saradc.filter_ctrl1",
                "apb_saradc.fsm_wait",
                "apb_saradc.sar1_status",
                "apb_saradc.sar2_status",
                "apb_saradc.sar_patt_tab1",
                "apb_saradc.sar_patt_tab2",
                "apb_saradc.onetime_sample",
                "apb_saradc.arb_ctrl",
                "apb_saradc.filter_ctrl0",
                "apb_saradc.sar1data_status",
                "apb_saradc.sar2data_status",
                "apb_saradc.thres0_ctrl",
                "apb_saradc.thres1_ctrl",
                "apb_saradc.thres_ctrl",
                "apb_saradc.int_ena",
                "apb_saradc.int_raw",
                "apb_saradc.int_st",
                "apb_saradc.int_clr",
                "apb_saradc.dma_conf",
                "apb_saradc.clkm_conf",
                "apb_saradc.apb_tsens_ctrl",
                "apb_saradc.tsens_ctrl2",
                "apb_saradc.cali",
                "apb_saradc.ctrl_date"
            ],
            "id": "apb_saradc",
            "name": "apb_saradc",
            "offset": "0x60040000",
            "doc": "Successive Approximation Register Analog to Digital Converter"
        },
        "apb_saradc.ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "saradc_wait_arb_cycle",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "wait arbit signal stable after sar_done"
                },
                {
                    "name": "rsvd3",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_xpd_sar_force",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force option to xpd sar blocks"
                },
                {
                    "name": "rsvd2",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_sar_patt_p_clear",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "clear the pointer of pattern table for DIG ADC1 CTRL"
                },
                {
                    "name": "rsvd1",
                    "lsb": 18,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_sar_patt_len",
                    "lsb": 15,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "0 ~ 15 means length 1 ~ 16"
                },
                {
                    "name": "saradc_sar_clk_div",
                    "lsb": 7,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "4",
                    "doc": "SAR clock divider"
                },
                {
                    "name": "saradc_sar_clk_gated",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SAR clock gated"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_start",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "software enable saradc sample"
                },
                {
                    "name": "saradc_start_force",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "select software enable saradc sample"
                }
            ],
            "id": "apb_saradc.ctrl",
            "name": "ctrl",
            "offset": "0x0",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.ctrl2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_timer_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "to enable saradc timer trigger"
                },
                {
                    "name": "saradc_timer_target",
                    "lsb": 12,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "10",
                    "doc": "to set saradc timer target"
                },
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_sar2_inv",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: data to DIG ADC2 CTRL is inverted, otherwise not"
                },
                {
                    "name": "saradc_sar1_inv",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: data to DIG ADC1 CTRL is inverted, otherwise not"
                },
                {
                    "name": "saradc_max_meas_num",
                    "lsb": 1,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "max conversion number"
                },
                {
                    "name": "saradc_meas_num_limit",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable max meas num"
                }
            ],
            "id": "apb_saradc.ctrl2",
            "name": "ctrl2",
            "offset": "0x4",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.filter_ctrl1": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc_filter_factor0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Factor of saradc filter0"
                },
                {
                    "name": "apb_saradc_filter_factor1",
                    "lsb": 26,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Factor of saradc filter1"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.filter_ctrl1",
            "name": "filter_ctrl1",
            "offset": "0x8",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.fsm_wait": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_standby_wait",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "saradc_standby_wait"
                },
                {
                    "name": "saradc_rstb_wait",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "saradc_rstb_wait"
                },
                {
                    "name": "saradc_xpd_wait",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "saradc_xpd_wait"
                }
            ],
            "id": "apb_saradc.fsm_wait",
            "name": "fsm_wait",
            "offset": "0xc",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar1_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "saradc_sar1_status",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc1 status about data and channel"
                }
            ],
            "id": "apb_saradc.sar1_status",
            "name": "sar1_status",
            "offset": "0x10",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar2_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "saradc_sar2_status",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc2 status about data and channel"
                }
            ],
            "id": "apb_saradc.sar2_status",
            "name": "sar2_status",
            "offset": "0x14",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar_patt_tab1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_sar_patt_tab1",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "item 0 ~ 3 for pattern table 1 (each item one byte)"
                }
            ],
            "id": "apb_saradc.sar_patt_tab1",
            "name": "sar_patt_tab1",
            "offset": "0x18",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar_patt_tab2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "saradc_sar_patt_tab2",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Item 4 ~ 7 for pattern table 1 (each item one byte)"
                }
            ],
            "id": "apb_saradc.sar_patt_tab2",
            "name": "sar_patt_tab2",
            "offset": "0x1c",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.onetime_sample": {
            "type": "reg",
            "fields": [
                {
                    "name": "saradc1_onetime_sample",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable adc1 onetime sample"
                },
                {
                    "name": "saradc2_onetime_sample",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable adc2 onetime sample"
                },
                {
                    "name": "saradc_onetime_start",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "trigger adc onetime sample"
                },
                {
                    "name": "saradc_onetime_channel",
                    "lsb": 25,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "13",
                    "doc": "configure onetime channel"
                },
                {
                    "name": "saradc_onetime_atten",
                    "lsb": 23,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure onetime atten"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.onetime_sample",
            "name": "onetime_sample",
            "offset": "0x20",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.arb_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "adc_arb_fix_priority",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "adc2 arbiter uses fixed priority"
                },
                {
                    "name": "adc_arb_wifi_priority",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "Set adc2 arbiter wifi priority"
                },
                {
                    "name": "adc_arb_rtc_priority",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set adc2 arbiter rtc priority"
                },
                {
                    "name": "adc_arb_apb_priority",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set adc2 arbiterapb priority"
                },
                {
                    "name": "adc_arb_grant_force",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "adc2 arbiter force grant"
                },
                {
                    "name": "adc_arb_wifi_force",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "adc2 arbiter force to enable wifi controller"
                },
                {
                    "name": "adc_arb_rtc_force",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "adc2 arbiter force to enable rtc controller"
                },
                {
                    "name": "adc_arb_apb_force",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "adc2 arbiter force to enableapb controller"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.arb_ctrl",
            "name": "arb_ctrl",
            "offset": "0x24",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.filter_ctrl0": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc_filter_reset",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable apb_adc1_filter"
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_filter_channel0",
                    "lsb": 22,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "13",
                    "doc": "configure filter0 to adc channel"
                },
                {
                    "name": "apb_saradc_filter_channel1",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "13",
                    "doc": "configure filter1 to adc channel"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.filter_ctrl0",
            "name": "filter_ctrl0",
            "offset": "0x28",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar1data_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc1_data",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc1 data"
                }
            ],
            "id": "apb_saradc.sar1data_status",
            "name": "sar1data_status",
            "offset": "0x2c",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.sar2data_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc2_data",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc2 data"
                }
            ],
            "id": "apb_saradc.sar2data_status",
            "name": "sar2data_status",
            "offset": "0x30",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.thres0_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_thres0_low",
                    "lsb": 18,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres0 monitor thres"
                },
                {
                    "name": "apb_saradc_thres0_high",
                    "lsb": 5,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "8191",
                    "doc": "saradc thres0 monitor thres"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_thres0_channel",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "13",
                    "doc": "configure thres0 to adc channel"
                }
            ],
            "id": "apb_saradc.thres0_ctrl",
            "name": "thres0_ctrl",
            "offset": "0x34",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.thres1_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_thres1_low",
                    "lsb": 18,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres1 monitor thres"
                },
                {
                    "name": "apb_saradc_thres1_high",
                    "lsb": 5,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "8191",
                    "doc": "saradc thres1 monitor thres"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_thres1_channel",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "13",
                    "doc": "configure thres1 to adc channel"
                }
            ],
            "id": "apb_saradc.thres1_ctrl",
            "name": "thres1_ctrl",
            "offset": "0x38",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.thres_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc_thres0_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable thres0"
                },
                {
                    "name": "apb_saradc_thres1_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable thres1"
                },
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_thres_all_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable thres to all channel"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.thres_ctrl",
            "name": "thres_ctrl",
            "offset": "0x3c",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc1_done_int_ena",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc1 done interrupt enable"
                },
                {
                    "name": "apb_saradc2_done_int_ena",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc2 done interrupt enable"
                },
                {
                    "name": "apb_saradc_thres0_high_int_ena",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres0 high interrupt enable"
                },
                {
                    "name": "apb_saradc_thres1_high_int_ena",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres1 high interrupt enable"
                },
                {
                    "name": "apb_saradc_thres0_low_int_ena",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres0 low interrupt enable"
                },
                {
                    "name": "apb_saradc_thres1_low_int_ena",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "saradc thres1 low  interrupt enable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.int_ena",
            "name": "int_ena",
            "offset": "0x40",
            "doc": "digital saradc int register"
        },
        "apb_saradc.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc1_done_int_raw",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc1 done interrupt raw"
                },
                {
                    "name": "apb_saradc2_done_int_raw",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc2 done interrupt raw"
                },
                {
                    "name": "apb_saradc_thres0_high_int_raw",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres0 high interrupt raw"
                },
                {
                    "name": "apb_saradc_thres1_high_int_raw",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres1 high interrupt raw"
                },
                {
                    "name": "apb_saradc_thres0_low_int_raw",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres0 low interrupt raw"
                },
                {
                    "name": "apb_saradc_thres1_low_int_raw",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres1 low  interrupt raw"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.int_raw",
            "name": "int_raw",
            "offset": "0x44",
            "doc": "digital saradc int register"
        },
        "apb_saradc.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc1_done_int_st",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc1 done interrupt state"
                },
                {
                    "name": "apb_saradc2_done_int_st",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc2 done interrupt state"
                },
                {
                    "name": "apb_saradc_thres0_high_int_st",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres0 high interrupt state"
                },
                {
                    "name": "apb_saradc_thres1_high_int_st",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres1 high interrupt state"
                },
                {
                    "name": "apb_saradc_thres0_low_int_st",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres0 low interrupt state"
                },
                {
                    "name": "apb_saradc_thres1_low_int_st",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "saradc thres1 low  interrupt state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.int_st",
            "name": "int_st",
            "offset": "0x48",
            "doc": "digital saradc int register"
        },
        "apb_saradc.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_saradc1_done_int_clr",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc1 done interrupt clear"
                },
                {
                    "name": "apb_saradc2_done_int_clr",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc2 done interrupt clear"
                },
                {
                    "name": "apb_saradc_thres0_high_int_clr",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc thres0 high interrupt clear"
                },
                {
                    "name": "apb_saradc_thres1_high_int_clr",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc thres1 high interrupt clear"
                },
                {
                    "name": "apb_saradc_thres0_low_int_clr",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc thres0 low interrupt clear"
                },
                {
                    "name": "apb_saradc_thres1_low_int_clr",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "saradc thres1 low  interrupt clear"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "apb_saradc.int_clr",
            "name": "int_clr",
            "offset": "0x4c",
            "doc": "digital saradc int register"
        },
        "apb_saradc.dma_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_adc_trans",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable apb_adc use spi_dma"
                },
                {
                    "name": "apb_adc_reset_fsm",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reset_apb_adc_state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_adc_eof_num",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "the dma_in_suc_eof gen when sample cnt = spi_eof_num"
                }
            ],
            "id": "apb_saradc.dma_conf",
            "name": "dma_conf",
            "offset": "0x50",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.clkm_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_sel",
                    "lsb": 21,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable clk_apll"
                },
                {
                    "name": "clk_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg clk en"
                },
                {
                    "name": "clkm_div_a",
                    "lsb": 14,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Fractional clock divider denominator value"
                },
                {
                    "name": "clkm_div_b",
                    "lsb": 8,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Fractional clock divider numerator value"
                },
                {
                    "name": "clkm_div_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "4",
                    "doc": "Integral I2S clock divider value"
                }
            ],
            "id": "apb_saradc.clkm_conf",
            "name": "clkm_conf",
            "offset": "0x54",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.apb_tsens_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tsens_pu",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "temperature sensor power up"
                },
                {
                    "name": "tsens_clk_div",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "6",
                    "doc": "temperature sensor clock divider"
                },
                {
                    "name": "tsens_in_inv",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "invert temperature sensor data"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tsens_out",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "temperature sensor data out"
                }
            ],
            "id": "apb_saradc.apb_tsens_ctrl",
            "name": "apb_tsens_ctrl",
            "offset": "0x58",
            "doc": "digital tsens configure register"
        },
        "apb_saradc.tsens_ctrl2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tsens_clk_sel",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "tsens clk select"
                },
                {
                    "name": "tsens_clk_inv",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "inv tsens clk"
                },
                {
                    "name": "tsens_xpd_force",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force power up tsens"
                },
                {
                    "name": "tsens_xpd_wait",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "the time that power up tsens need wait"
                }
            ],
            "id": "apb_saradc.tsens_ctrl2",
            "name": "tsens_ctrl2",
            "offset": "0x5c",
            "doc": "digital tsens configure register"
        },
        "apb_saradc.cali": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_saradc_cali_cfg",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "read-write",
                    "reset": "32768",
                    "doc": "saradc cali factor"
                }
            ],
            "id": "apb_saradc.cali",
            "name": "cali",
            "offset": "0x60",
            "doc": "digital saradc configure register"
        },
        "apb_saradc.ctrl_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33583473",
                    "doc": "version"
                }
            ],
            "id": "apb_saradc.ctrl_date",
            "name": "ctrl_date",
            "offset": "0x3fc",
            "doc": "version"
        },
        "assist_debug": {
            "type": "blk",
            "children": [
                "assist_debug.c0re_0_montr_ena",
                "assist_debug.core_0_intr_raw",
                "assist_debug.core_0_intr_ena",
                "assist_debug.core_0_intr_clr",
                "assist_debug.core_0_area_dram0_0_min",
                "assist_debug.core_0_area_dram0_0_max",
                "assist_debug.core_0_area_dram0_1_min",
                "assist_debug.core_0_area_dram0_1_max",
                "assist_debug.core_0_area_pif_0_min",
                "assist_debug.core_0_area_pif_0_max",
                "assist_debug.core_0_area_pif_1_min",
                "assist_debug.core_0_area_pif_1_max",
                "assist_debug.core_0_area_pc",
                "assist_debug.core_0_area_sp",
                "assist_debug.core_0_sp_min",
                "assist_debug.core_0_sp_max",
                "assist_debug.core_0_sp_pc",
                "assist_debug.core_0_rcd_en",
                "assist_debug.core_0_rcd_pdebugpc",
                "assist_debug.core_0_rcd_pdebugsp",
                "assist_debug.core_0_iram0_exception_monitor_0",
                "assist_debug.core_0_iram0_exception_monitor_1",
                "assist_debug.core_0_dram0_exception_monitor_0",
                "assist_debug.core_0_dram0_exception_monitor_1",
                "assist_debug.core_0_dram0_exception_monitor_2",
                "assist_debug.core_0_dram0_exception_monitor_3",
                "assist_debug.core_x_iram0_dram0_exception_monitor_0",
                "assist_debug.core_x_iram0_dram0_exception_monitor_1",
                "assist_debug.log_setting",
                "assist_debug.log_data_0",
                "assist_debug.log_data_mask",
                "assist_debug.log_min",
                "assist_debug.log_max",
                "assist_debug.log_mem_start",
                "assist_debug.log_mem_end",
                "assist_debug.log_mem_writing_addr",
                "assist_debug.log_mem_full_flag",
                "assist_debug.c0re_0_lastpc_before_exception",
                "assist_debug.c0re_0_debug_mode",
                "assist_debug.date"
            ],
            "id": "assist_debug",
            "name": "assist_debug",
            "offset": "0x600ce000",
            "doc": "Debug Assist"
        },
        "assist_debug.c0re_0_montr_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_exception_monitor_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_exception_monitor_ena"
                },
                {
                    "name": "core_0_iram0_exception_monitor_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_exception_monitor_ena"
                },
                {
                    "name": "core_0_sp_spill_max_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_max_ena"
                },
                {
                    "name": "core_0_sp_spill_min_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_min_ena"
                },
                {
                    "name": "core_0_area_pif_1_wr_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_wr_ena"
                },
                {
                    "name": "core_0_area_pif_1_rd_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_rd_ena"
                },
                {
                    "name": "core_0_area_pif_0_wr_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_wr_ena"
                },
                {
                    "name": "core_0_area_pif_0_rd_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_rd_ena"
                },
                {
                    "name": "core_0_area_dram0_1_wr_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_wr_ena"
                },
                {
                    "name": "core_0_area_dram0_1_rd_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_rd_ena"
                },
                {
                    "name": "core_0_area_dram0_0_wr_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_wr_ena"
                },
                {
                    "name": "core_0_area_dram0_0_rd_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_rd_ena"
                }
            ],
            "id": "assist_debug.c0re_0_montr_ena",
            "name": "c0re_0_montr_ena",
            "offset": "0x0",
            "doc": "ASSIST_DEBUG_C0RE_0_MONTR_ENA_REG"
        },
        "assist_debug.core_0_intr_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_exception_monitor_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_exception_monitor_raw"
                },
                {
                    "name": "core_0_iram0_exception_monitor_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_exception_monitor_raw"
                },
                {
                    "name": "core_0_sp_spill_max_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_max_raw"
                },
                {
                    "name": "core_0_sp_spill_min_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_min_raw"
                },
                {
                    "name": "core_0_area_pif_1_wr_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_wr_raw"
                },
                {
                    "name": "core_0_area_pif_1_rd_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_rd_raw"
                },
                {
                    "name": "core_0_area_pif_0_wr_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_wr_raw"
                },
                {
                    "name": "core_0_area_pif_0_rd_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_rd_raw"
                },
                {
                    "name": "core_0_area_dram0_1_wr_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_wr_raw"
                },
                {
                    "name": "core_0_area_dram0_1_rd_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_rd_raw"
                },
                {
                    "name": "core_0_area_dram0_0_wr_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_wr_raw"
                },
                {
                    "name": "core_0_area_dram0_0_rd_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_rd_raw"
                }
            ],
            "id": "assist_debug.core_0_intr_raw",
            "name": "core_0_intr_raw",
            "offset": "0x4",
            "doc": "ASSIST_DEBUG_CORE_0_INTR_RAW_REG"
        },
        "assist_debug.core_0_intr_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_exception_monitor_rls",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_exception_monitor_ena"
                },
                {
                    "name": "core_0_iram0_exception_monitor_rls",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_exception_monitor_ena"
                },
                {
                    "name": "core_0_sp_spill_max_intr_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_max_intr_ena"
                },
                {
                    "name": "core_0_sp_spill_min_intr_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_min_intr_ena"
                },
                {
                    "name": "core_0_area_pif_1_wr_intr_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_wr_intr_ena"
                },
                {
                    "name": "core_0_area_pif_1_rd_intr_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_rd_intr_ena"
                },
                {
                    "name": "core_0_area_pif_0_wr_intr_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_wr_intr_ena"
                },
                {
                    "name": "core_0_area_pif_0_rd_intr_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_rd_intr_ena"
                },
                {
                    "name": "core_0_area_dram0_1_wr_intr_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_wr_intr_ena"
                },
                {
                    "name": "core_0_area_dram0_1_rd_intr_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_rd_intr_ena"
                },
                {
                    "name": "core_0_area_dram0_0_wr_intr_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_wr_intr_ena"
                },
                {
                    "name": "core_0_area_dram0_0_rd_intr_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_rd_intr_ena"
                }
            ],
            "id": "assist_debug.core_0_intr_ena",
            "name": "core_0_intr_ena",
            "offset": "0x8",
            "doc": "ASSIST_DEBUG_CORE_0_INTR_ENA_REG"
        },
        "assist_debug.core_0_intr_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_exception_monitor_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_exception_monitor_clr"
                },
                {
                    "name": "core_0_iram0_exception_monitor_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_exception_monitor_clr"
                },
                {
                    "name": "core_0_sp_spill_max_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_max_clr"
                },
                {
                    "name": "core_0_sp_spill_min_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_spill_min_clr"
                },
                {
                    "name": "core_0_area_pif_1_wr_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_wr_clr"
                },
                {
                    "name": "core_0_area_pif_1_rd_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_rd_clr"
                },
                {
                    "name": "core_0_area_pif_0_wr_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_wr_clr"
                },
                {
                    "name": "core_0_area_pif_0_rd_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_rd_clr"
                },
                {
                    "name": "core_0_area_dram0_1_wr_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_wr_clr"
                },
                {
                    "name": "core_0_area_dram0_1_rd_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_rd_clr"
                },
                {
                    "name": "core_0_area_dram0_0_wr_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_wr_clr"
                },
                {
                    "name": "core_0_area_dram0_0_rd_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_rd_clr"
                }
            ],
            "id": "assist_debug.core_0_intr_clr",
            "name": "core_0_intr_clr",
            "offset": "0xc",
            "doc": "ASSIST_DEBUG_CORE_0_INTR_CLR_REG"
        },
        "assist_debug.core_0_area_dram0_0_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_dram0_0_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294967295",
                    "doc": "reg_core_0_area_dram0_0_min"
                }
            ],
            "id": "assist_debug.core_0_area_dram0_0_min",
            "name": "core_0_area_dram0_0_min",
            "offset": "0x10",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_REG"
        },
        "assist_debug.core_0_area_dram0_0_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_dram0_0_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_0_max"
                }
            ],
            "id": "assist_debug.core_0_area_dram0_0_max",
            "name": "core_0_area_dram0_0_max",
            "offset": "0x14",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_REG"
        },
        "assist_debug.core_0_area_dram0_1_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_dram0_1_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294967295",
                    "doc": "reg_core_0_area_dram0_1_min"
                }
            ],
            "id": "assist_debug.core_0_area_dram0_1_min",
            "name": "core_0_area_dram0_1_min",
            "offset": "0x18",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_REG"
        },
        "assist_debug.core_0_area_dram0_1_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_dram0_1_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_dram0_1_max"
                }
            ],
            "id": "assist_debug.core_0_area_dram0_1_max",
            "name": "core_0_area_dram0_1_max",
            "offset": "0x1c",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_REG"
        },
        "assist_debug.core_0_area_pif_0_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_pif_0_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294967295",
                    "doc": "reg_core_0_area_pif_0_min"
                }
            ],
            "id": "assist_debug.core_0_area_pif_0_min",
            "name": "core_0_area_pif_0_min",
            "offset": "0x20",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_REG"
        },
        "assist_debug.core_0_area_pif_0_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_pif_0_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_0_max"
                }
            ],
            "id": "assist_debug.core_0_area_pif_0_max",
            "name": "core_0_area_pif_0_max",
            "offset": "0x24",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_REG"
        },
        "assist_debug.core_0_area_pif_1_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_pif_1_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294967295",
                    "doc": "reg_core_0_area_pif_1_min"
                }
            ],
            "id": "assist_debug.core_0_area_pif_1_min",
            "name": "core_0_area_pif_1_min",
            "offset": "0x28",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_REG"
        },
        "assist_debug.core_0_area_pif_1_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_pif_1_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_area_pif_1_max"
                }
            ],
            "id": "assist_debug.core_0_area_pif_1_max",
            "name": "core_0_area_pif_1_max",
            "offset": "0x2c",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_REG"
        },
        "assist_debug.core_0_area_pc": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_pc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_pc"
                }
            ],
            "id": "assist_debug.core_0_area_pc",
            "name": "core_0_area_pc",
            "offset": "0x30",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_PC_REG"
        },
        "assist_debug.core_0_area_sp": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_area_sp",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_area_sp"
                }
            ],
            "id": "assist_debug.core_0_area_sp",
            "name": "core_0_area_sp",
            "offset": "0x34",
            "doc": "ASSIST_DEBUG_CORE_0_AREA_SP_REG"
        },
        "assist_debug.core_0_sp_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_sp_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_sp_min"
                }
            ],
            "id": "assist_debug.core_0_sp_min",
            "name": "core_0_sp_min",
            "offset": "0x38",
            "doc": "ASSIST_DEBUG_CORE_0_SP_MIN_REG"
        },
        "assist_debug.core_0_sp_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_sp_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4294967295",
                    "doc": "reg_core_0_sp_max"
                }
            ],
            "id": "assist_debug.core_0_sp_max",
            "name": "core_0_sp_max",
            "offset": "0x3c",
            "doc": "ASSIST_DEBUG_CORE_0_SP_MAX_REG"
        },
        "assist_debug.core_0_sp_pc": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_sp_pc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_sp_pc"
                }
            ],
            "id": "assist_debug.core_0_sp_pc",
            "name": "core_0_sp_pc",
            "offset": "0x40",
            "doc": "ASSIST_DEBUG_CORE_0_SP_PC_REG"
        },
        "assist_debug.core_0_rcd_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_rcd_pdebugen",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_rcd_pdebugen"
                },
                {
                    "name": "core_0_rcd_recorden",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_0_rcd_recorden"
                }
            ],
            "id": "assist_debug.core_0_rcd_en",
            "name": "core_0_rcd_en",
            "offset": "0x44",
            "doc": "ASSIST_DEBUG_CORE_0_RCD_EN_REG"
        },
        "assist_debug.core_0_rcd_pdebugpc": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_rcd_pdebugpc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_rcd_pdebugpc"
                }
            ],
            "id": "assist_debug.core_0_rcd_pdebugpc",
            "name": "core_0_rcd_pdebugpc",
            "offset": "0x48",
            "doc": "ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_REG"
        },
        "assist_debug.core_0_rcd_pdebugsp": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_rcd_pdebugsp",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_rcd_pdebugsp"
                }
            ],
            "id": "assist_debug.core_0_rcd_pdebugsp",
            "name": "core_0_rcd_pdebugsp",
            "offset": "0x4c",
            "doc": "ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG"
        },
        "assist_debug.core_0_iram0_exception_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_recording_loadstore_0",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_loadstore_0"
                },
                {
                    "name": "core_0_iram0_recording_wr_0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_wr_0"
                },
                {
                    "name": "core_0_iram0_recording_addr_0",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_addr_0"
                }
            ],
            "id": "assist_debug.core_0_iram0_exception_monitor_0",
            "name": "core_0_iram0_exception_monitor_0",
            "offset": "0x50",
            "doc": "ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG"
        },
        "assist_debug.core_0_iram0_exception_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_recording_loadstore_1",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_loadstore_1"
                },
                {
                    "name": "core_0_iram0_recording_wr_1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_wr_1"
                },
                {
                    "name": "core_0_iram0_recording_addr_1",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_iram0_recording_addr_1"
                }
            ],
            "id": "assist_debug.core_0_iram0_exception_monitor_1",
            "name": "core_0_iram0_exception_monitor_1",
            "offset": "0x54",
            "doc": "ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_REG"
        },
        "assist_debug.core_0_dram0_exception_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_recording_byteen_0",
                    "lsb": 25,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_byteen_0"
                },
                {
                    "name": "core_0_dram0_recording_wr_0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_wr_0"
                },
                {
                    "name": "core_0_dram0_recording_addr_0",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_addr_0"
                }
            ],
            "id": "assist_debug.core_0_dram0_exception_monitor_0",
            "name": "core_0_dram0_exception_monitor_0",
            "offset": "0x58",
            "doc": "ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_REG"
        },
        "assist_debug.core_0_dram0_exception_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_dram0_recording_pc_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_pc_0"
                }
            ],
            "id": "assist_debug.core_0_dram0_exception_monitor_1",
            "name": "core_0_dram0_exception_monitor_1",
            "offset": "0x5c",
            "doc": "ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG"
        },
        "assist_debug.core_0_dram0_exception_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_recording_byteen_1",
                    "lsb": 25,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_byteen_1"
                },
                {
                    "name": "core_0_dram0_recording_wr_1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_wr_1"
                },
                {
                    "name": "core_0_dram0_recording_addr_1",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_addr_1"
                }
            ],
            "id": "assist_debug.core_0_dram0_exception_monitor_2",
            "name": "core_0_dram0_exception_monitor_2",
            "offset": "0x60",
            "doc": "ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG"
        },
        "assist_debug.core_0_dram0_exception_monitor_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_dram0_recording_pc_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_dram0_recording_pc_1"
                }
            ],
            "id": "assist_debug.core_0_dram0_exception_monitor_3",
            "name": "core_0_dram0_exception_monitor_3",
            "offset": "0x64",
            "doc": "ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_REG"
        },
        "assist_debug.core_x_iram0_dram0_exception_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_dram0_limit_cycle_0",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_x_iram0_dram0_limit_cycle_0"
                }
            ],
            "id": "assist_debug.core_x_iram0_dram0_exception_monitor_0",
            "name": "core_x_iram0_dram0_exception_monitor_0",
            "offset": "0x68",
            "doc": "ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_REG"
        },
        "assist_debug.core_x_iram0_dram0_exception_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_dram0_limit_cycle_1",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core_x_iram0_dram0_limit_cycle_1"
                }
            ],
            "id": "assist_debug.core_x_iram0_dram0_exception_monitor_1",
            "name": "core_x_iram0_dram0_exception_monitor_1",
            "offset": "0x6c",
            "doc": "ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_REG"
        },
        "assist_debug.log_setting": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "log_mem_loop_enable",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_log_mem_loop_enable"
                },
                {
                    "name": "log_mode",
                    "lsb": 3,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_mode"
                },
                {
                    "name": "log_ena",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_ena"
                }
            ],
            "id": "assist_debug.log_setting",
            "name": "log_setting",
            "offset": "0x70",
            "doc": "ASSIST_DEBUG_LOG_SETTING"
        },
        "assist_debug.log_data_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_data_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_data_0"
                }
            ],
            "id": "assist_debug.log_data_0",
            "name": "log_data_0",
            "offset": "0x74",
            "doc": "ASSIST_DEBUG_LOG_DATA_0_REG"
        },
        "assist_debug.log_data_mask": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "log_data_size",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_data_size"
                }
            ],
            "id": "assist_debug.log_data_mask",
            "name": "log_data_mask",
            "offset": "0x78",
            "doc": "ASSIST_DEBUG_LOG_DATA_MASK_REG"
        },
        "assist_debug.log_min": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_min",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_min"
                }
            ],
            "id": "assist_debug.log_min",
            "name": "log_min",
            "offset": "0x7c",
            "doc": "ASSIST_DEBUG_LOG_MIN_REG"
        },
        "assist_debug.log_max": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_max",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_max"
                }
            ],
            "id": "assist_debug.log_max",
            "name": "log_max",
            "offset": "0x80",
            "doc": "ASSIST_DEBUG_LOG_MAX_REG"
        },
        "assist_debug.log_mem_start": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_mem_start",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_mem_start"
                }
            ],
            "id": "assist_debug.log_mem_start",
            "name": "log_mem_start",
            "offset": "0x84",
            "doc": "ASSIST_DEBUG_LOG_MEM_START_REG"
        },
        "assist_debug.log_mem_end": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_mem_end",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_log_mem_end"
                }
            ],
            "id": "assist_debug.log_mem_end",
            "name": "log_mem_end",
            "offset": "0x88",
            "doc": "ASSIST_DEBUG_LOG_MEM_END_REG"
        },
        "assist_debug.log_mem_writing_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "log_mem_writing_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_log_mem_writing_addr"
                }
            ],
            "id": "assist_debug.log_mem_writing_addr",
            "name": "log_mem_writing_addr",
            "offset": "0x8c",
            "doc": "ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_REG"
        },
        "assist_debug.log_mem_full_flag": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clr_log_mem_full_flag",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clr_log_mem_full_flag"
                },
                {
                    "name": "log_mem_full_flag",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_log_mem_full_flag"
                }
            ],
            "id": "assist_debug.log_mem_full_flag",
            "name": "log_mem_full_flag",
            "offset": "0x90",
            "doc": "ASSIST_DEBUG_LOG_MEM_FULL_FLAG_REG"
        },
        "assist_debug.c0re_0_lastpc_before_exception": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_lastpc_before_exc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_lastpc_before_exc"
                }
            ],
            "id": "assist_debug.c0re_0_lastpc_before_exception",
            "name": "c0re_0_lastpc_before_exception",
            "offset": "0x94",
            "doc": "ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION"
        },
        "assist_debug.c0re_0_debug_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_debug_module_active",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_debug_module_active"
                },
                {
                    "name": "core_0_debug_mode",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core_0_debug_mode"
                }
            ],
            "id": "assist_debug.c0re_0_debug_mode",
            "name": "c0re_0_debug_mode",
            "offset": "0x98",
            "doc": "ASSIST_DEBUG_C0RE_0_DEBUG_MODE"
        },
        "assist_debug.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "assist_debug_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33587216",
                    "doc": "reg_assist_debug_date"
                }
            ],
            "id": "assist_debug.date",
            "name": "date",
            "offset": "0x1fc",
            "doc": "ASSIST_DEBUG_DATE_REG"
        },
        "dma": {
            "type": "blk",
            "children": [
                "dma.int_raw_ch0",
                "dma.int_st_ch0",
                "dma.int_ena_ch0",
                "dma.int_clr_ch0",
                "dma.int_raw_ch1",
                "dma.int_st_ch1",
                "dma.int_ena_ch1",
                "dma.int_clr_ch1",
                "dma.int_raw_ch2",
                "dma.int_st_ch2",
                "dma.int_ena_ch2",
                "dma.int_clr_ch2",
                "dma.ahb_test",
                "dma.misc_conf",
                "dma.date",
                "dma.in_conf0_ch0",
                "dma.in_conf1_ch0",
                "dma.infifo_status_ch0",
                "dma.in_pop_ch0",
                "dma.in_link_ch0",
                "dma.in_state_ch0",
                "dma.in_suc_eof_des_addr_ch0",
                "dma.in_err_eof_des_addr_ch0",
                "dma.in_dscr_ch0",
                "dma.in_dscr_bf0_ch0",
                "dma.in_dscr_bf1_ch0",
                "dma.in_pri_ch0",
                "dma.in_peri_sel_ch0",
                "dma.out_conf0_ch0",
                "dma.out_conf1_ch0",
                "dma.outfifo_status_ch0",
                "dma.out_push_ch0",
                "dma.out_link_ch0",
                "dma.out_state_ch0",
                "dma.out_eof_des_addr_ch0",
                "dma.out_eof_bfr_des_addr_ch0",
                "dma.out_dscr_ch0",
                "dma.out_dscr_bf0_ch0",
                "dma.out_dscr_bf1_ch0",
                "dma.out_pri_ch0",
                "dma.out_peri_sel_ch0",
                "dma.in_conf0_ch1",
                "dma.in_conf1_ch1",
                "dma.infifo_status_ch1",
                "dma.in_pop_ch1",
                "dma.in_link_ch1",
                "dma.in_state_ch1",
                "dma.in_suc_eof_des_addr_ch1",
                "dma.in_err_eof_des_addr_ch1",
                "dma.in_dscr_ch1",
                "dma.in_dscr_bf0_ch1",
                "dma.in_dscr_bf1_ch1",
                "dma.in_pri_ch1",
                "dma.in_peri_sel_ch1",
                "dma.out_conf0_ch1",
                "dma.out_conf1_ch1",
                "dma.outfifo_status_ch1",
                "dma.out_push_ch1",
                "dma.out_link_ch1",
                "dma.out_state_ch1",
                "dma.out_eof_des_addr_ch1",
                "dma.out_eof_bfr_des_addr_ch1",
                "dma.out_dscr_ch1",
                "dma.out_dscr_bf0_ch1",
                "dma.out_dscr_bf1_ch1",
                "dma.out_pri_ch1",
                "dma.out_peri_sel_ch1",
                "dma.in_conf0_ch2",
                "dma.in_conf1_ch2",
                "dma.infifo_status_ch2",
                "dma.in_pop_ch2",
                "dma.in_link_ch2",
                "dma.in_state_ch2",
                "dma.in_suc_eof_des_addr_ch2",
                "dma.in_err_eof_des_addr_ch2",
                "dma.in_dscr_ch2",
                "dma.in_dscr_bf0_ch2",
                "dma.in_dscr_bf1_ch2",
                "dma.in_pri_ch2",
                "dma.in_peri_sel_ch2",
                "dma.out_conf0_ch2",
                "dma.out_conf1_ch2",
                "dma.outfifo_status_ch2",
                "dma.out_push_ch2",
                "dma.out_link_ch2",
                "dma.out_state_ch2",
                "dma.out_eof_des_addr_ch2",
                "dma.out_eof_bfr_des_addr_ch2",
                "dma.out_dscr_ch2",
                "dma.out_dscr_bf0_ch2",
                "dma.out_dscr_bf1_ch2",
                "dma.out_pri_ch2",
                "dma.out_peri_sel_ch2"
            ],
            "id": "dma",
            "name": "dma",
            "offset": "0x6003f000",
            "doc": "DMA (Direct Memory Access) Controller"
        },
        "dma.int_raw_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch0_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is underflow."
                },
                {
                    "name": "outfifo_ovf_ch0_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 0 is overflow."
                },
                {
                    "name": "infifo_udf_ch0_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is underflow."
                },
                {
                    "name": "infifo_ovf_ch0_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 0 is overflow."
                },
                {
                    "name": "out_total_eof_ch0_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 0."
                },
                {
                    "name": "in_dscr_empty_ch0_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 0."
                },
                {
                    "name": "out_dscr_err_ch0_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 0."
                },
                {
                    "name": "in_dscr_err_ch0_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 0."
                },
                {
                    "name": "out_eof_ch0_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 0."
                },
                {
                    "name": "out_done_ch0_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 0."
                },
                {
                    "name": "in_err_eof_ch0_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 0. For other peripherals, this raw interrupt is reserved."
                },
                {
                    "name": "in_suc_eof_ch0_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 0."
                },
                {
                    "name": "in_done_ch0_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 0."
                }
            ],
            "id": "dma.int_raw_ch0",
            "name": "int_raw_ch0",
            "offset": "0x0",
            "doc": "DMA_INT_RAW_CH0_REG."
        },
        "dma.int_st_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch0_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch0_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch0_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch0_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch0_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch0_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch0_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch0_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch0_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch0_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch0_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch0_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch0_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_st_ch0",
            "name": "int_st_ch0",
            "offset": "0x4",
            "doc": "DMA_INT_ST_CH0_REG."
        },
        "dma.int_ena_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch0_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch0_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch0_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch0_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch0_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch0_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch0_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch0_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch0_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch0_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch0_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch0_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch0_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_ena_ch0",
            "name": "int_ena_ch0",
            "offset": "0x8",
            "doc": "DMA_INT_ENA_CH0_REG."
        },
        "dma.int_clr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch0_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch0_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch0_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch0_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch0_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch0_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch0_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch0_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch0_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch0_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch0_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch0_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch0_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_clr_ch0",
            "name": "int_clr_ch0",
            "offset": "0xc",
            "doc": "DMA_INT_CLR_CH0_REG."
        },
        "dma.int_raw_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch1_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is underflow."
                },
                {
                    "name": "outfifo_ovf_ch1_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 1 is overflow."
                },
                {
                    "name": "infifo_udf_ch1_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is underflow."
                },
                {
                    "name": "infifo_ovf_ch1_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 1 is overflow."
                },
                {
                    "name": "out_total_eof_ch1_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 1."
                },
                {
                    "name": "in_dscr_empty_ch1_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 1."
                },
                {
                    "name": "out_dscr_err_ch1_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 1."
                },
                {
                    "name": "in_dscr_err_ch1_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 1."
                },
                {
                    "name": "out_eof_ch1_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 1."
                },
                {
                    "name": "out_done_ch1_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 1."
                },
                {
                    "name": "in_err_eof_ch1_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 1. For other peripherals, this raw interrupt is reserved."
                },
                {
                    "name": "in_suc_eof_ch1_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 1."
                },
                {
                    "name": "in_done_ch1_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 1."
                }
            ],
            "id": "dma.int_raw_ch1",
            "name": "int_raw_ch1",
            "offset": "0x10",
            "doc": "DMA_INT_RAW_CH1_REG."
        },
        "dma.int_st_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch1_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch1_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch1_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch1_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch1_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch1_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch1_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch1_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch1_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch1_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch1_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch1_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch1_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_st_ch1",
            "name": "int_st_ch1",
            "offset": "0x14",
            "doc": "DMA_INT_ST_CH1_REG."
        },
        "dma.int_ena_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch1_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch1_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch1_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch1_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch1_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch1_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch1_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch1_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch1_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch1_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch1_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch1_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch1_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_ena_ch1",
            "name": "int_ena_ch1",
            "offset": "0x18",
            "doc": "DMA_INT_ENA_CH1_REG."
        },
        "dma.int_clr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch1_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch1_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch1_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch1_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch1_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch1_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch1_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch1_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch1_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch1_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch1_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch1_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch1_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_clr_ch1",
            "name": "int_clr_ch1",
            "offset": "0x1c",
            "doc": "DMA_INT_CLR_CH1_REG."
        },
        "dma.int_raw_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch2_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is underflow."
                },
                {
                    "name": "outfifo_ovf_ch2_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Tx channel 2 is overflow."
                },
                {
                    "name": "infifo_udf_ch2_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is underflow."
                },
                {
                    "name": "infifo_ovf_ch2_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This raw interrupt bit turns to high level when level 1 fifo of Rx channel 2 is overflow."
                },
                {
                    "name": "out_total_eof_ch2_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data corresponding a outlink (includes one link descriptor or few link descriptors) is transmitted out for Tx channel 2."
                },
                {
                    "name": "in_dscr_empty_ch2_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when Rx buffer pointed by inlink is full and receiving data is not completed, but there is no more inlink for Rx channel 2."
                },
                {
                    "name": "out_dscr_err_ch2_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting outlink descriptor error, including owner error, the second and third word error of outlink descriptor for Tx channel 2."
                },
                {
                    "name": "in_dscr_err_ch2_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when detecting inlink descriptor error, including owner error, the second and third word error of inlink descriptor for Rx channel 2."
                },
                {
                    "name": "out_eof_ch2_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been read from memory for Tx channel 2."
                },
                {
                    "name": "out_done_ch2_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one outlink descriptor has been transmitted to peripherals for Tx channel 2."
                },
                {
                    "name": "in_err_eof_ch2_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when data error is detected only in the case that the peripheral is UHCI0 for Rx channel 2. For other peripherals, this raw interrupt is reserved."
                },
                {
                    "name": "in_suc_eof_ch2_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2. For UHCI0, the raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received and no data error is detected for Rx channel 2."
                },
                {
                    "name": "in_done_ch2_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when the last data pointed by one inlink descriptor has been received for Rx channel 2."
                }
            ],
            "id": "dma.int_raw_ch2",
            "name": "int_raw_ch2",
            "offset": "0x20",
            "doc": "DMA_INT_RAW_CH2_REG."
        },
        "dma.int_st_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch2_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch2_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch2_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch2_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch2_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch2_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch2_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch2_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch2_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch2_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch2_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch2_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch2_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_st_ch2",
            "name": "int_st_ch2",
            "offset": "0x24",
            "doc": "DMA_INT_ST_CH2_REG."
        },
        "dma.int_ena_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch2_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch2_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch2_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch2_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch2_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch2_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch2_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch2_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch2_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch2_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch2_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch2_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch2_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_ena_ch2",
            "name": "int_ena_ch2",
            "offset": "0x28",
            "doc": "DMA_INT_ENA_CH2_REG."
        },
        "dma.int_clr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_udf_ch2_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "outfifo_ovf_ch2_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUTFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_udf_ch2_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_UDF_L1_CH_INT interrupt."
                },
                {
                    "name": "infifo_ovf_ch2_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the INFIFO_OVF_L1_CH_INT interrupt."
                },
                {
                    "name": "out_total_eof_ch2_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_TOTAL_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_empty_ch2_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_EMPTY_CH_INT interrupt."
                },
                {
                    "name": "out_dscr_err_ch2_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "in_dscr_err_ch2_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DSCR_ERR_CH_INT interrupt."
                },
                {
                    "name": "out_eof_ch2_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_EOF_CH_INT interrupt."
                },
                {
                    "name": "out_done_ch2_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the OUT_DONE_CH_INT interrupt."
                },
                {
                    "name": "in_err_eof_ch2_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_ERR_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_suc_eof_ch2_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_SUC_EOF_CH_INT interrupt."
                },
                {
                    "name": "in_done_ch2_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the IN_DONE_CH_INT interrupt."
                }
            ],
            "id": "dma.int_clr_ch2",
            "name": "int_clr_ch2",
            "offset": "0x2c",
            "doc": "DMA_INT_CLR_CH2_REG."
        },
        "dma.ahb_test": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ahb_testaddr",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ahb_testmode",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                }
            ],
            "id": "dma.ahb_test",
            "name": "ahb_test",
            "offset": "0x40",
            "doc": "DMA_AHB_TEST_REG."
        },
        "dma.misc_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en"
                },
                {
                    "name": "arb_pri_dis",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to disable priority arbitration function."
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ahbm_rst_inter",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit, then clear this bit to reset the internal ahb FSM."
                }
            ],
            "id": "dma.misc_conf",
            "name": "misc_conf",
            "offset": "0x44",
            "doc": "DMA_MISC_CONF_REG."
        },
        "dma.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33587792",
                    "doc": "register version."
                }
            ],
            "id": "dma.date",
            "name": "date",
            "offset": "0x48",
            "doc": "DMA_DATE_REG."
        },
        "dma.in_conf0_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_trans_en_ch0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit 1 to enable automatic transmitting data from memory to memory via DMA."
                },
                {
                    "name": "in_data_burst_en_ch0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 0 receiving data when accessing internal SRAM."
                },
                {
                    "name": "indscr_burst_en_ch0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 0 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "in_loop_test_ch0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_rst_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 0 Rx FSM and Rx FIFO pointer."
                }
            ],
            "id": "dma.in_conf0_ch0",
            "name": "in_conf0_ch0",
            "offset": "0x70",
            "doc": "DMA_IN_CONF0_CH0_REG."
        },
        "dma.in_conf1_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_check_owner_ch0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.in_conf1_ch0",
            "name": "in_conf1_ch0",
            "offset": "0x74",
            "doc": "DMA_IN_CONF1_CH0_REG."
        },
        "dma.infifo_status_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_buf_hungry_ch0",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_4b_ch0",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_3b_ch0",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_2b_ch0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_1b_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_cnt_ch0",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Rx FIFO for Rx channel 0."
                },
                {
                    "name": "infifo_empty_ch0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO empty signal for Rx channel 0."
                },
                {
                    "name": "infifo_full_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO full signal for Rx channel 0."
                }
            ],
            "id": "dma.infifo_status_ch0",
            "name": "infifo_status_ch0",
            "offset": "0x78",
            "doc": "DMA_INFIFO_STATUS_CH0_REG."
        },
        "dma.in_pop_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_pop_ch0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to pop data from DMA FIFO."
                },
                {
                    "name": "infifo_rdata_ch0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "2048",
                    "doc": "This register stores the data popping from DMA FIFO."
                }
            ],
            "id": "dma.in_pop_ch0",
            "name": "in_pop_ch0",
            "offset": "0x7c",
            "doc": "DMA_IN_POP_CH0_REG."
        },
        "dma.in_link_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "inlink_park_ch0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working."
                },
                {
                    "name": "inlink_restart_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to mount a new inlink descriptor."
                },
                {
                    "name": "inlink_start_ch0",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_stop_ch0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_auto_ret_ch0",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data."
                },
                {
                    "name": "inlink_addr_ch0",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first inlink descriptor's address."
                }
            ],
            "id": "dma.in_link_ch0",
            "name": "in_link_ch0",
            "offset": "0x80",
            "doc": "DMA_IN_LINK_CH0_REG."
        },
        "dma.in_state_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_state_ch0",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_dscr_state_ch0",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "inlink_dscr_addr_ch0",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current inlink descriptor's address."
                }
            ],
            "id": "dma.in_state_ch0",
            "name": "in_state_ch0",
            "offset": "0x84",
            "doc": "DMA_IN_STATE_CH0_REG."
        },
        "dma.in_suc_eof_des_addr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_suc_eof_des_addr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.in_suc_eof_des_addr_ch0",
            "name": "in_suc_eof_des_addr_ch0",
            "offset": "0x88",
            "doc": "DMA_IN_SUC_EOF_DES_ADDR_CH0_REG."
        },
        "dma.in_err_eof_des_addr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_err_eof_des_addr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0."
                }
            ],
            "id": "dma.in_err_eof_des_addr_ch0",
            "name": "in_err_eof_des_addr_ch0",
            "offset": "0x8c",
            "doc": "DMA_IN_ERR_EOF_DES_ADDR_CH0_REG."
        },
        "dma.in_dscr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current inlink descriptor x."
                }
            ],
            "id": "dma.in_dscr_ch0",
            "name": "in_dscr_ch0",
            "offset": "0x90",
            "doc": "DMA_IN_DSCR_CH0_REG."
        },
        "dma.in_dscr_bf0_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf0_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last inlink descriptor x-1."
                }
            ],
            "id": "dma.in_dscr_bf0_ch0",
            "name": "in_dscr_bf0_ch0",
            "offset": "0x94",
            "doc": "DMA_IN_DSCR_BF0_CH0_REG."
        },
        "dma.in_dscr_bf1_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf1_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.in_dscr_bf1_ch0",
            "name": "in_dscr_bf1_ch0",
            "offset": "0x98",
            "doc": "DMA_IN_DSCR_BF1_CH0_REG."
        },
        "dma.in_pri_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_pri_ch0",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Rx channel 0. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.in_pri_ch0",
            "name": "in_pri_ch0",
            "offset": "0x9c",
            "doc": "DMA_IN_PRI_CH0_REG."
        },
        "dma.in_peri_sel_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_in_sel_ch0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Rx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.in_peri_sel_ch0",
            "name": "in_peri_sel_ch0",
            "offset": "0xa0",
            "doc": "DMA_IN_PERI_SEL_CH0_REG."
        },
        "dma.out_conf0_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_data_burst_en_ch0",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 0 transmitting data when accessing internal SRAM."
                },
                {
                    "name": "outdscr_burst_en_ch0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 0 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "out_eof_mode_ch0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 0 is generated when data need to transmit has been popped from FIFO in DMA"
                },
                {
                    "name": "out_auto_wrback_ch0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted."
                },
                {
                    "name": "out_loop_test_ch0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_rst_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 0 Tx FSM and Tx FIFO pointer."
                }
            ],
            "id": "dma.out_conf0_ch0",
            "name": "out_conf0_ch0",
            "offset": "0xd0",
            "doc": "DMA_OUT_CONF0_CH0_REG."
        },
        "dma.out_conf1_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_check_owner_ch0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.out_conf1_ch0",
            "name": "out_conf1_ch0",
            "offset": "0xd4",
            "doc": "DMA_OUT_CONF1_CH0_REG."
        },
        "dma.outfifo_status_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_remain_under_4b_ch0",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_3b_ch0",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_2b_ch0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_1b_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_cnt_ch0",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Tx FIFO for Tx channel 0."
                },
                {
                    "name": "outfifo_empty_ch0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Tx FIFO empty signal for Tx channel 0."
                },
                {
                    "name": "outfifo_full_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "L1 Tx FIFO full signal for Tx channel 0."
                }
            ],
            "id": "dma.outfifo_status_ch0",
            "name": "outfifo_status_ch0",
            "offset": "0xd8",
            "doc": "DMA_OUTFIFO_STATUS_CH0_REG."
        },
        "dma.out_push_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_push_ch0",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to push data into DMA FIFO."
                },
                {
                    "name": "outfifo_wdata_ch0",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the data that need to be pushed into DMA FIFO."
                }
            ],
            "id": "dma.out_push_ch0",
            "name": "out_push_ch0",
            "offset": "0xdc",
            "doc": "DMA_OUT_PUSH_CH0_REG."
        },
        "dma.out_link_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outlink_park_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working."
                },
                {
                    "name": "outlink_restart_ch0",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to restart a new outlink from the last address."
                },
                {
                    "name": "outlink_start_ch0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_stop_ch0",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_addr_ch0",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first outlink descriptor's address."
                }
            ],
            "id": "dma.out_link_ch0",
            "name": "out_link_ch0",
            "offset": "0xe0",
            "doc": "DMA_OUT_LINK_CH0_REG."
        },
        "dma.out_state_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_state_ch0",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_dscr_state_ch0",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "outlink_dscr_addr_ch0",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current outlink descriptor's address."
                }
            ],
            "id": "dma.out_state_ch0",
            "name": "out_state_ch0",
            "offset": "0xe4",
            "doc": "DMA_OUT_STATE_CH0_REG."
        },
        "dma.out_eof_des_addr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_des_addr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.out_eof_des_addr_ch0",
            "name": "out_eof_des_addr_ch0",
            "offset": "0xe8",
            "doc": "DMA_OUT_EOF_DES_ADDR_CH0_REG."
        },
        "dma.out_eof_bfr_des_addr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_bfr_des_addr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor before the last outlink descriptor."
                }
            ],
            "id": "dma.out_eof_bfr_des_addr_ch0",
            "name": "out_eof_bfr_des_addr_ch0",
            "offset": "0xec",
            "doc": "DMA_OUT_EOF_BFR_DES_ADDR_CH0_REG."
        },
        "dma.out_dscr_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current outlink descriptor y."
                }
            ],
            "id": "dma.out_dscr_ch0",
            "name": "out_dscr_ch0",
            "offset": "0xf0",
            "doc": "DMA_OUT_DSCR_CH0_REG."
        },
        "dma.out_dscr_bf0_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf0_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last outlink descriptor y-1."
                }
            ],
            "id": "dma.out_dscr_bf0_ch0",
            "name": "out_dscr_bf0_ch0",
            "offset": "0xf4",
            "doc": "DMA_OUT_DSCR_BF0_CH0_REG."
        },
        "dma.out_dscr_bf1_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf1_ch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.out_dscr_bf1_ch0",
            "name": "out_dscr_bf1_ch0",
            "offset": "0xf8",
            "doc": "DMA_OUT_DSCR_BF1_CH0_REG."
        },
        "dma.out_pri_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_pri_ch0",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Tx channel 0. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.out_pri_ch0",
            "name": "out_pri_ch0",
            "offset": "0xfc",
            "doc": "DMA_OUT_PRI_CH0_REG."
        },
        "dma.out_peri_sel_ch0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_out_sel_ch0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Tx channel 0. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.out_peri_sel_ch0",
            "name": "out_peri_sel_ch0",
            "offset": "0x100",
            "doc": "DMA_OUT_PERI_SEL_CH0_REG."
        },
        "dma.in_conf0_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_trans_en_ch1",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit 1 to enable automatic transmitting data from memory to memory via DMA."
                },
                {
                    "name": "in_data_burst_en_ch1",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 1 receiving data when accessing internal SRAM."
                },
                {
                    "name": "indscr_burst_en_ch1",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 1 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "in_loop_test_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_rst_ch1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 1 Rx FSM and Rx FIFO pointer."
                }
            ],
            "id": "dma.in_conf0_ch1",
            "name": "in_conf0_ch1",
            "offset": "0x130",
            "doc": "DMA_IN_CONF0_CH1_REG."
        },
        "dma.in_conf1_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_check_owner_ch1",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.in_conf1_ch1",
            "name": "in_conf1_ch1",
            "offset": "0x134",
            "doc": "DMA_IN_CONF1_CH1_REG."
        },
        "dma.infifo_status_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_buf_hungry_ch1",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_4b_ch1",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_3b_ch1",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_2b_ch1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_1b_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_cnt_ch1",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Rx FIFO for Rx channel 1."
                },
                {
                    "name": "infifo_empty_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO empty signal for Rx channel 1."
                },
                {
                    "name": "infifo_full_ch1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO full signal for Rx channel 1."
                }
            ],
            "id": "dma.infifo_status_ch1",
            "name": "infifo_status_ch1",
            "offset": "0x138",
            "doc": "DMA_INFIFO_STATUS_CH1_REG."
        },
        "dma.in_pop_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_pop_ch1",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to pop data from DMA FIFO."
                },
                {
                    "name": "infifo_rdata_ch1",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "2048",
                    "doc": "This register stores the data popping from DMA FIFO."
                }
            ],
            "id": "dma.in_pop_ch1",
            "name": "in_pop_ch1",
            "offset": "0x13c",
            "doc": "DMA_IN_POP_CH1_REG."
        },
        "dma.in_link_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "inlink_park_ch1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working."
                },
                {
                    "name": "inlink_restart_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to mount a new inlink descriptor."
                },
                {
                    "name": "inlink_start_ch1",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_stop_ch1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_auto_ret_ch1",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data."
                },
                {
                    "name": "inlink_addr_ch1",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first inlink descriptor's address."
                }
            ],
            "id": "dma.in_link_ch1",
            "name": "in_link_ch1",
            "offset": "0x140",
            "doc": "DMA_IN_LINK_CH1_REG."
        },
        "dma.in_state_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_state_ch1",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_dscr_state_ch1",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "inlink_dscr_addr_ch1",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current inlink descriptor's address."
                }
            ],
            "id": "dma.in_state_ch1",
            "name": "in_state_ch1",
            "offset": "0x144",
            "doc": "DMA_IN_STATE_CH1_REG."
        },
        "dma.in_suc_eof_des_addr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_suc_eof_des_addr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.in_suc_eof_des_addr_ch1",
            "name": "in_suc_eof_des_addr_ch1",
            "offset": "0x148",
            "doc": "DMA_IN_SUC_EOF_DES_ADDR_CH1_REG."
        },
        "dma.in_err_eof_des_addr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_err_eof_des_addr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0."
                }
            ],
            "id": "dma.in_err_eof_des_addr_ch1",
            "name": "in_err_eof_des_addr_ch1",
            "offset": "0x14c",
            "doc": "DMA_IN_ERR_EOF_DES_ADDR_CH1_REG."
        },
        "dma.in_dscr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current inlink descriptor x."
                }
            ],
            "id": "dma.in_dscr_ch1",
            "name": "in_dscr_ch1",
            "offset": "0x150",
            "doc": "DMA_IN_DSCR_CH1_REG."
        },
        "dma.in_dscr_bf0_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf0_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last inlink descriptor x-1."
                }
            ],
            "id": "dma.in_dscr_bf0_ch1",
            "name": "in_dscr_bf0_ch1",
            "offset": "0x154",
            "doc": "DMA_IN_DSCR_BF0_CH1_REG."
        },
        "dma.in_dscr_bf1_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf1_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.in_dscr_bf1_ch1",
            "name": "in_dscr_bf1_ch1",
            "offset": "0x158",
            "doc": "DMA_IN_DSCR_BF1_CH1_REG."
        },
        "dma.in_pri_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_pri_ch1",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Rx channel 1. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.in_pri_ch1",
            "name": "in_pri_ch1",
            "offset": "0x15c",
            "doc": "DMA_IN_PRI_CH1_REG."
        },
        "dma.in_peri_sel_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_in_sel_ch1",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Rx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.in_peri_sel_ch1",
            "name": "in_peri_sel_ch1",
            "offset": "0x160",
            "doc": "DMA_IN_PERI_SEL_CH1_REG."
        },
        "dma.out_conf0_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_data_burst_en_ch1",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 1 transmitting data when accessing internal SRAM."
                },
                {
                    "name": "outdscr_burst_en_ch1",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 1 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "out_eof_mode_ch1",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 1 is generated when data need to transmit has been popped from FIFO in DMA"
                },
                {
                    "name": "out_auto_wrback_ch1",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted."
                },
                {
                    "name": "out_loop_test_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_rst_ch1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 1 Tx FSM and Tx FIFO pointer."
                }
            ],
            "id": "dma.out_conf0_ch1",
            "name": "out_conf0_ch1",
            "offset": "0x190",
            "doc": "DMA_OUT_CONF0_CH1_REG."
        },
        "dma.out_conf1_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_check_owner_ch1",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.out_conf1_ch1",
            "name": "out_conf1_ch1",
            "offset": "0x194",
            "doc": "DMA_OUT_CONF1_CH1_REG."
        },
        "dma.outfifo_status_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_remain_under_4b_ch1",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_3b_ch1",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_2b_ch1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_1b_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_cnt_ch1",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Tx FIFO for Tx channel 1."
                },
                {
                    "name": "outfifo_empty_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Tx FIFO empty signal for Tx channel 1."
                },
                {
                    "name": "outfifo_full_ch1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "L1 Tx FIFO full signal for Tx channel 1."
                }
            ],
            "id": "dma.outfifo_status_ch1",
            "name": "outfifo_status_ch1",
            "offset": "0x198",
            "doc": "DMA_OUTFIFO_STATUS_CH1_REG."
        },
        "dma.out_push_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_push_ch1",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to push data into DMA FIFO."
                },
                {
                    "name": "outfifo_wdata_ch1",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the data that need to be pushed into DMA FIFO."
                }
            ],
            "id": "dma.out_push_ch1",
            "name": "out_push_ch1",
            "offset": "0x19c",
            "doc": "DMA_OUT_PUSH_CH1_REG."
        },
        "dma.out_link_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outlink_park_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working."
                },
                {
                    "name": "outlink_restart_ch1",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to restart a new outlink from the last address."
                },
                {
                    "name": "outlink_start_ch1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_stop_ch1",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_addr_ch1",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first outlink descriptor's address."
                }
            ],
            "id": "dma.out_link_ch1",
            "name": "out_link_ch1",
            "offset": "0x1a0",
            "doc": "DMA_OUT_LINK_CH1_REG."
        },
        "dma.out_state_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_state_ch1",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_dscr_state_ch1",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "outlink_dscr_addr_ch1",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current outlink descriptor's address."
                }
            ],
            "id": "dma.out_state_ch1",
            "name": "out_state_ch1",
            "offset": "0x1a4",
            "doc": "DMA_OUT_STATE_CH1_REG."
        },
        "dma.out_eof_des_addr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_des_addr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.out_eof_des_addr_ch1",
            "name": "out_eof_des_addr_ch1",
            "offset": "0x1a8",
            "doc": "DMA_OUT_EOF_DES_ADDR_CH1_REG."
        },
        "dma.out_eof_bfr_des_addr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_bfr_des_addr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor before the last outlink descriptor."
                }
            ],
            "id": "dma.out_eof_bfr_des_addr_ch1",
            "name": "out_eof_bfr_des_addr_ch1",
            "offset": "0x1ac",
            "doc": "DMA_OUT_EOF_BFR_DES_ADDR_CH1_REG."
        },
        "dma.out_dscr_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current outlink descriptor y."
                }
            ],
            "id": "dma.out_dscr_ch1",
            "name": "out_dscr_ch1",
            "offset": "0x1b0",
            "doc": "DMA_OUT_DSCR_CH1_REG."
        },
        "dma.out_dscr_bf0_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf0_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last outlink descriptor y-1."
                }
            ],
            "id": "dma.out_dscr_bf0_ch1",
            "name": "out_dscr_bf0_ch1",
            "offset": "0x1b4",
            "doc": "DMA_OUT_DSCR_BF0_CH1_REG."
        },
        "dma.out_dscr_bf1_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf1_ch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.out_dscr_bf1_ch1",
            "name": "out_dscr_bf1_ch1",
            "offset": "0x1b8",
            "doc": "DMA_OUT_DSCR_BF1_CH1_REG."
        },
        "dma.out_pri_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_pri_ch1",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Tx channel 1. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.out_pri_ch1",
            "name": "out_pri_ch1",
            "offset": "0x1bc",
            "doc": "DMA_OUT_PRI_CH1_REG."
        },
        "dma.out_peri_sel_ch1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_out_sel_ch1",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Tx channel 1. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.out_peri_sel_ch1",
            "name": "out_peri_sel_ch1",
            "offset": "0x1c0",
            "doc": "DMA_OUT_PERI_SEL_CH1_REG."
        },
        "dma.in_conf0_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_trans_en_ch2",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit 1 to enable automatic transmitting data from memory to memory via DMA."
                },
                {
                    "name": "in_data_burst_en_ch2",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 2 receiving data when accessing internal SRAM."
                },
                {
                    "name": "indscr_burst_en_ch2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Rx channel 2 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "in_loop_test_ch2",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_rst_ch2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 2 Rx FSM and Rx FIFO pointer."
                }
            ],
            "id": "dma.in_conf0_ch2",
            "name": "in_conf0_ch2",
            "offset": "0x1f0",
            "doc": "DMA_IN_CONF0_CH2_REG."
        },
        "dma.in_conf1_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_check_owner_ch2",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.in_conf1_ch2",
            "name": "in_conf1_ch2",
            "offset": "0x1f4",
            "doc": "DMA_IN_CONF1_CH2_REG."
        },
        "dma.infifo_status_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_buf_hungry_ch2",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_4b_ch2",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_3b_ch2",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_2b_ch2",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "in_remain_under_1b_ch2",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_cnt_ch2",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Rx FIFO for Rx channel 2."
                },
                {
                    "name": "infifo_empty_ch2",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO empty signal for Rx channel 2."
                },
                {
                    "name": "infifo_full_ch2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Rx FIFO full signal for Rx channel 2."
                }
            ],
            "id": "dma.infifo_status_ch2",
            "name": "infifo_status_ch2",
            "offset": "0x1f8",
            "doc": "DMA_INFIFO_STATUS_CH2_REG."
        },
        "dma.in_pop_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "infifo_pop_ch2",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to pop data from DMA FIFO."
                },
                {
                    "name": "infifo_rdata_ch2",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "2048",
                    "doc": "This register stores the data popping from DMA FIFO."
                }
            ],
            "id": "dma.in_pop_ch2",
            "name": "in_pop_ch2",
            "offset": "0x1fc",
            "doc": "DMA_IN_POP_CH2_REG."
        },
        "dma.in_link_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "inlink_park_ch2",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the inlink descriptor's FSM is in idle state.  0: the inlink descriptor's FSM is working."
                },
                {
                    "name": "inlink_restart_ch2",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to mount a new inlink descriptor."
                },
                {
                    "name": "inlink_start_ch2",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_stop_ch2",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the inlink descriptors."
                },
                {
                    "name": "inlink_auto_ret_ch2",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to return to current inlink descriptor's address, when there are some errors in current receiving data."
                },
                {
                    "name": "inlink_addr_ch2",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first inlink descriptor's address."
                }
            ],
            "id": "dma.in_link_ch2",
            "name": "in_link_ch2",
            "offset": "0x200",
            "doc": "DMA_IN_LINK_CH2_REG."
        },
        "dma.in_state_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_state_ch2",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "in_dscr_state_ch2",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "inlink_dscr_addr_ch2",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current inlink descriptor's address."
                }
            ],
            "id": "dma.in_state_ch2",
            "name": "in_state_ch2",
            "offset": "0x204",
            "doc": "DMA_IN_STATE_CH2_REG."
        },
        "dma.in_suc_eof_des_addr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_suc_eof_des_addr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.in_suc_eof_des_addr_ch2",
            "name": "in_suc_eof_des_addr_ch2",
            "offset": "0x208",
            "doc": "DMA_IN_SUC_EOF_DES_ADDR_CH2_REG."
        },
        "dma.in_err_eof_des_addr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "in_err_eof_des_addr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the inlink descriptor when there are some errors in current receiving data. Only used when peripheral is UHCI0."
                }
            ],
            "id": "dma.in_err_eof_des_addr_ch2",
            "name": "in_err_eof_des_addr_ch2",
            "offset": "0x20c",
            "doc": "DMA_IN_ERR_EOF_DES_ADDR_CH2_REG."
        },
        "dma.in_dscr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current inlink descriptor x."
                }
            ],
            "id": "dma.in_dscr_ch2",
            "name": "in_dscr_ch2",
            "offset": "0x210",
            "doc": "DMA_IN_DSCR_CH2_REG."
        },
        "dma.in_dscr_bf0_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf0_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last inlink descriptor x-1."
                }
            ],
            "id": "dma.in_dscr_bf0_ch2",
            "name": "in_dscr_bf0_ch2",
            "offset": "0x214",
            "doc": "DMA_IN_DSCR_BF0_CH2_REG."
        },
        "dma.in_dscr_bf1_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inlink_dscr_bf1_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.in_dscr_bf1_ch2",
            "name": "in_dscr_bf1_ch2",
            "offset": "0x218",
            "doc": "DMA_IN_DSCR_BF1_CH2_REG."
        },
        "dma.in_pri_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_pri_ch2",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Rx channel 2. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.in_pri_ch2",
            "name": "in_pri_ch2",
            "offset": "0x21c",
            "doc": "DMA_IN_PRI_CH2_REG."
        },
        "dma.in_peri_sel_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_in_sel_ch2",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Rx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.in_peri_sel_ch2",
            "name": "in_peri_sel_ch2",
            "offset": "0x220",
            "doc": "DMA_IN_PERI_SEL_CH2_REG."
        },
        "dma.out_conf0_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_data_burst_en_ch2",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 2 transmitting data when accessing internal SRAM."
                },
                {
                    "name": "outdscr_burst_en_ch2",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to 1 to enable INCR burst transfer for Tx channel 2 reading link descriptor when accessing internal SRAM."
                },
                {
                    "name": "out_eof_mode_ch2",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "EOF flag generation mode when transmitting data. 1: EOF flag for Tx channel 2 is generated when data need to transmit has been popped from FIFO in DMA"
                },
                {
                    "name": "out_auto_wrback_ch2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable automatic outlink-writeback when all the data in tx buffer has been transmitted."
                },
                {
                    "name": "out_loop_test_ch2",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_rst_ch2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to reset DMA channel 2 Tx FSM and Tx FIFO pointer."
                }
            ],
            "id": "dma.out_conf0_ch2",
            "name": "out_conf0_ch2",
            "offset": "0x250",
            "doc": "DMA_OUT_CONF0_CH2_REG."
        },
        "dma.out_conf1_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_check_owner_ch2",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable checking the owner attribute of the link descriptor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "dma.out_conf1_ch2",
            "name": "out_conf1_ch2",
            "offset": "0x254",
            "doc": "DMA_OUT_CONF1_CH2_REG."
        },
        "dma.outfifo_status_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_remain_under_4b_ch2",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_3b_ch2",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_2b_ch2",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "out_remain_under_1b_ch2",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_cnt_ch2",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register stores the byte number of the data in L1 Tx FIFO for Tx channel 2."
                },
                {
                    "name": "outfifo_empty_ch2",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "L1 Tx FIFO empty signal for Tx channel 2."
                },
                {
                    "name": "outfifo_full_ch2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "L1 Tx FIFO full signal for Tx channel 2."
                }
            ],
            "id": "dma.outfifo_status_ch2",
            "name": "outfifo_status_ch2",
            "offset": "0x258",
            "doc": "DMA_OUTFIFO_STATUS_CH2_REG."
        },
        "dma.out_push_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outfifo_push_ch2",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to push data into DMA FIFO."
                },
                {
                    "name": "outfifo_wdata_ch2",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the data that need to be pushed into DMA FIFO."
                }
            ],
            "id": "dma.out_push_ch2",
            "name": "out_push_ch2",
            "offset": "0x25c",
            "doc": "DMA_OUT_PUSH_CH2_REG."
        },
        "dma.out_link_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "outlink_park_ch2",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: the outlink descriptor's FSM is in idle state.  0: the outlink descriptor's FSM is working."
                },
                {
                    "name": "outlink_restart_ch2",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to restart a new outlink from the last address."
                },
                {
                    "name": "outlink_start_ch2",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_stop_ch2",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop dealing with the outlink descriptors."
                },
                {
                    "name": "outlink_addr_ch2",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register stores the 20 least significant bits of the first outlink descriptor's address."
                }
            ],
            "id": "dma.out_link_ch2",
            "name": "out_link_ch2",
            "offset": "0x260",
            "doc": "DMA_OUT_LINK_CH2_REG."
        },
        "dma.out_state_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_state_ch2",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "out_dscr_state_ch2",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "outlink_dscr_addr_ch2",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the current outlink descriptor's address."
                }
            ],
            "id": "dma.out_state_ch2",
            "name": "out_state_ch2",
            "offset": "0x264",
            "doc": "DMA_OUT_STATE_CH2_REG."
        },
        "dma.out_eof_des_addr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_des_addr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor when the EOF bit in this descriptor is 1."
                }
            ],
            "id": "dma.out_eof_des_addr_ch2",
            "name": "out_eof_des_addr_ch2",
            "offset": "0x268",
            "doc": "DMA_OUT_EOF_DES_ADDR_CH2_REG."
        },
        "dma.out_eof_bfr_des_addr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "out_eof_bfr_des_addr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the address of the outlink descriptor before the last outlink descriptor."
                }
            ],
            "id": "dma.out_eof_bfr_des_addr_ch2",
            "name": "out_eof_bfr_des_addr_ch2",
            "offset": "0x26c",
            "doc": "DMA_OUT_EOF_BFR_DES_ADDR_CH2_REG."
        },
        "dma.out_dscr_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the current outlink descriptor y."
                }
            ],
            "id": "dma.out_dscr_ch2",
            "name": "out_dscr_ch2",
            "offset": "0x270",
            "doc": "DMA_OUT_DSCR_CH2_REG."
        },
        "dma.out_dscr_bf0_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf0_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the last outlink descriptor y-1."
                }
            ],
            "id": "dma.out_dscr_bf0_ch2",
            "name": "out_dscr_bf0_ch2",
            "offset": "0x274",
            "doc": "DMA_OUT_DSCR_BF0_CH2_REG."
        },
        "dma.out_dscr_bf1_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "outlink_dscr_bf1_ch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The address of the second-to-last inlink descriptor x-2."
                }
            ],
            "id": "dma.out_dscr_bf1_ch2",
            "name": "out_dscr_bf1_ch2",
            "offset": "0x278",
            "doc": "DMA_OUT_DSCR_BF1_CH2_REG."
        },
        "dma.out_pri_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_pri_ch2",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The priority of Tx channel 2. The larger of the value, the higher of the priority."
                }
            ],
            "id": "dma.out_pri_ch2",
            "name": "out_pri_ch2",
            "offset": "0x27c",
            "doc": "DMA_OUT_PRI_CH2_REG."
        },
        "dma.out_peri_sel_ch2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "peri_out_sel_ch2",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "63",
                    "doc": "This register is used to select peripheral for Tx channel 2. 0:SPI2. 1: reserved. 2: UHCI0. 3: I2S0. 4: reserved. 5: reserved. 6: AES. 7: SHA. 8: ADC_DAC."
                }
            ],
            "id": "dma.out_peri_sel_ch2",
            "name": "out_peri_sel_ch2",
            "offset": "0x280",
            "doc": "DMA_OUT_PERI_SEL_CH2_REG."
        },
        "ds": {
            "type": "blk",
            "children": [
                "ds.y_mem0",
                "ds.y_mem1",
                "ds.y_mem2",
                "ds.y_mem3",
                "ds.y_mem4",
                "ds.y_mem5",
                "ds.y_mem6",
                "ds.y_mem7",
                "ds.y_mem8",
                "ds.y_mem9",
                "ds.y_mem10",
                "ds.y_mem11",
                "ds.y_mem12",
                "ds.y_mem13",
                "ds.y_mem14",
                "ds.y_mem15",
                "ds.y_mem16",
                "ds.y_mem17",
                "ds.y_mem18",
                "ds.y_mem19",
                "ds.y_mem20",
                "ds.y_mem21",
                "ds.y_mem22",
                "ds.y_mem23",
                "ds.y_mem24",
                "ds.y_mem25",
                "ds.y_mem26",
                "ds.y_mem27",
                "ds.y_mem28",
                "ds.y_mem29",
                "ds.y_mem30",
                "ds.y_mem31",
                "ds.y_mem32",
                "ds.y_mem33",
                "ds.y_mem34",
                "ds.y_mem35",
                "ds.y_mem36",
                "ds.y_mem37",
                "ds.y_mem38",
                "ds.y_mem39",
                "ds.y_mem40",
                "ds.y_mem41",
                "ds.y_mem42",
                "ds.y_mem43",
                "ds.y_mem44",
                "ds.y_mem45",
                "ds.y_mem46",
                "ds.y_mem47",
                "ds.y_mem48",
                "ds.y_mem49",
                "ds.y_mem50",
                "ds.y_mem51",
                "ds.y_mem52",
                "ds.y_mem53",
                "ds.y_mem54",
                "ds.y_mem55",
                "ds.y_mem56",
                "ds.y_mem57",
                "ds.y_mem58",
                "ds.y_mem59",
                "ds.y_mem60",
                "ds.y_mem61",
                "ds.y_mem62",
                "ds.y_mem63",
                "ds.y_mem64",
                "ds.y_mem65",
                "ds.y_mem66",
                "ds.y_mem67",
                "ds.y_mem68",
                "ds.y_mem69",
                "ds.y_mem70",
                "ds.y_mem71",
                "ds.y_mem72",
                "ds.y_mem73",
                "ds.y_mem74",
                "ds.y_mem75",
                "ds.y_mem76",
                "ds.y_mem77",
                "ds.y_mem78",
                "ds.y_mem79",
                "ds.y_mem80",
                "ds.y_mem81",
                "ds.y_mem82",
                "ds.y_mem83",
                "ds.y_mem84",
                "ds.y_mem85",
                "ds.y_mem86",
                "ds.y_mem87",
                "ds.y_mem88",
                "ds.y_mem89",
                "ds.y_mem90",
                "ds.y_mem91",
                "ds.y_mem92",
                "ds.y_mem93",
                "ds.y_mem94",
                "ds.y_mem95",
                "ds.y_mem96",
                "ds.y_mem97",
                "ds.y_mem98",
                "ds.y_mem99",
                "ds.y_mem100",
                "ds.y_mem101",
                "ds.y_mem102",
                "ds.y_mem103",
                "ds.y_mem104",
                "ds.y_mem105",
                "ds.y_mem106",
                "ds.y_mem107",
                "ds.y_mem108",
                "ds.y_mem109",
                "ds.y_mem110",
                "ds.y_mem111",
                "ds.y_mem112",
                "ds.y_mem113",
                "ds.y_mem114",
                "ds.y_mem115",
                "ds.y_mem116",
                "ds.y_mem117",
                "ds.y_mem118",
                "ds.y_mem119",
                "ds.y_mem120",
                "ds.y_mem121",
                "ds.y_mem122",
                "ds.y_mem123",
                "ds.y_mem124",
                "ds.y_mem125",
                "ds.y_mem126",
                "ds.y_mem127",
                "ds.y_mem128",
                "ds.y_mem129",
                "ds.y_mem130",
                "ds.y_mem131",
                "ds.y_mem132",
                "ds.y_mem133",
                "ds.y_mem134",
                "ds.y_mem135",
                "ds.y_mem136",
                "ds.y_mem137",
                "ds.y_mem138",
                "ds.y_mem139",
                "ds.y_mem140",
                "ds.y_mem141",
                "ds.y_mem142",
                "ds.y_mem143",
                "ds.y_mem144",
                "ds.y_mem145",
                "ds.y_mem146",
                "ds.y_mem147",
                "ds.y_mem148",
                "ds.y_mem149",
                "ds.y_mem150",
                "ds.y_mem151",
                "ds.y_mem152",
                "ds.y_mem153",
                "ds.y_mem154",
                "ds.y_mem155",
                "ds.y_mem156",
                "ds.y_mem157",
                "ds.y_mem158",
                "ds.y_mem159",
                "ds.y_mem160",
                "ds.y_mem161",
                "ds.y_mem162",
                "ds.y_mem163",
                "ds.y_mem164",
                "ds.y_mem165",
                "ds.y_mem166",
                "ds.y_mem167",
                "ds.y_mem168",
                "ds.y_mem169",
                "ds.y_mem170",
                "ds.y_mem171",
                "ds.y_mem172",
                "ds.y_mem173",
                "ds.y_mem174",
                "ds.y_mem175",
                "ds.y_mem176",
                "ds.y_mem177",
                "ds.y_mem178",
                "ds.y_mem179",
                "ds.y_mem180",
                "ds.y_mem181",
                "ds.y_mem182",
                "ds.y_mem183",
                "ds.y_mem184",
                "ds.y_mem185",
                "ds.y_mem186",
                "ds.y_mem187",
                "ds.y_mem188",
                "ds.y_mem189",
                "ds.y_mem190",
                "ds.y_mem191",
                "ds.y_mem192",
                "ds.y_mem193",
                "ds.y_mem194",
                "ds.y_mem195",
                "ds.y_mem196",
                "ds.y_mem197",
                "ds.y_mem198",
                "ds.y_mem199",
                "ds.y_mem200",
                "ds.y_mem201",
                "ds.y_mem202",
                "ds.y_mem203",
                "ds.y_mem204",
                "ds.y_mem205",
                "ds.y_mem206",
                "ds.y_mem207",
                "ds.y_mem208",
                "ds.y_mem209",
                "ds.y_mem210",
                "ds.y_mem211",
                "ds.y_mem212",
                "ds.y_mem213",
                "ds.y_mem214",
                "ds.y_mem215",
                "ds.y_mem216",
                "ds.y_mem217",
                "ds.y_mem218",
                "ds.y_mem219",
                "ds.y_mem220",
                "ds.y_mem221",
                "ds.y_mem222",
                "ds.y_mem223",
                "ds.y_mem224",
                "ds.y_mem225",
                "ds.y_mem226",
                "ds.y_mem227",
                "ds.y_mem228",
                "ds.y_mem229",
                "ds.y_mem230",
                "ds.y_mem231",
                "ds.y_mem232",
                "ds.y_mem233",
                "ds.y_mem234",
                "ds.y_mem235",
                "ds.y_mem236",
                "ds.y_mem237",
                "ds.y_mem238",
                "ds.y_mem239",
                "ds.y_mem240",
                "ds.y_mem241",
                "ds.y_mem242",
                "ds.y_mem243",
                "ds.y_mem244",
                "ds.y_mem245",
                "ds.y_mem246",
                "ds.y_mem247",
                "ds.y_mem248",
                "ds.y_mem249",
                "ds.y_mem250",
                "ds.y_mem251",
                "ds.y_mem252",
                "ds.y_mem253",
                "ds.y_mem254",
                "ds.y_mem255",
                "ds.y_mem256",
                "ds.y_mem257",
                "ds.y_mem258",
                "ds.y_mem259",
                "ds.y_mem260",
                "ds.y_mem261",
                "ds.y_mem262",
                "ds.y_mem263",
                "ds.y_mem264",
                "ds.y_mem265",
                "ds.y_mem266",
                "ds.y_mem267",
                "ds.y_mem268",
                "ds.y_mem269",
                "ds.y_mem270",
                "ds.y_mem271",
                "ds.y_mem272",
                "ds.y_mem273",
                "ds.y_mem274",
                "ds.y_mem275",
                "ds.y_mem276",
                "ds.y_mem277",
                "ds.y_mem278",
                "ds.y_mem279",
                "ds.y_mem280",
                "ds.y_mem281",
                "ds.y_mem282",
                "ds.y_mem283",
                "ds.y_mem284",
                "ds.y_mem285",
                "ds.y_mem286",
                "ds.y_mem287",
                "ds.y_mem288",
                "ds.y_mem289",
                "ds.y_mem290",
                "ds.y_mem291",
                "ds.y_mem292",
                "ds.y_mem293",
                "ds.y_mem294",
                "ds.y_mem295",
                "ds.y_mem296",
                "ds.y_mem297",
                "ds.y_mem298",
                "ds.y_mem299",
                "ds.y_mem300",
                "ds.y_mem301",
                "ds.y_mem302",
                "ds.y_mem303",
                "ds.y_mem304",
                "ds.y_mem305",
                "ds.y_mem306",
                "ds.y_mem307",
                "ds.y_mem308",
                "ds.y_mem309",
                "ds.y_mem310",
                "ds.y_mem311",
                "ds.y_mem312",
                "ds.y_mem313",
                "ds.y_mem314",
                "ds.y_mem315",
                "ds.y_mem316",
                "ds.y_mem317",
                "ds.y_mem318",
                "ds.y_mem319",
                "ds.y_mem320",
                "ds.y_mem321",
                "ds.y_mem322",
                "ds.y_mem323",
                "ds.y_mem324",
                "ds.y_mem325",
                "ds.y_mem326",
                "ds.y_mem327",
                "ds.y_mem328",
                "ds.y_mem329",
                "ds.y_mem330",
                "ds.y_mem331",
                "ds.y_mem332",
                "ds.y_mem333",
                "ds.y_mem334",
                "ds.y_mem335",
                "ds.y_mem336",
                "ds.y_mem337",
                "ds.y_mem338",
                "ds.y_mem339",
                "ds.y_mem340",
                "ds.y_mem341",
                "ds.y_mem342",
                "ds.y_mem343",
                "ds.y_mem344",
                "ds.y_mem345",
                "ds.y_mem346",
                "ds.y_mem347",
                "ds.y_mem348",
                "ds.y_mem349",
                "ds.y_mem350",
                "ds.y_mem351",
                "ds.y_mem352",
                "ds.y_mem353",
                "ds.y_mem354",
                "ds.y_mem355",
                "ds.y_mem356",
                "ds.y_mem357",
                "ds.y_mem358",
                "ds.y_mem359",
                "ds.y_mem360",
                "ds.y_mem361",
                "ds.y_mem362",
                "ds.y_mem363",
                "ds.y_mem364",
                "ds.y_mem365",
                "ds.y_mem366",
                "ds.y_mem367",
                "ds.y_mem368",
                "ds.y_mem369",
                "ds.y_mem370",
                "ds.y_mem371",
                "ds.y_mem372",
                "ds.y_mem373",
                "ds.y_mem374",
                "ds.y_mem375",
                "ds.y_mem376",
                "ds.y_mem377",
                "ds.y_mem378",
                "ds.y_mem379",
                "ds.y_mem380",
                "ds.y_mem381",
                "ds.y_mem382",
                "ds.y_mem383",
                "ds.y_mem384",
                "ds.y_mem385",
                "ds.y_mem386",
                "ds.y_mem387",
                "ds.y_mem388",
                "ds.y_mem389",
                "ds.y_mem390",
                "ds.y_mem391",
                "ds.y_mem392",
                "ds.y_mem393",
                "ds.y_mem394",
                "ds.y_mem395",
                "ds.y_mem396",
                "ds.y_mem397",
                "ds.y_mem398",
                "ds.y_mem399",
                "ds.y_mem400",
                "ds.y_mem401",
                "ds.y_mem402",
                "ds.y_mem403",
                "ds.y_mem404",
                "ds.y_mem405",
                "ds.y_mem406",
                "ds.y_mem407",
                "ds.y_mem408",
                "ds.y_mem409",
                "ds.y_mem410",
                "ds.y_mem411",
                "ds.y_mem412",
                "ds.y_mem413",
                "ds.y_mem414",
                "ds.y_mem415",
                "ds.y_mem416",
                "ds.y_mem417",
                "ds.y_mem418",
                "ds.y_mem419",
                "ds.y_mem420",
                "ds.y_mem421",
                "ds.y_mem422",
                "ds.y_mem423",
                "ds.y_mem424",
                "ds.y_mem425",
                "ds.y_mem426",
                "ds.y_mem427",
                "ds.y_mem428",
                "ds.y_mem429",
                "ds.y_mem430",
                "ds.y_mem431",
                "ds.y_mem432",
                "ds.y_mem433",
                "ds.y_mem434",
                "ds.y_mem435",
                "ds.y_mem436",
                "ds.y_mem437",
                "ds.y_mem438",
                "ds.y_mem439",
                "ds.y_mem440",
                "ds.y_mem441",
                "ds.y_mem442",
                "ds.y_mem443",
                "ds.y_mem444",
                "ds.y_mem445",
                "ds.y_mem446",
                "ds.y_mem447",
                "ds.y_mem448",
                "ds.y_mem449",
                "ds.y_mem450",
                "ds.y_mem451",
                "ds.y_mem452",
                "ds.y_mem453",
                "ds.y_mem454",
                "ds.y_mem455",
                "ds.y_mem456",
                "ds.y_mem457",
                "ds.y_mem458",
                "ds.y_mem459",
                "ds.y_mem460",
                "ds.y_mem461",
                "ds.y_mem462",
                "ds.y_mem463",
                "ds.y_mem464",
                "ds.y_mem465",
                "ds.y_mem466",
                "ds.y_mem467",
                "ds.y_mem468",
                "ds.y_mem469",
                "ds.y_mem470",
                "ds.y_mem471",
                "ds.y_mem472",
                "ds.y_mem473",
                "ds.y_mem474",
                "ds.y_mem475",
                "ds.y_mem476",
                "ds.y_mem477",
                "ds.y_mem478",
                "ds.y_mem479",
                "ds.y_mem480",
                "ds.y_mem481",
                "ds.y_mem482",
                "ds.y_mem483",
                "ds.y_mem484",
                "ds.y_mem485",
                "ds.y_mem486",
                "ds.y_mem487",
                "ds.y_mem488",
                "ds.y_mem489",
                "ds.y_mem490",
                "ds.y_mem491",
                "ds.y_mem492",
                "ds.y_mem493",
                "ds.y_mem494",
                "ds.y_mem495",
                "ds.y_mem496",
                "ds.y_mem497",
                "ds.y_mem498",
                "ds.y_mem499",
                "ds.y_mem500",
                "ds.y_mem501",
                "ds.y_mem502",
                "ds.y_mem503",
                "ds.y_mem504",
                "ds.y_mem505",
                "ds.y_mem506",
                "ds.y_mem507",
                "ds.y_mem508",
                "ds.y_mem509",
                "ds.y_mem510",
                "ds.y_mem511",
                "ds.m_mem0",
                "ds.m_mem1",
                "ds.m_mem2",
                "ds.m_mem3",
                "ds.m_mem4",
                "ds.m_mem5",
                "ds.m_mem6",
                "ds.m_mem7",
                "ds.m_mem8",
                "ds.m_mem9",
                "ds.m_mem10",
                "ds.m_mem11",
                "ds.m_mem12",
                "ds.m_mem13",
                "ds.m_mem14",
                "ds.m_mem15",
                "ds.m_mem16",
                "ds.m_mem17",
                "ds.m_mem18",
                "ds.m_mem19",
                "ds.m_mem20",
                "ds.m_mem21",
                "ds.m_mem22",
                "ds.m_mem23",
                "ds.m_mem24",
                "ds.m_mem25",
                "ds.m_mem26",
                "ds.m_mem27",
                "ds.m_mem28",
                "ds.m_mem29",
                "ds.m_mem30",
                "ds.m_mem31",
                "ds.m_mem32",
                "ds.m_mem33",
                "ds.m_mem34",
                "ds.m_mem35",
                "ds.m_mem36",
                "ds.m_mem37",
                "ds.m_mem38",
                "ds.m_mem39",
                "ds.m_mem40",
                "ds.m_mem41",
                "ds.m_mem42",
                "ds.m_mem43",
                "ds.m_mem44",
                "ds.m_mem45",
                "ds.m_mem46",
                "ds.m_mem47",
                "ds.m_mem48",
                "ds.m_mem49",
                "ds.m_mem50",
                "ds.m_mem51",
                "ds.m_mem52",
                "ds.m_mem53",
                "ds.m_mem54",
                "ds.m_mem55",
                "ds.m_mem56",
                "ds.m_mem57",
                "ds.m_mem58",
                "ds.m_mem59",
                "ds.m_mem60",
                "ds.m_mem61",
                "ds.m_mem62",
                "ds.m_mem63",
                "ds.m_mem64",
                "ds.m_mem65",
                "ds.m_mem66",
                "ds.m_mem67",
                "ds.m_mem68",
                "ds.m_mem69",
                "ds.m_mem70",
                "ds.m_mem71",
                "ds.m_mem72",
                "ds.m_mem73",
                "ds.m_mem74",
                "ds.m_mem75",
                "ds.m_mem76",
                "ds.m_mem77",
                "ds.m_mem78",
                "ds.m_mem79",
                "ds.m_mem80",
                "ds.m_mem81",
                "ds.m_mem82",
                "ds.m_mem83",
                "ds.m_mem84",
                "ds.m_mem85",
                "ds.m_mem86",
                "ds.m_mem87",
                "ds.m_mem88",
                "ds.m_mem89",
                "ds.m_mem90",
                "ds.m_mem91",
                "ds.m_mem92",
                "ds.m_mem93",
                "ds.m_mem94",
                "ds.m_mem95",
                "ds.m_mem96",
                "ds.m_mem97",
                "ds.m_mem98",
                "ds.m_mem99",
                "ds.m_mem100",
                "ds.m_mem101",
                "ds.m_mem102",
                "ds.m_mem103",
                "ds.m_mem104",
                "ds.m_mem105",
                "ds.m_mem106",
                "ds.m_mem107",
                "ds.m_mem108",
                "ds.m_mem109",
                "ds.m_mem110",
                "ds.m_mem111",
                "ds.m_mem112",
                "ds.m_mem113",
                "ds.m_mem114",
                "ds.m_mem115",
                "ds.m_mem116",
                "ds.m_mem117",
                "ds.m_mem118",
                "ds.m_mem119",
                "ds.m_mem120",
                "ds.m_mem121",
                "ds.m_mem122",
                "ds.m_mem123",
                "ds.m_mem124",
                "ds.m_mem125",
                "ds.m_mem126",
                "ds.m_mem127",
                "ds.m_mem128",
                "ds.m_mem129",
                "ds.m_mem130",
                "ds.m_mem131",
                "ds.m_mem132",
                "ds.m_mem133",
                "ds.m_mem134",
                "ds.m_mem135",
                "ds.m_mem136",
                "ds.m_mem137",
                "ds.m_mem138",
                "ds.m_mem139",
                "ds.m_mem140",
                "ds.m_mem141",
                "ds.m_mem142",
                "ds.m_mem143",
                "ds.m_mem144",
                "ds.m_mem145",
                "ds.m_mem146",
                "ds.m_mem147",
                "ds.m_mem148",
                "ds.m_mem149",
                "ds.m_mem150",
                "ds.m_mem151",
                "ds.m_mem152",
                "ds.m_mem153",
                "ds.m_mem154",
                "ds.m_mem155",
                "ds.m_mem156",
                "ds.m_mem157",
                "ds.m_mem158",
                "ds.m_mem159",
                "ds.m_mem160",
                "ds.m_mem161",
                "ds.m_mem162",
                "ds.m_mem163",
                "ds.m_mem164",
                "ds.m_mem165",
                "ds.m_mem166",
                "ds.m_mem167",
                "ds.m_mem168",
                "ds.m_mem169",
                "ds.m_mem170",
                "ds.m_mem171",
                "ds.m_mem172",
                "ds.m_mem173",
                "ds.m_mem174",
                "ds.m_mem175",
                "ds.m_mem176",
                "ds.m_mem177",
                "ds.m_mem178",
                "ds.m_mem179",
                "ds.m_mem180",
                "ds.m_mem181",
                "ds.m_mem182",
                "ds.m_mem183",
                "ds.m_mem184",
                "ds.m_mem185",
                "ds.m_mem186",
                "ds.m_mem187",
                "ds.m_mem188",
                "ds.m_mem189",
                "ds.m_mem190",
                "ds.m_mem191",
                "ds.m_mem192",
                "ds.m_mem193",
                "ds.m_mem194",
                "ds.m_mem195",
                "ds.m_mem196",
                "ds.m_mem197",
                "ds.m_mem198",
                "ds.m_mem199",
                "ds.m_mem200",
                "ds.m_mem201",
                "ds.m_mem202",
                "ds.m_mem203",
                "ds.m_mem204",
                "ds.m_mem205",
                "ds.m_mem206",
                "ds.m_mem207",
                "ds.m_mem208",
                "ds.m_mem209",
                "ds.m_mem210",
                "ds.m_mem211",
                "ds.m_mem212",
                "ds.m_mem213",
                "ds.m_mem214",
                "ds.m_mem215",
                "ds.m_mem216",
                "ds.m_mem217",
                "ds.m_mem218",
                "ds.m_mem219",
                "ds.m_mem220",
                "ds.m_mem221",
                "ds.m_mem222",
                "ds.m_mem223",
                "ds.m_mem224",
                "ds.m_mem225",
                "ds.m_mem226",
                "ds.m_mem227",
                "ds.m_mem228",
                "ds.m_mem229",
                "ds.m_mem230",
                "ds.m_mem231",
                "ds.m_mem232",
                "ds.m_mem233",
                "ds.m_mem234",
                "ds.m_mem235",
                "ds.m_mem236",
                "ds.m_mem237",
                "ds.m_mem238",
                "ds.m_mem239",
                "ds.m_mem240",
                "ds.m_mem241",
                "ds.m_mem242",
                "ds.m_mem243",
                "ds.m_mem244",
                "ds.m_mem245",
                "ds.m_mem246",
                "ds.m_mem247",
                "ds.m_mem248",
                "ds.m_mem249",
                "ds.m_mem250",
                "ds.m_mem251",
                "ds.m_mem252",
                "ds.m_mem253",
                "ds.m_mem254",
                "ds.m_mem255",
                "ds.m_mem256",
                "ds.m_mem257",
                "ds.m_mem258",
                "ds.m_mem259",
                "ds.m_mem260",
                "ds.m_mem261",
                "ds.m_mem262",
                "ds.m_mem263",
                "ds.m_mem264",
                "ds.m_mem265",
                "ds.m_mem266",
                "ds.m_mem267",
                "ds.m_mem268",
                "ds.m_mem269",
                "ds.m_mem270",
                "ds.m_mem271",
                "ds.m_mem272",
                "ds.m_mem273",
                "ds.m_mem274",
                "ds.m_mem275",
                "ds.m_mem276",
                "ds.m_mem277",
                "ds.m_mem278",
                "ds.m_mem279",
                "ds.m_mem280",
                "ds.m_mem281",
                "ds.m_mem282",
                "ds.m_mem283",
                "ds.m_mem284",
                "ds.m_mem285",
                "ds.m_mem286",
                "ds.m_mem287",
                "ds.m_mem288",
                "ds.m_mem289",
                "ds.m_mem290",
                "ds.m_mem291",
                "ds.m_mem292",
                "ds.m_mem293",
                "ds.m_mem294",
                "ds.m_mem295",
                "ds.m_mem296",
                "ds.m_mem297",
                "ds.m_mem298",
                "ds.m_mem299",
                "ds.m_mem300",
                "ds.m_mem301",
                "ds.m_mem302",
                "ds.m_mem303",
                "ds.m_mem304",
                "ds.m_mem305",
                "ds.m_mem306",
                "ds.m_mem307",
                "ds.m_mem308",
                "ds.m_mem309",
                "ds.m_mem310",
                "ds.m_mem311",
                "ds.m_mem312",
                "ds.m_mem313",
                "ds.m_mem314",
                "ds.m_mem315",
                "ds.m_mem316",
                "ds.m_mem317",
                "ds.m_mem318",
                "ds.m_mem319",
                "ds.m_mem320",
                "ds.m_mem321",
                "ds.m_mem322",
                "ds.m_mem323",
                "ds.m_mem324",
                "ds.m_mem325",
                "ds.m_mem326",
                "ds.m_mem327",
                "ds.m_mem328",
                "ds.m_mem329",
                "ds.m_mem330",
                "ds.m_mem331",
                "ds.m_mem332",
                "ds.m_mem333",
                "ds.m_mem334",
                "ds.m_mem335",
                "ds.m_mem336",
                "ds.m_mem337",
                "ds.m_mem338",
                "ds.m_mem339",
                "ds.m_mem340",
                "ds.m_mem341",
                "ds.m_mem342",
                "ds.m_mem343",
                "ds.m_mem344",
                "ds.m_mem345",
                "ds.m_mem346",
                "ds.m_mem347",
                "ds.m_mem348",
                "ds.m_mem349",
                "ds.m_mem350",
                "ds.m_mem351",
                "ds.m_mem352",
                "ds.m_mem353",
                "ds.m_mem354",
                "ds.m_mem355",
                "ds.m_mem356",
                "ds.m_mem357",
                "ds.m_mem358",
                "ds.m_mem359",
                "ds.m_mem360",
                "ds.m_mem361",
                "ds.m_mem362",
                "ds.m_mem363",
                "ds.m_mem364",
                "ds.m_mem365",
                "ds.m_mem366",
                "ds.m_mem367",
                "ds.m_mem368",
                "ds.m_mem369",
                "ds.m_mem370",
                "ds.m_mem371",
                "ds.m_mem372",
                "ds.m_mem373",
                "ds.m_mem374",
                "ds.m_mem375",
                "ds.m_mem376",
                "ds.m_mem377",
                "ds.m_mem378",
                "ds.m_mem379",
                "ds.m_mem380",
                "ds.m_mem381",
                "ds.m_mem382",
                "ds.m_mem383",
                "ds.m_mem384",
                "ds.m_mem385",
                "ds.m_mem386",
                "ds.m_mem387",
                "ds.m_mem388",
                "ds.m_mem389",
                "ds.m_mem390",
                "ds.m_mem391",
                "ds.m_mem392",
                "ds.m_mem393",
                "ds.m_mem394",
                "ds.m_mem395",
                "ds.m_mem396",
                "ds.m_mem397",
                "ds.m_mem398",
                "ds.m_mem399",
                "ds.m_mem400",
                "ds.m_mem401",
                "ds.m_mem402",
                "ds.m_mem403",
                "ds.m_mem404",
                "ds.m_mem405",
                "ds.m_mem406",
                "ds.m_mem407",
                "ds.m_mem408",
                "ds.m_mem409",
                "ds.m_mem410",
                "ds.m_mem411",
                "ds.m_mem412",
                "ds.m_mem413",
                "ds.m_mem414",
                "ds.m_mem415",
                "ds.m_mem416",
                "ds.m_mem417",
                "ds.m_mem418",
                "ds.m_mem419",
                "ds.m_mem420",
                "ds.m_mem421",
                "ds.m_mem422",
                "ds.m_mem423",
                "ds.m_mem424",
                "ds.m_mem425",
                "ds.m_mem426",
                "ds.m_mem427",
                "ds.m_mem428",
                "ds.m_mem429",
                "ds.m_mem430",
                "ds.m_mem431",
                "ds.m_mem432",
                "ds.m_mem433",
                "ds.m_mem434",
                "ds.m_mem435",
                "ds.m_mem436",
                "ds.m_mem437",
                "ds.m_mem438",
                "ds.m_mem439",
                "ds.m_mem440",
                "ds.m_mem441",
                "ds.m_mem442",
                "ds.m_mem443",
                "ds.m_mem444",
                "ds.m_mem445",
                "ds.m_mem446",
                "ds.m_mem447",
                "ds.m_mem448",
                "ds.m_mem449",
                "ds.m_mem450",
                "ds.m_mem451",
                "ds.m_mem452",
                "ds.m_mem453",
                "ds.m_mem454",
                "ds.m_mem455",
                "ds.m_mem456",
                "ds.m_mem457",
                "ds.m_mem458",
                "ds.m_mem459",
                "ds.m_mem460",
                "ds.m_mem461",
                "ds.m_mem462",
                "ds.m_mem463",
                "ds.m_mem464",
                "ds.m_mem465",
                "ds.m_mem466",
                "ds.m_mem467",
                "ds.m_mem468",
                "ds.m_mem469",
                "ds.m_mem470",
                "ds.m_mem471",
                "ds.m_mem472",
                "ds.m_mem473",
                "ds.m_mem474",
                "ds.m_mem475",
                "ds.m_mem476",
                "ds.m_mem477",
                "ds.m_mem478",
                "ds.m_mem479",
                "ds.m_mem480",
                "ds.m_mem481",
                "ds.m_mem482",
                "ds.m_mem483",
                "ds.m_mem484",
                "ds.m_mem485",
                "ds.m_mem486",
                "ds.m_mem487",
                "ds.m_mem488",
                "ds.m_mem489",
                "ds.m_mem490",
                "ds.m_mem491",
                "ds.m_mem492",
                "ds.m_mem493",
                "ds.m_mem494",
                "ds.m_mem495",
                "ds.m_mem496",
                "ds.m_mem497",
                "ds.m_mem498",
                "ds.m_mem499",
                "ds.m_mem500",
                "ds.m_mem501",
                "ds.m_mem502",
                "ds.m_mem503",
                "ds.m_mem504",
                "ds.m_mem505",
                "ds.m_mem506",
                "ds.m_mem507",
                "ds.m_mem508",
                "ds.m_mem509",
                "ds.m_mem510",
                "ds.m_mem511",
                "ds.rb_mem0",
                "ds.rb_mem1",
                "ds.rb_mem2",
                "ds.rb_mem3",
                "ds.rb_mem4",
                "ds.rb_mem5",
                "ds.rb_mem6",
                "ds.rb_mem7",
                "ds.rb_mem8",
                "ds.rb_mem9",
                "ds.rb_mem10",
                "ds.rb_mem11",
                "ds.rb_mem12",
                "ds.rb_mem13",
                "ds.rb_mem14",
                "ds.rb_mem15",
                "ds.rb_mem16",
                "ds.rb_mem17",
                "ds.rb_mem18",
                "ds.rb_mem19",
                "ds.rb_mem20",
                "ds.rb_mem21",
                "ds.rb_mem22",
                "ds.rb_mem23",
                "ds.rb_mem24",
                "ds.rb_mem25",
                "ds.rb_mem26",
                "ds.rb_mem27",
                "ds.rb_mem28",
                "ds.rb_mem29",
                "ds.rb_mem30",
                "ds.rb_mem31",
                "ds.rb_mem32",
                "ds.rb_mem33",
                "ds.rb_mem34",
                "ds.rb_mem35",
                "ds.rb_mem36",
                "ds.rb_mem37",
                "ds.rb_mem38",
                "ds.rb_mem39",
                "ds.rb_mem40",
                "ds.rb_mem41",
                "ds.rb_mem42",
                "ds.rb_mem43",
                "ds.rb_mem44",
                "ds.rb_mem45",
                "ds.rb_mem46",
                "ds.rb_mem47",
                "ds.rb_mem48",
                "ds.rb_mem49",
                "ds.rb_mem50",
                "ds.rb_mem51",
                "ds.rb_mem52",
                "ds.rb_mem53",
                "ds.rb_mem54",
                "ds.rb_mem55",
                "ds.rb_mem56",
                "ds.rb_mem57",
                "ds.rb_mem58",
                "ds.rb_mem59",
                "ds.rb_mem60",
                "ds.rb_mem61",
                "ds.rb_mem62",
                "ds.rb_mem63",
                "ds.rb_mem64",
                "ds.rb_mem65",
                "ds.rb_mem66",
                "ds.rb_mem67",
                "ds.rb_mem68",
                "ds.rb_mem69",
                "ds.rb_mem70",
                "ds.rb_mem71",
                "ds.rb_mem72",
                "ds.rb_mem73",
                "ds.rb_mem74",
                "ds.rb_mem75",
                "ds.rb_mem76",
                "ds.rb_mem77",
                "ds.rb_mem78",
                "ds.rb_mem79",
                "ds.rb_mem80",
                "ds.rb_mem81",
                "ds.rb_mem82",
                "ds.rb_mem83",
                "ds.rb_mem84",
                "ds.rb_mem85",
                "ds.rb_mem86",
                "ds.rb_mem87",
                "ds.rb_mem88",
                "ds.rb_mem89",
                "ds.rb_mem90",
                "ds.rb_mem91",
                "ds.rb_mem92",
                "ds.rb_mem93",
                "ds.rb_mem94",
                "ds.rb_mem95",
                "ds.rb_mem96",
                "ds.rb_mem97",
                "ds.rb_mem98",
                "ds.rb_mem99",
                "ds.rb_mem100",
                "ds.rb_mem101",
                "ds.rb_mem102",
                "ds.rb_mem103",
                "ds.rb_mem104",
                "ds.rb_mem105",
                "ds.rb_mem106",
                "ds.rb_mem107",
                "ds.rb_mem108",
                "ds.rb_mem109",
                "ds.rb_mem110",
                "ds.rb_mem111",
                "ds.rb_mem112",
                "ds.rb_mem113",
                "ds.rb_mem114",
                "ds.rb_mem115",
                "ds.rb_mem116",
                "ds.rb_mem117",
                "ds.rb_mem118",
                "ds.rb_mem119",
                "ds.rb_mem120",
                "ds.rb_mem121",
                "ds.rb_mem122",
                "ds.rb_mem123",
                "ds.rb_mem124",
                "ds.rb_mem125",
                "ds.rb_mem126",
                "ds.rb_mem127",
                "ds.rb_mem128",
                "ds.rb_mem129",
                "ds.rb_mem130",
                "ds.rb_mem131",
                "ds.rb_mem132",
                "ds.rb_mem133",
                "ds.rb_mem134",
                "ds.rb_mem135",
                "ds.rb_mem136",
                "ds.rb_mem137",
                "ds.rb_mem138",
                "ds.rb_mem139",
                "ds.rb_mem140",
                "ds.rb_mem141",
                "ds.rb_mem142",
                "ds.rb_mem143",
                "ds.rb_mem144",
                "ds.rb_mem145",
                "ds.rb_mem146",
                "ds.rb_mem147",
                "ds.rb_mem148",
                "ds.rb_mem149",
                "ds.rb_mem150",
                "ds.rb_mem151",
                "ds.rb_mem152",
                "ds.rb_mem153",
                "ds.rb_mem154",
                "ds.rb_mem155",
                "ds.rb_mem156",
                "ds.rb_mem157",
                "ds.rb_mem158",
                "ds.rb_mem159",
                "ds.rb_mem160",
                "ds.rb_mem161",
                "ds.rb_mem162",
                "ds.rb_mem163",
                "ds.rb_mem164",
                "ds.rb_mem165",
                "ds.rb_mem166",
                "ds.rb_mem167",
                "ds.rb_mem168",
                "ds.rb_mem169",
                "ds.rb_mem170",
                "ds.rb_mem171",
                "ds.rb_mem172",
                "ds.rb_mem173",
                "ds.rb_mem174",
                "ds.rb_mem175",
                "ds.rb_mem176",
                "ds.rb_mem177",
                "ds.rb_mem178",
                "ds.rb_mem179",
                "ds.rb_mem180",
                "ds.rb_mem181",
                "ds.rb_mem182",
                "ds.rb_mem183",
                "ds.rb_mem184",
                "ds.rb_mem185",
                "ds.rb_mem186",
                "ds.rb_mem187",
                "ds.rb_mem188",
                "ds.rb_mem189",
                "ds.rb_mem190",
                "ds.rb_mem191",
                "ds.rb_mem192",
                "ds.rb_mem193",
                "ds.rb_mem194",
                "ds.rb_mem195",
                "ds.rb_mem196",
                "ds.rb_mem197",
                "ds.rb_mem198",
                "ds.rb_mem199",
                "ds.rb_mem200",
                "ds.rb_mem201",
                "ds.rb_mem202",
                "ds.rb_mem203",
                "ds.rb_mem204",
                "ds.rb_mem205",
                "ds.rb_mem206",
                "ds.rb_mem207",
                "ds.rb_mem208",
                "ds.rb_mem209",
                "ds.rb_mem210",
                "ds.rb_mem211",
                "ds.rb_mem212",
                "ds.rb_mem213",
                "ds.rb_mem214",
                "ds.rb_mem215",
                "ds.rb_mem216",
                "ds.rb_mem217",
                "ds.rb_mem218",
                "ds.rb_mem219",
                "ds.rb_mem220",
                "ds.rb_mem221",
                "ds.rb_mem222",
                "ds.rb_mem223",
                "ds.rb_mem224",
                "ds.rb_mem225",
                "ds.rb_mem226",
                "ds.rb_mem227",
                "ds.rb_mem228",
                "ds.rb_mem229",
                "ds.rb_mem230",
                "ds.rb_mem231",
                "ds.rb_mem232",
                "ds.rb_mem233",
                "ds.rb_mem234",
                "ds.rb_mem235",
                "ds.rb_mem236",
                "ds.rb_mem237",
                "ds.rb_mem238",
                "ds.rb_mem239",
                "ds.rb_mem240",
                "ds.rb_mem241",
                "ds.rb_mem242",
                "ds.rb_mem243",
                "ds.rb_mem244",
                "ds.rb_mem245",
                "ds.rb_mem246",
                "ds.rb_mem247",
                "ds.rb_mem248",
                "ds.rb_mem249",
                "ds.rb_mem250",
                "ds.rb_mem251",
                "ds.rb_mem252",
                "ds.rb_mem253",
                "ds.rb_mem254",
                "ds.rb_mem255",
                "ds.rb_mem256",
                "ds.rb_mem257",
                "ds.rb_mem258",
                "ds.rb_mem259",
                "ds.rb_mem260",
                "ds.rb_mem261",
                "ds.rb_mem262",
                "ds.rb_mem263",
                "ds.rb_mem264",
                "ds.rb_mem265",
                "ds.rb_mem266",
                "ds.rb_mem267",
                "ds.rb_mem268",
                "ds.rb_mem269",
                "ds.rb_mem270",
                "ds.rb_mem271",
                "ds.rb_mem272",
                "ds.rb_mem273",
                "ds.rb_mem274",
                "ds.rb_mem275",
                "ds.rb_mem276",
                "ds.rb_mem277",
                "ds.rb_mem278",
                "ds.rb_mem279",
                "ds.rb_mem280",
                "ds.rb_mem281",
                "ds.rb_mem282",
                "ds.rb_mem283",
                "ds.rb_mem284",
                "ds.rb_mem285",
                "ds.rb_mem286",
                "ds.rb_mem287",
                "ds.rb_mem288",
                "ds.rb_mem289",
                "ds.rb_mem290",
                "ds.rb_mem291",
                "ds.rb_mem292",
                "ds.rb_mem293",
                "ds.rb_mem294",
                "ds.rb_mem295",
                "ds.rb_mem296",
                "ds.rb_mem297",
                "ds.rb_mem298",
                "ds.rb_mem299",
                "ds.rb_mem300",
                "ds.rb_mem301",
                "ds.rb_mem302",
                "ds.rb_mem303",
                "ds.rb_mem304",
                "ds.rb_mem305",
                "ds.rb_mem306",
                "ds.rb_mem307",
                "ds.rb_mem308",
                "ds.rb_mem309",
                "ds.rb_mem310",
                "ds.rb_mem311",
                "ds.rb_mem312",
                "ds.rb_mem313",
                "ds.rb_mem314",
                "ds.rb_mem315",
                "ds.rb_mem316",
                "ds.rb_mem317",
                "ds.rb_mem318",
                "ds.rb_mem319",
                "ds.rb_mem320",
                "ds.rb_mem321",
                "ds.rb_mem322",
                "ds.rb_mem323",
                "ds.rb_mem324",
                "ds.rb_mem325",
                "ds.rb_mem326",
                "ds.rb_mem327",
                "ds.rb_mem328",
                "ds.rb_mem329",
                "ds.rb_mem330",
                "ds.rb_mem331",
                "ds.rb_mem332",
                "ds.rb_mem333",
                "ds.rb_mem334",
                "ds.rb_mem335",
                "ds.rb_mem336",
                "ds.rb_mem337",
                "ds.rb_mem338",
                "ds.rb_mem339",
                "ds.rb_mem340",
                "ds.rb_mem341",
                "ds.rb_mem342",
                "ds.rb_mem343",
                "ds.rb_mem344",
                "ds.rb_mem345",
                "ds.rb_mem346",
                "ds.rb_mem347",
                "ds.rb_mem348",
                "ds.rb_mem349",
                "ds.rb_mem350",
                "ds.rb_mem351",
                "ds.rb_mem352",
                "ds.rb_mem353",
                "ds.rb_mem354",
                "ds.rb_mem355",
                "ds.rb_mem356",
                "ds.rb_mem357",
                "ds.rb_mem358",
                "ds.rb_mem359",
                "ds.rb_mem360",
                "ds.rb_mem361",
                "ds.rb_mem362",
                "ds.rb_mem363",
                "ds.rb_mem364",
                "ds.rb_mem365",
                "ds.rb_mem366",
                "ds.rb_mem367",
                "ds.rb_mem368",
                "ds.rb_mem369",
                "ds.rb_mem370",
                "ds.rb_mem371",
                "ds.rb_mem372",
                "ds.rb_mem373",
                "ds.rb_mem374",
                "ds.rb_mem375",
                "ds.rb_mem376",
                "ds.rb_mem377",
                "ds.rb_mem378",
                "ds.rb_mem379",
                "ds.rb_mem380",
                "ds.rb_mem381",
                "ds.rb_mem382",
                "ds.rb_mem383",
                "ds.rb_mem384",
                "ds.rb_mem385",
                "ds.rb_mem386",
                "ds.rb_mem387",
                "ds.rb_mem388",
                "ds.rb_mem389",
                "ds.rb_mem390",
                "ds.rb_mem391",
                "ds.rb_mem392",
                "ds.rb_mem393",
                "ds.rb_mem394",
                "ds.rb_mem395",
                "ds.rb_mem396",
                "ds.rb_mem397",
                "ds.rb_mem398",
                "ds.rb_mem399",
                "ds.rb_mem400",
                "ds.rb_mem401",
                "ds.rb_mem402",
                "ds.rb_mem403",
                "ds.rb_mem404",
                "ds.rb_mem405",
                "ds.rb_mem406",
                "ds.rb_mem407",
                "ds.rb_mem408",
                "ds.rb_mem409",
                "ds.rb_mem410",
                "ds.rb_mem411",
                "ds.rb_mem412",
                "ds.rb_mem413",
                "ds.rb_mem414",
                "ds.rb_mem415",
                "ds.rb_mem416",
                "ds.rb_mem417",
                "ds.rb_mem418",
                "ds.rb_mem419",
                "ds.rb_mem420",
                "ds.rb_mem421",
                "ds.rb_mem422",
                "ds.rb_mem423",
                "ds.rb_mem424",
                "ds.rb_mem425",
                "ds.rb_mem426",
                "ds.rb_mem427",
                "ds.rb_mem428",
                "ds.rb_mem429",
                "ds.rb_mem430",
                "ds.rb_mem431",
                "ds.rb_mem432",
                "ds.rb_mem433",
                "ds.rb_mem434",
                "ds.rb_mem435",
                "ds.rb_mem436",
                "ds.rb_mem437",
                "ds.rb_mem438",
                "ds.rb_mem439",
                "ds.rb_mem440",
                "ds.rb_mem441",
                "ds.rb_mem442",
                "ds.rb_mem443",
                "ds.rb_mem444",
                "ds.rb_mem445",
                "ds.rb_mem446",
                "ds.rb_mem447",
                "ds.rb_mem448",
                "ds.rb_mem449",
                "ds.rb_mem450",
                "ds.rb_mem451",
                "ds.rb_mem452",
                "ds.rb_mem453",
                "ds.rb_mem454",
                "ds.rb_mem455",
                "ds.rb_mem456",
                "ds.rb_mem457",
                "ds.rb_mem458",
                "ds.rb_mem459",
                "ds.rb_mem460",
                "ds.rb_mem461",
                "ds.rb_mem462",
                "ds.rb_mem463",
                "ds.rb_mem464",
                "ds.rb_mem465",
                "ds.rb_mem466",
                "ds.rb_mem467",
                "ds.rb_mem468",
                "ds.rb_mem469",
                "ds.rb_mem470",
                "ds.rb_mem471",
                "ds.rb_mem472",
                "ds.rb_mem473",
                "ds.rb_mem474",
                "ds.rb_mem475",
                "ds.rb_mem476",
                "ds.rb_mem477",
                "ds.rb_mem478",
                "ds.rb_mem479",
                "ds.rb_mem480",
                "ds.rb_mem481",
                "ds.rb_mem482",
                "ds.rb_mem483",
                "ds.rb_mem484",
                "ds.rb_mem485",
                "ds.rb_mem486",
                "ds.rb_mem487",
                "ds.rb_mem488",
                "ds.rb_mem489",
                "ds.rb_mem490",
                "ds.rb_mem491",
                "ds.rb_mem492",
                "ds.rb_mem493",
                "ds.rb_mem494",
                "ds.rb_mem495",
                "ds.rb_mem496",
                "ds.rb_mem497",
                "ds.rb_mem498",
                "ds.rb_mem499",
                "ds.rb_mem500",
                "ds.rb_mem501",
                "ds.rb_mem502",
                "ds.rb_mem503",
                "ds.rb_mem504",
                "ds.rb_mem505",
                "ds.rb_mem506",
                "ds.rb_mem507",
                "ds.rb_mem508",
                "ds.rb_mem509",
                "ds.rb_mem510",
                "ds.rb_mem511",
                "ds.box_mem0",
                "ds.box_mem1",
                "ds.box_mem2",
                "ds.box_mem3",
                "ds.box_mem4",
                "ds.box_mem5",
                "ds.box_mem6",
                "ds.box_mem7",
                "ds.box_mem8",
                "ds.box_mem9",
                "ds.box_mem10",
                "ds.box_mem11",
                "ds.box_mem12",
                "ds.box_mem13",
                "ds.box_mem14",
                "ds.box_mem15",
                "ds.box_mem16",
                "ds.box_mem17",
                "ds.box_mem18",
                "ds.box_mem19",
                "ds.box_mem20",
                "ds.box_mem21",
                "ds.box_mem22",
                "ds.box_mem23",
                "ds.box_mem24",
                "ds.box_mem25",
                "ds.box_mem26",
                "ds.box_mem27",
                "ds.box_mem28",
                "ds.box_mem29",
                "ds.box_mem30",
                "ds.box_mem31",
                "ds.box_mem32",
                "ds.box_mem33",
                "ds.box_mem34",
                "ds.box_mem35",
                "ds.box_mem36",
                "ds.box_mem37",
                "ds.box_mem38",
                "ds.box_mem39",
                "ds.box_mem40",
                "ds.box_mem41",
                "ds.box_mem42",
                "ds.box_mem43",
                "ds.box_mem44",
                "ds.box_mem45",
                "ds.box_mem46",
                "ds.box_mem47",
                "ds.x_mem0",
                "ds.x_mem1",
                "ds.x_mem2",
                "ds.x_mem3",
                "ds.x_mem4",
                "ds.x_mem5",
                "ds.x_mem6",
                "ds.x_mem7",
                "ds.x_mem8",
                "ds.x_mem9",
                "ds.x_mem10",
                "ds.x_mem11",
                "ds.x_mem12",
                "ds.x_mem13",
                "ds.x_mem14",
                "ds.x_mem15",
                "ds.x_mem16",
                "ds.x_mem17",
                "ds.x_mem18",
                "ds.x_mem19",
                "ds.x_mem20",
                "ds.x_mem21",
                "ds.x_mem22",
                "ds.x_mem23",
                "ds.x_mem24",
                "ds.x_mem25",
                "ds.x_mem26",
                "ds.x_mem27",
                "ds.x_mem28",
                "ds.x_mem29",
                "ds.x_mem30",
                "ds.x_mem31",
                "ds.x_mem32",
                "ds.x_mem33",
                "ds.x_mem34",
                "ds.x_mem35",
                "ds.x_mem36",
                "ds.x_mem37",
                "ds.x_mem38",
                "ds.x_mem39",
                "ds.x_mem40",
                "ds.x_mem41",
                "ds.x_mem42",
                "ds.x_mem43",
                "ds.x_mem44",
                "ds.x_mem45",
                "ds.x_mem46",
                "ds.x_mem47",
                "ds.x_mem48",
                "ds.x_mem49",
                "ds.x_mem50",
                "ds.x_mem51",
                "ds.x_mem52",
                "ds.x_mem53",
                "ds.x_mem54",
                "ds.x_mem55",
                "ds.x_mem56",
                "ds.x_mem57",
                "ds.x_mem58",
                "ds.x_mem59",
                "ds.x_mem60",
                "ds.x_mem61",
                "ds.x_mem62",
                "ds.x_mem63",
                "ds.x_mem64",
                "ds.x_mem65",
                "ds.x_mem66",
                "ds.x_mem67",
                "ds.x_mem68",
                "ds.x_mem69",
                "ds.x_mem70",
                "ds.x_mem71",
                "ds.x_mem72",
                "ds.x_mem73",
                "ds.x_mem74",
                "ds.x_mem75",
                "ds.x_mem76",
                "ds.x_mem77",
                "ds.x_mem78",
                "ds.x_mem79",
                "ds.x_mem80",
                "ds.x_mem81",
                "ds.x_mem82",
                "ds.x_mem83",
                "ds.x_mem84",
                "ds.x_mem85",
                "ds.x_mem86",
                "ds.x_mem87",
                "ds.x_mem88",
                "ds.x_mem89",
                "ds.x_mem90",
                "ds.x_mem91",
                "ds.x_mem92",
                "ds.x_mem93",
                "ds.x_mem94",
                "ds.x_mem95",
                "ds.x_mem96",
                "ds.x_mem97",
                "ds.x_mem98",
                "ds.x_mem99",
                "ds.x_mem100",
                "ds.x_mem101",
                "ds.x_mem102",
                "ds.x_mem103",
                "ds.x_mem104",
                "ds.x_mem105",
                "ds.x_mem106",
                "ds.x_mem107",
                "ds.x_mem108",
                "ds.x_mem109",
                "ds.x_mem110",
                "ds.x_mem111",
                "ds.x_mem112",
                "ds.x_mem113",
                "ds.x_mem114",
                "ds.x_mem115",
                "ds.x_mem116",
                "ds.x_mem117",
                "ds.x_mem118",
                "ds.x_mem119",
                "ds.x_mem120",
                "ds.x_mem121",
                "ds.x_mem122",
                "ds.x_mem123",
                "ds.x_mem124",
                "ds.x_mem125",
                "ds.x_mem126",
                "ds.x_mem127",
                "ds.x_mem128",
                "ds.x_mem129",
                "ds.x_mem130",
                "ds.x_mem131",
                "ds.x_mem132",
                "ds.x_mem133",
                "ds.x_mem134",
                "ds.x_mem135",
                "ds.x_mem136",
                "ds.x_mem137",
                "ds.x_mem138",
                "ds.x_mem139",
                "ds.x_mem140",
                "ds.x_mem141",
                "ds.x_mem142",
                "ds.x_mem143",
                "ds.x_mem144",
                "ds.x_mem145",
                "ds.x_mem146",
                "ds.x_mem147",
                "ds.x_mem148",
                "ds.x_mem149",
                "ds.x_mem150",
                "ds.x_mem151",
                "ds.x_mem152",
                "ds.x_mem153",
                "ds.x_mem154",
                "ds.x_mem155",
                "ds.x_mem156",
                "ds.x_mem157",
                "ds.x_mem158",
                "ds.x_mem159",
                "ds.x_mem160",
                "ds.x_mem161",
                "ds.x_mem162",
                "ds.x_mem163",
                "ds.x_mem164",
                "ds.x_mem165",
                "ds.x_mem166",
                "ds.x_mem167",
                "ds.x_mem168",
                "ds.x_mem169",
                "ds.x_mem170",
                "ds.x_mem171",
                "ds.x_mem172",
                "ds.x_mem173",
                "ds.x_mem174",
                "ds.x_mem175",
                "ds.x_mem176",
                "ds.x_mem177",
                "ds.x_mem178",
                "ds.x_mem179",
                "ds.x_mem180",
                "ds.x_mem181",
                "ds.x_mem182",
                "ds.x_mem183",
                "ds.x_mem184",
                "ds.x_mem185",
                "ds.x_mem186",
                "ds.x_mem187",
                "ds.x_mem188",
                "ds.x_mem189",
                "ds.x_mem190",
                "ds.x_mem191",
                "ds.x_mem192",
                "ds.x_mem193",
                "ds.x_mem194",
                "ds.x_mem195",
                "ds.x_mem196",
                "ds.x_mem197",
                "ds.x_mem198",
                "ds.x_mem199",
                "ds.x_mem200",
                "ds.x_mem201",
                "ds.x_mem202",
                "ds.x_mem203",
                "ds.x_mem204",
                "ds.x_mem205",
                "ds.x_mem206",
                "ds.x_mem207",
                "ds.x_mem208",
                "ds.x_mem209",
                "ds.x_mem210",
                "ds.x_mem211",
                "ds.x_mem212",
                "ds.x_mem213",
                "ds.x_mem214",
                "ds.x_mem215",
                "ds.x_mem216",
                "ds.x_mem217",
                "ds.x_mem218",
                "ds.x_mem219",
                "ds.x_mem220",
                "ds.x_mem221",
                "ds.x_mem222",
                "ds.x_mem223",
                "ds.x_mem224",
                "ds.x_mem225",
                "ds.x_mem226",
                "ds.x_mem227",
                "ds.x_mem228",
                "ds.x_mem229",
                "ds.x_mem230",
                "ds.x_mem231",
                "ds.x_mem232",
                "ds.x_mem233",
                "ds.x_mem234",
                "ds.x_mem235",
                "ds.x_mem236",
                "ds.x_mem237",
                "ds.x_mem238",
                "ds.x_mem239",
                "ds.x_mem240",
                "ds.x_mem241",
                "ds.x_mem242",
                "ds.x_mem243",
                "ds.x_mem244",
                "ds.x_mem245",
                "ds.x_mem246",
                "ds.x_mem247",
                "ds.x_mem248",
                "ds.x_mem249",
                "ds.x_mem250",
                "ds.x_mem251",
                "ds.x_mem252",
                "ds.x_mem253",
                "ds.x_mem254",
                "ds.x_mem255",
                "ds.x_mem256",
                "ds.x_mem257",
                "ds.x_mem258",
                "ds.x_mem259",
                "ds.x_mem260",
                "ds.x_mem261",
                "ds.x_mem262",
                "ds.x_mem263",
                "ds.x_mem264",
                "ds.x_mem265",
                "ds.x_mem266",
                "ds.x_mem267",
                "ds.x_mem268",
                "ds.x_mem269",
                "ds.x_mem270",
                "ds.x_mem271",
                "ds.x_mem272",
                "ds.x_mem273",
                "ds.x_mem274",
                "ds.x_mem275",
                "ds.x_mem276",
                "ds.x_mem277",
                "ds.x_mem278",
                "ds.x_mem279",
                "ds.x_mem280",
                "ds.x_mem281",
                "ds.x_mem282",
                "ds.x_mem283",
                "ds.x_mem284",
                "ds.x_mem285",
                "ds.x_mem286",
                "ds.x_mem287",
                "ds.x_mem288",
                "ds.x_mem289",
                "ds.x_mem290",
                "ds.x_mem291",
                "ds.x_mem292",
                "ds.x_mem293",
                "ds.x_mem294",
                "ds.x_mem295",
                "ds.x_mem296",
                "ds.x_mem297",
                "ds.x_mem298",
                "ds.x_mem299",
                "ds.x_mem300",
                "ds.x_mem301",
                "ds.x_mem302",
                "ds.x_mem303",
                "ds.x_mem304",
                "ds.x_mem305",
                "ds.x_mem306",
                "ds.x_mem307",
                "ds.x_mem308",
                "ds.x_mem309",
                "ds.x_mem310",
                "ds.x_mem311",
                "ds.x_mem312",
                "ds.x_mem313",
                "ds.x_mem314",
                "ds.x_mem315",
                "ds.x_mem316",
                "ds.x_mem317",
                "ds.x_mem318",
                "ds.x_mem319",
                "ds.x_mem320",
                "ds.x_mem321",
                "ds.x_mem322",
                "ds.x_mem323",
                "ds.x_mem324",
                "ds.x_mem325",
                "ds.x_mem326",
                "ds.x_mem327",
                "ds.x_mem328",
                "ds.x_mem329",
                "ds.x_mem330",
                "ds.x_mem331",
                "ds.x_mem332",
                "ds.x_mem333",
                "ds.x_mem334",
                "ds.x_mem335",
                "ds.x_mem336",
                "ds.x_mem337",
                "ds.x_mem338",
                "ds.x_mem339",
                "ds.x_mem340",
                "ds.x_mem341",
                "ds.x_mem342",
                "ds.x_mem343",
                "ds.x_mem344",
                "ds.x_mem345",
                "ds.x_mem346",
                "ds.x_mem347",
                "ds.x_mem348",
                "ds.x_mem349",
                "ds.x_mem350",
                "ds.x_mem351",
                "ds.x_mem352",
                "ds.x_mem353",
                "ds.x_mem354",
                "ds.x_mem355",
                "ds.x_mem356",
                "ds.x_mem357",
                "ds.x_mem358",
                "ds.x_mem359",
                "ds.x_mem360",
                "ds.x_mem361",
                "ds.x_mem362",
                "ds.x_mem363",
                "ds.x_mem364",
                "ds.x_mem365",
                "ds.x_mem366",
                "ds.x_mem367",
                "ds.x_mem368",
                "ds.x_mem369",
                "ds.x_mem370",
                "ds.x_mem371",
                "ds.x_mem372",
                "ds.x_mem373",
                "ds.x_mem374",
                "ds.x_mem375",
                "ds.x_mem376",
                "ds.x_mem377",
                "ds.x_mem378",
                "ds.x_mem379",
                "ds.x_mem380",
                "ds.x_mem381",
                "ds.x_mem382",
                "ds.x_mem383",
                "ds.x_mem384",
                "ds.x_mem385",
                "ds.x_mem386",
                "ds.x_mem387",
                "ds.x_mem388",
                "ds.x_mem389",
                "ds.x_mem390",
                "ds.x_mem391",
                "ds.x_mem392",
                "ds.x_mem393",
                "ds.x_mem394",
                "ds.x_mem395",
                "ds.x_mem396",
                "ds.x_mem397",
                "ds.x_mem398",
                "ds.x_mem399",
                "ds.x_mem400",
                "ds.x_mem401",
                "ds.x_mem402",
                "ds.x_mem403",
                "ds.x_mem404",
                "ds.x_mem405",
                "ds.x_mem406",
                "ds.x_mem407",
                "ds.x_mem408",
                "ds.x_mem409",
                "ds.x_mem410",
                "ds.x_mem411",
                "ds.x_mem412",
                "ds.x_mem413",
                "ds.x_mem414",
                "ds.x_mem415",
                "ds.x_mem416",
                "ds.x_mem417",
                "ds.x_mem418",
                "ds.x_mem419",
                "ds.x_mem420",
                "ds.x_mem421",
                "ds.x_mem422",
                "ds.x_mem423",
                "ds.x_mem424",
                "ds.x_mem425",
                "ds.x_mem426",
                "ds.x_mem427",
                "ds.x_mem428",
                "ds.x_mem429",
                "ds.x_mem430",
                "ds.x_mem431",
                "ds.x_mem432",
                "ds.x_mem433",
                "ds.x_mem434",
                "ds.x_mem435",
                "ds.x_mem436",
                "ds.x_mem437",
                "ds.x_mem438",
                "ds.x_mem439",
                "ds.x_mem440",
                "ds.x_mem441",
                "ds.x_mem442",
                "ds.x_mem443",
                "ds.x_mem444",
                "ds.x_mem445",
                "ds.x_mem446",
                "ds.x_mem447",
                "ds.x_mem448",
                "ds.x_mem449",
                "ds.x_mem450",
                "ds.x_mem451",
                "ds.x_mem452",
                "ds.x_mem453",
                "ds.x_mem454",
                "ds.x_mem455",
                "ds.x_mem456",
                "ds.x_mem457",
                "ds.x_mem458",
                "ds.x_mem459",
                "ds.x_mem460",
                "ds.x_mem461",
                "ds.x_mem462",
                "ds.x_mem463",
                "ds.x_mem464",
                "ds.x_mem465",
                "ds.x_mem466",
                "ds.x_mem467",
                "ds.x_mem468",
                "ds.x_mem469",
                "ds.x_mem470",
                "ds.x_mem471",
                "ds.x_mem472",
                "ds.x_mem473",
                "ds.x_mem474",
                "ds.x_mem475",
                "ds.x_mem476",
                "ds.x_mem477",
                "ds.x_mem478",
                "ds.x_mem479",
                "ds.x_mem480",
                "ds.x_mem481",
                "ds.x_mem482",
                "ds.x_mem483",
                "ds.x_mem484",
                "ds.x_mem485",
                "ds.x_mem486",
                "ds.x_mem487",
                "ds.x_mem488",
                "ds.x_mem489",
                "ds.x_mem490",
                "ds.x_mem491",
                "ds.x_mem492",
                "ds.x_mem493",
                "ds.x_mem494",
                "ds.x_mem495",
                "ds.x_mem496",
                "ds.x_mem497",
                "ds.x_mem498",
                "ds.x_mem499",
                "ds.x_mem500",
                "ds.x_mem501",
                "ds.x_mem502",
                "ds.x_mem503",
                "ds.x_mem504",
                "ds.x_mem505",
                "ds.x_mem506",
                "ds.x_mem507",
                "ds.x_mem508",
                "ds.x_mem509",
                "ds.x_mem510",
                "ds.x_mem511",
                "ds.z_mem0",
                "ds.z_mem1",
                "ds.z_mem2",
                "ds.z_mem3",
                "ds.z_mem4",
                "ds.z_mem5",
                "ds.z_mem6",
                "ds.z_mem7",
                "ds.z_mem8",
                "ds.z_mem9",
                "ds.z_mem10",
                "ds.z_mem11",
                "ds.z_mem12",
                "ds.z_mem13",
                "ds.z_mem14",
                "ds.z_mem15",
                "ds.z_mem16",
                "ds.z_mem17",
                "ds.z_mem18",
                "ds.z_mem19",
                "ds.z_mem20",
                "ds.z_mem21",
                "ds.z_mem22",
                "ds.z_mem23",
                "ds.z_mem24",
                "ds.z_mem25",
                "ds.z_mem26",
                "ds.z_mem27",
                "ds.z_mem28",
                "ds.z_mem29",
                "ds.z_mem30",
                "ds.z_mem31",
                "ds.z_mem32",
                "ds.z_mem33",
                "ds.z_mem34",
                "ds.z_mem35",
                "ds.z_mem36",
                "ds.z_mem37",
                "ds.z_mem38",
                "ds.z_mem39",
                "ds.z_mem40",
                "ds.z_mem41",
                "ds.z_mem42",
                "ds.z_mem43",
                "ds.z_mem44",
                "ds.z_mem45",
                "ds.z_mem46",
                "ds.z_mem47",
                "ds.z_mem48",
                "ds.z_mem49",
                "ds.z_mem50",
                "ds.z_mem51",
                "ds.z_mem52",
                "ds.z_mem53",
                "ds.z_mem54",
                "ds.z_mem55",
                "ds.z_mem56",
                "ds.z_mem57",
                "ds.z_mem58",
                "ds.z_mem59",
                "ds.z_mem60",
                "ds.z_mem61",
                "ds.z_mem62",
                "ds.z_mem63",
                "ds.z_mem64",
                "ds.z_mem65",
                "ds.z_mem66",
                "ds.z_mem67",
                "ds.z_mem68",
                "ds.z_mem69",
                "ds.z_mem70",
                "ds.z_mem71",
                "ds.z_mem72",
                "ds.z_mem73",
                "ds.z_mem74",
                "ds.z_mem75",
                "ds.z_mem76",
                "ds.z_mem77",
                "ds.z_mem78",
                "ds.z_mem79",
                "ds.z_mem80",
                "ds.z_mem81",
                "ds.z_mem82",
                "ds.z_mem83",
                "ds.z_mem84",
                "ds.z_mem85",
                "ds.z_mem86",
                "ds.z_mem87",
                "ds.z_mem88",
                "ds.z_mem89",
                "ds.z_mem90",
                "ds.z_mem91",
                "ds.z_mem92",
                "ds.z_mem93",
                "ds.z_mem94",
                "ds.z_mem95",
                "ds.z_mem96",
                "ds.z_mem97",
                "ds.z_mem98",
                "ds.z_mem99",
                "ds.z_mem100",
                "ds.z_mem101",
                "ds.z_mem102",
                "ds.z_mem103",
                "ds.z_mem104",
                "ds.z_mem105",
                "ds.z_mem106",
                "ds.z_mem107",
                "ds.z_mem108",
                "ds.z_mem109",
                "ds.z_mem110",
                "ds.z_mem111",
                "ds.z_mem112",
                "ds.z_mem113",
                "ds.z_mem114",
                "ds.z_mem115",
                "ds.z_mem116",
                "ds.z_mem117",
                "ds.z_mem118",
                "ds.z_mem119",
                "ds.z_mem120",
                "ds.z_mem121",
                "ds.z_mem122",
                "ds.z_mem123",
                "ds.z_mem124",
                "ds.z_mem125",
                "ds.z_mem126",
                "ds.z_mem127",
                "ds.z_mem128",
                "ds.z_mem129",
                "ds.z_mem130",
                "ds.z_mem131",
                "ds.z_mem132",
                "ds.z_mem133",
                "ds.z_mem134",
                "ds.z_mem135",
                "ds.z_mem136",
                "ds.z_mem137",
                "ds.z_mem138",
                "ds.z_mem139",
                "ds.z_mem140",
                "ds.z_mem141",
                "ds.z_mem142",
                "ds.z_mem143",
                "ds.z_mem144",
                "ds.z_mem145",
                "ds.z_mem146",
                "ds.z_mem147",
                "ds.z_mem148",
                "ds.z_mem149",
                "ds.z_mem150",
                "ds.z_mem151",
                "ds.z_mem152",
                "ds.z_mem153",
                "ds.z_mem154",
                "ds.z_mem155",
                "ds.z_mem156",
                "ds.z_mem157",
                "ds.z_mem158",
                "ds.z_mem159",
                "ds.z_mem160",
                "ds.z_mem161",
                "ds.z_mem162",
                "ds.z_mem163",
                "ds.z_mem164",
                "ds.z_mem165",
                "ds.z_mem166",
                "ds.z_mem167",
                "ds.z_mem168",
                "ds.z_mem169",
                "ds.z_mem170",
                "ds.z_mem171",
                "ds.z_mem172",
                "ds.z_mem173",
                "ds.z_mem174",
                "ds.z_mem175",
                "ds.z_mem176",
                "ds.z_mem177",
                "ds.z_mem178",
                "ds.z_mem179",
                "ds.z_mem180",
                "ds.z_mem181",
                "ds.z_mem182",
                "ds.z_mem183",
                "ds.z_mem184",
                "ds.z_mem185",
                "ds.z_mem186",
                "ds.z_mem187",
                "ds.z_mem188",
                "ds.z_mem189",
                "ds.z_mem190",
                "ds.z_mem191",
                "ds.z_mem192",
                "ds.z_mem193",
                "ds.z_mem194",
                "ds.z_mem195",
                "ds.z_mem196",
                "ds.z_mem197",
                "ds.z_mem198",
                "ds.z_mem199",
                "ds.z_mem200",
                "ds.z_mem201",
                "ds.z_mem202",
                "ds.z_mem203",
                "ds.z_mem204",
                "ds.z_mem205",
                "ds.z_mem206",
                "ds.z_mem207",
                "ds.z_mem208",
                "ds.z_mem209",
                "ds.z_mem210",
                "ds.z_mem211",
                "ds.z_mem212",
                "ds.z_mem213",
                "ds.z_mem214",
                "ds.z_mem215",
                "ds.z_mem216",
                "ds.z_mem217",
                "ds.z_mem218",
                "ds.z_mem219",
                "ds.z_mem220",
                "ds.z_mem221",
                "ds.z_mem222",
                "ds.z_mem223",
                "ds.z_mem224",
                "ds.z_mem225",
                "ds.z_mem226",
                "ds.z_mem227",
                "ds.z_mem228",
                "ds.z_mem229",
                "ds.z_mem230",
                "ds.z_mem231",
                "ds.z_mem232",
                "ds.z_mem233",
                "ds.z_mem234",
                "ds.z_mem235",
                "ds.z_mem236",
                "ds.z_mem237",
                "ds.z_mem238",
                "ds.z_mem239",
                "ds.z_mem240",
                "ds.z_mem241",
                "ds.z_mem242",
                "ds.z_mem243",
                "ds.z_mem244",
                "ds.z_mem245",
                "ds.z_mem246",
                "ds.z_mem247",
                "ds.z_mem248",
                "ds.z_mem249",
                "ds.z_mem250",
                "ds.z_mem251",
                "ds.z_mem252",
                "ds.z_mem253",
                "ds.z_mem254",
                "ds.z_mem255",
                "ds.z_mem256",
                "ds.z_mem257",
                "ds.z_mem258",
                "ds.z_mem259",
                "ds.z_mem260",
                "ds.z_mem261",
                "ds.z_mem262",
                "ds.z_mem263",
                "ds.z_mem264",
                "ds.z_mem265",
                "ds.z_mem266",
                "ds.z_mem267",
                "ds.z_mem268",
                "ds.z_mem269",
                "ds.z_mem270",
                "ds.z_mem271",
                "ds.z_mem272",
                "ds.z_mem273",
                "ds.z_mem274",
                "ds.z_mem275",
                "ds.z_mem276",
                "ds.z_mem277",
                "ds.z_mem278",
                "ds.z_mem279",
                "ds.z_mem280",
                "ds.z_mem281",
                "ds.z_mem282",
                "ds.z_mem283",
                "ds.z_mem284",
                "ds.z_mem285",
                "ds.z_mem286",
                "ds.z_mem287",
                "ds.z_mem288",
                "ds.z_mem289",
                "ds.z_mem290",
                "ds.z_mem291",
                "ds.z_mem292",
                "ds.z_mem293",
                "ds.z_mem294",
                "ds.z_mem295",
                "ds.z_mem296",
                "ds.z_mem297",
                "ds.z_mem298",
                "ds.z_mem299",
                "ds.z_mem300",
                "ds.z_mem301",
                "ds.z_mem302",
                "ds.z_mem303",
                "ds.z_mem304",
                "ds.z_mem305",
                "ds.z_mem306",
                "ds.z_mem307",
                "ds.z_mem308",
                "ds.z_mem309",
                "ds.z_mem310",
                "ds.z_mem311",
                "ds.z_mem312",
                "ds.z_mem313",
                "ds.z_mem314",
                "ds.z_mem315",
                "ds.z_mem316",
                "ds.z_mem317",
                "ds.z_mem318",
                "ds.z_mem319",
                "ds.z_mem320",
                "ds.z_mem321",
                "ds.z_mem322",
                "ds.z_mem323",
                "ds.z_mem324",
                "ds.z_mem325",
                "ds.z_mem326",
                "ds.z_mem327",
                "ds.z_mem328",
                "ds.z_mem329",
                "ds.z_mem330",
                "ds.z_mem331",
                "ds.z_mem332",
                "ds.z_mem333",
                "ds.z_mem334",
                "ds.z_mem335",
                "ds.z_mem336",
                "ds.z_mem337",
                "ds.z_mem338",
                "ds.z_mem339",
                "ds.z_mem340",
                "ds.z_mem341",
                "ds.z_mem342",
                "ds.z_mem343",
                "ds.z_mem344",
                "ds.z_mem345",
                "ds.z_mem346",
                "ds.z_mem347",
                "ds.z_mem348",
                "ds.z_mem349",
                "ds.z_mem350",
                "ds.z_mem351",
                "ds.z_mem352",
                "ds.z_mem353",
                "ds.z_mem354",
                "ds.z_mem355",
                "ds.z_mem356",
                "ds.z_mem357",
                "ds.z_mem358",
                "ds.z_mem359",
                "ds.z_mem360",
                "ds.z_mem361",
                "ds.z_mem362",
                "ds.z_mem363",
                "ds.z_mem364",
                "ds.z_mem365",
                "ds.z_mem366",
                "ds.z_mem367",
                "ds.z_mem368",
                "ds.z_mem369",
                "ds.z_mem370",
                "ds.z_mem371",
                "ds.z_mem372",
                "ds.z_mem373",
                "ds.z_mem374",
                "ds.z_mem375",
                "ds.z_mem376",
                "ds.z_mem377",
                "ds.z_mem378",
                "ds.z_mem379",
                "ds.z_mem380",
                "ds.z_mem381",
                "ds.z_mem382",
                "ds.z_mem383",
                "ds.z_mem384",
                "ds.z_mem385",
                "ds.z_mem386",
                "ds.z_mem387",
                "ds.z_mem388",
                "ds.z_mem389",
                "ds.z_mem390",
                "ds.z_mem391",
                "ds.z_mem392",
                "ds.z_mem393",
                "ds.z_mem394",
                "ds.z_mem395",
                "ds.z_mem396",
                "ds.z_mem397",
                "ds.z_mem398",
                "ds.z_mem399",
                "ds.z_mem400",
                "ds.z_mem401",
                "ds.z_mem402",
                "ds.z_mem403",
                "ds.z_mem404",
                "ds.z_mem405",
                "ds.z_mem406",
                "ds.z_mem407",
                "ds.z_mem408",
                "ds.z_mem409",
                "ds.z_mem410",
                "ds.z_mem411",
                "ds.z_mem412",
                "ds.z_mem413",
                "ds.z_mem414",
                "ds.z_mem415",
                "ds.z_mem416",
                "ds.z_mem417",
                "ds.z_mem418",
                "ds.z_mem419",
                "ds.z_mem420",
                "ds.z_mem421",
                "ds.z_mem422",
                "ds.z_mem423",
                "ds.z_mem424",
                "ds.z_mem425",
                "ds.z_mem426",
                "ds.z_mem427",
                "ds.z_mem428",
                "ds.z_mem429",
                "ds.z_mem430",
                "ds.z_mem431",
                "ds.z_mem432",
                "ds.z_mem433",
                "ds.z_mem434",
                "ds.z_mem435",
                "ds.z_mem436",
                "ds.z_mem437",
                "ds.z_mem438",
                "ds.z_mem439",
                "ds.z_mem440",
                "ds.z_mem441",
                "ds.z_mem442",
                "ds.z_mem443",
                "ds.z_mem444",
                "ds.z_mem445",
                "ds.z_mem446",
                "ds.z_mem447",
                "ds.z_mem448",
                "ds.z_mem449",
                "ds.z_mem450",
                "ds.z_mem451",
                "ds.z_mem452",
                "ds.z_mem453",
                "ds.z_mem454",
                "ds.z_mem455",
                "ds.z_mem456",
                "ds.z_mem457",
                "ds.z_mem458",
                "ds.z_mem459",
                "ds.z_mem460",
                "ds.z_mem461",
                "ds.z_mem462",
                "ds.z_mem463",
                "ds.z_mem464",
                "ds.z_mem465",
                "ds.z_mem466",
                "ds.z_mem467",
                "ds.z_mem468",
                "ds.z_mem469",
                "ds.z_mem470",
                "ds.z_mem471",
                "ds.z_mem472",
                "ds.z_mem473",
                "ds.z_mem474",
                "ds.z_mem475",
                "ds.z_mem476",
                "ds.z_mem477",
                "ds.z_mem478",
                "ds.z_mem479",
                "ds.z_mem480",
                "ds.z_mem481",
                "ds.z_mem482",
                "ds.z_mem483",
                "ds.z_mem484",
                "ds.z_mem485",
                "ds.z_mem486",
                "ds.z_mem487",
                "ds.z_mem488",
                "ds.z_mem489",
                "ds.z_mem490",
                "ds.z_mem491",
                "ds.z_mem492",
                "ds.z_mem493",
                "ds.z_mem494",
                "ds.z_mem495",
                "ds.z_mem496",
                "ds.z_mem497",
                "ds.z_mem498",
                "ds.z_mem499",
                "ds.z_mem500",
                "ds.z_mem501",
                "ds.z_mem502",
                "ds.z_mem503",
                "ds.z_mem504",
                "ds.z_mem505",
                "ds.z_mem506",
                "ds.z_mem507",
                "ds.z_mem508",
                "ds.z_mem509",
                "ds.z_mem510",
                "ds.z_mem511",
                "ds.set_start",
                "ds.set_continue",
                "ds.set_finish",
                "ds.query_busy",
                "ds.query_key_wrong",
                "ds.query_check",
                "ds.date"
            ],
            "id": "ds",
            "name": "ds",
            "offset": "0x6003d000",
            "doc": "Digital Signature"
        },
        "ds.y_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem0",
            "name": "y_mem0",
            "offset": "0x0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem1",
            "name": "y_mem1",
            "offset": "0x1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem2",
            "name": "y_mem2",
            "offset": "0x2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem3",
            "name": "y_mem3",
            "offset": "0x3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem4",
            "name": "y_mem4",
            "offset": "0x4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem5",
            "name": "y_mem5",
            "offset": "0x5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem6",
            "name": "y_mem6",
            "offset": "0x6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem7",
            "name": "y_mem7",
            "offset": "0x7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem8",
            "name": "y_mem8",
            "offset": "0x8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem9",
            "name": "y_mem9",
            "offset": "0x9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem10",
            "name": "y_mem10",
            "offset": "0xa",
            "doc": "memory that stores Y"
        },
        "ds.y_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem11",
            "name": "y_mem11",
            "offset": "0xb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem12",
            "name": "y_mem12",
            "offset": "0xc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem13",
            "name": "y_mem13",
            "offset": "0xd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem14",
            "name": "y_mem14",
            "offset": "0xe",
            "doc": "memory that stores Y"
        },
        "ds.y_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem15",
            "name": "y_mem15",
            "offset": "0xf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem16",
            "name": "y_mem16",
            "offset": "0x10",
            "doc": "memory that stores Y"
        },
        "ds.y_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem17",
            "name": "y_mem17",
            "offset": "0x11",
            "doc": "memory that stores Y"
        },
        "ds.y_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem18",
            "name": "y_mem18",
            "offset": "0x12",
            "doc": "memory that stores Y"
        },
        "ds.y_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem19",
            "name": "y_mem19",
            "offset": "0x13",
            "doc": "memory that stores Y"
        },
        "ds.y_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem20",
            "name": "y_mem20",
            "offset": "0x14",
            "doc": "memory that stores Y"
        },
        "ds.y_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem21",
            "name": "y_mem21",
            "offset": "0x15",
            "doc": "memory that stores Y"
        },
        "ds.y_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem22",
            "name": "y_mem22",
            "offset": "0x16",
            "doc": "memory that stores Y"
        },
        "ds.y_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem23",
            "name": "y_mem23",
            "offset": "0x17",
            "doc": "memory that stores Y"
        },
        "ds.y_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem24",
            "name": "y_mem24",
            "offset": "0x18",
            "doc": "memory that stores Y"
        },
        "ds.y_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem25",
            "name": "y_mem25",
            "offset": "0x19",
            "doc": "memory that stores Y"
        },
        "ds.y_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem26",
            "name": "y_mem26",
            "offset": "0x1a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem27",
            "name": "y_mem27",
            "offset": "0x1b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem28",
            "name": "y_mem28",
            "offset": "0x1c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem29",
            "name": "y_mem29",
            "offset": "0x1d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem30",
            "name": "y_mem30",
            "offset": "0x1e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem31",
            "name": "y_mem31",
            "offset": "0x1f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem32",
            "name": "y_mem32",
            "offset": "0x20",
            "doc": "memory that stores Y"
        },
        "ds.y_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem33",
            "name": "y_mem33",
            "offset": "0x21",
            "doc": "memory that stores Y"
        },
        "ds.y_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem34",
            "name": "y_mem34",
            "offset": "0x22",
            "doc": "memory that stores Y"
        },
        "ds.y_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem35",
            "name": "y_mem35",
            "offset": "0x23",
            "doc": "memory that stores Y"
        },
        "ds.y_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem36",
            "name": "y_mem36",
            "offset": "0x24",
            "doc": "memory that stores Y"
        },
        "ds.y_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem37",
            "name": "y_mem37",
            "offset": "0x25",
            "doc": "memory that stores Y"
        },
        "ds.y_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem38",
            "name": "y_mem38",
            "offset": "0x26",
            "doc": "memory that stores Y"
        },
        "ds.y_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem39",
            "name": "y_mem39",
            "offset": "0x27",
            "doc": "memory that stores Y"
        },
        "ds.y_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem40",
            "name": "y_mem40",
            "offset": "0x28",
            "doc": "memory that stores Y"
        },
        "ds.y_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem41",
            "name": "y_mem41",
            "offset": "0x29",
            "doc": "memory that stores Y"
        },
        "ds.y_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem42",
            "name": "y_mem42",
            "offset": "0x2a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem43",
            "name": "y_mem43",
            "offset": "0x2b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem44",
            "name": "y_mem44",
            "offset": "0x2c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem45",
            "name": "y_mem45",
            "offset": "0x2d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem46",
            "name": "y_mem46",
            "offset": "0x2e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem47",
            "name": "y_mem47",
            "offset": "0x2f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem48",
            "name": "y_mem48",
            "offset": "0x30",
            "doc": "memory that stores Y"
        },
        "ds.y_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem49",
            "name": "y_mem49",
            "offset": "0x31",
            "doc": "memory that stores Y"
        },
        "ds.y_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem50",
            "name": "y_mem50",
            "offset": "0x32",
            "doc": "memory that stores Y"
        },
        "ds.y_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem51",
            "name": "y_mem51",
            "offset": "0x33",
            "doc": "memory that stores Y"
        },
        "ds.y_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem52",
            "name": "y_mem52",
            "offset": "0x34",
            "doc": "memory that stores Y"
        },
        "ds.y_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem53",
            "name": "y_mem53",
            "offset": "0x35",
            "doc": "memory that stores Y"
        },
        "ds.y_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem54",
            "name": "y_mem54",
            "offset": "0x36",
            "doc": "memory that stores Y"
        },
        "ds.y_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem55",
            "name": "y_mem55",
            "offset": "0x37",
            "doc": "memory that stores Y"
        },
        "ds.y_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem56",
            "name": "y_mem56",
            "offset": "0x38",
            "doc": "memory that stores Y"
        },
        "ds.y_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem57",
            "name": "y_mem57",
            "offset": "0x39",
            "doc": "memory that stores Y"
        },
        "ds.y_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem58",
            "name": "y_mem58",
            "offset": "0x3a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem59",
            "name": "y_mem59",
            "offset": "0x3b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem60",
            "name": "y_mem60",
            "offset": "0x3c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem61",
            "name": "y_mem61",
            "offset": "0x3d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem62",
            "name": "y_mem62",
            "offset": "0x3e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem63",
            "name": "y_mem63",
            "offset": "0x3f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem64": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem64",
            "name": "y_mem64",
            "offset": "0x40",
            "doc": "memory that stores Y"
        },
        "ds.y_mem65": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem65",
            "name": "y_mem65",
            "offset": "0x41",
            "doc": "memory that stores Y"
        },
        "ds.y_mem66": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem66",
            "name": "y_mem66",
            "offset": "0x42",
            "doc": "memory that stores Y"
        },
        "ds.y_mem67": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem67",
            "name": "y_mem67",
            "offset": "0x43",
            "doc": "memory that stores Y"
        },
        "ds.y_mem68": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem68",
            "name": "y_mem68",
            "offset": "0x44",
            "doc": "memory that stores Y"
        },
        "ds.y_mem69": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem69",
            "name": "y_mem69",
            "offset": "0x45",
            "doc": "memory that stores Y"
        },
        "ds.y_mem70": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem70",
            "name": "y_mem70",
            "offset": "0x46",
            "doc": "memory that stores Y"
        },
        "ds.y_mem71": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem71",
            "name": "y_mem71",
            "offset": "0x47",
            "doc": "memory that stores Y"
        },
        "ds.y_mem72": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem72",
            "name": "y_mem72",
            "offset": "0x48",
            "doc": "memory that stores Y"
        },
        "ds.y_mem73": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem73",
            "name": "y_mem73",
            "offset": "0x49",
            "doc": "memory that stores Y"
        },
        "ds.y_mem74": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem74",
            "name": "y_mem74",
            "offset": "0x4a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem75": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem75",
            "name": "y_mem75",
            "offset": "0x4b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem76": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem76",
            "name": "y_mem76",
            "offset": "0x4c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem77": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem77",
            "name": "y_mem77",
            "offset": "0x4d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem78": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem78",
            "name": "y_mem78",
            "offset": "0x4e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem79": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem79",
            "name": "y_mem79",
            "offset": "0x4f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem80": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem80",
            "name": "y_mem80",
            "offset": "0x50",
            "doc": "memory that stores Y"
        },
        "ds.y_mem81": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem81",
            "name": "y_mem81",
            "offset": "0x51",
            "doc": "memory that stores Y"
        },
        "ds.y_mem82": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem82",
            "name": "y_mem82",
            "offset": "0x52",
            "doc": "memory that stores Y"
        },
        "ds.y_mem83": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem83",
            "name": "y_mem83",
            "offset": "0x53",
            "doc": "memory that stores Y"
        },
        "ds.y_mem84": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem84",
            "name": "y_mem84",
            "offset": "0x54",
            "doc": "memory that stores Y"
        },
        "ds.y_mem85": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem85",
            "name": "y_mem85",
            "offset": "0x55",
            "doc": "memory that stores Y"
        },
        "ds.y_mem86": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem86",
            "name": "y_mem86",
            "offset": "0x56",
            "doc": "memory that stores Y"
        },
        "ds.y_mem87": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem87",
            "name": "y_mem87",
            "offset": "0x57",
            "doc": "memory that stores Y"
        },
        "ds.y_mem88": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem88",
            "name": "y_mem88",
            "offset": "0x58",
            "doc": "memory that stores Y"
        },
        "ds.y_mem89": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem89",
            "name": "y_mem89",
            "offset": "0x59",
            "doc": "memory that stores Y"
        },
        "ds.y_mem90": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem90",
            "name": "y_mem90",
            "offset": "0x5a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem91": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem91",
            "name": "y_mem91",
            "offset": "0x5b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem92": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem92",
            "name": "y_mem92",
            "offset": "0x5c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem93": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem93",
            "name": "y_mem93",
            "offset": "0x5d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem94": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem94",
            "name": "y_mem94",
            "offset": "0x5e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem95": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem95",
            "name": "y_mem95",
            "offset": "0x5f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem96": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem96",
            "name": "y_mem96",
            "offset": "0x60",
            "doc": "memory that stores Y"
        },
        "ds.y_mem97": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem97",
            "name": "y_mem97",
            "offset": "0x61",
            "doc": "memory that stores Y"
        },
        "ds.y_mem98": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem98",
            "name": "y_mem98",
            "offset": "0x62",
            "doc": "memory that stores Y"
        },
        "ds.y_mem99": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem99",
            "name": "y_mem99",
            "offset": "0x63",
            "doc": "memory that stores Y"
        },
        "ds.y_mem100": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem100",
            "name": "y_mem100",
            "offset": "0x64",
            "doc": "memory that stores Y"
        },
        "ds.y_mem101": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem101",
            "name": "y_mem101",
            "offset": "0x65",
            "doc": "memory that stores Y"
        },
        "ds.y_mem102": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem102",
            "name": "y_mem102",
            "offset": "0x66",
            "doc": "memory that stores Y"
        },
        "ds.y_mem103": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem103",
            "name": "y_mem103",
            "offset": "0x67",
            "doc": "memory that stores Y"
        },
        "ds.y_mem104": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem104",
            "name": "y_mem104",
            "offset": "0x68",
            "doc": "memory that stores Y"
        },
        "ds.y_mem105": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem105",
            "name": "y_mem105",
            "offset": "0x69",
            "doc": "memory that stores Y"
        },
        "ds.y_mem106": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem106",
            "name": "y_mem106",
            "offset": "0x6a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem107": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem107",
            "name": "y_mem107",
            "offset": "0x6b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem108": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem108",
            "name": "y_mem108",
            "offset": "0x6c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem109": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem109",
            "name": "y_mem109",
            "offset": "0x6d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem110": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem110",
            "name": "y_mem110",
            "offset": "0x6e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem111": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem111",
            "name": "y_mem111",
            "offset": "0x6f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem112": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem112",
            "name": "y_mem112",
            "offset": "0x70",
            "doc": "memory that stores Y"
        },
        "ds.y_mem113": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem113",
            "name": "y_mem113",
            "offset": "0x71",
            "doc": "memory that stores Y"
        },
        "ds.y_mem114": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem114",
            "name": "y_mem114",
            "offset": "0x72",
            "doc": "memory that stores Y"
        },
        "ds.y_mem115": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem115",
            "name": "y_mem115",
            "offset": "0x73",
            "doc": "memory that stores Y"
        },
        "ds.y_mem116": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem116",
            "name": "y_mem116",
            "offset": "0x74",
            "doc": "memory that stores Y"
        },
        "ds.y_mem117": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem117",
            "name": "y_mem117",
            "offset": "0x75",
            "doc": "memory that stores Y"
        },
        "ds.y_mem118": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem118",
            "name": "y_mem118",
            "offset": "0x76",
            "doc": "memory that stores Y"
        },
        "ds.y_mem119": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem119",
            "name": "y_mem119",
            "offset": "0x77",
            "doc": "memory that stores Y"
        },
        "ds.y_mem120": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem120",
            "name": "y_mem120",
            "offset": "0x78",
            "doc": "memory that stores Y"
        },
        "ds.y_mem121": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem121",
            "name": "y_mem121",
            "offset": "0x79",
            "doc": "memory that stores Y"
        },
        "ds.y_mem122": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem122",
            "name": "y_mem122",
            "offset": "0x7a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem123": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem123",
            "name": "y_mem123",
            "offset": "0x7b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem124": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem124",
            "name": "y_mem124",
            "offset": "0x7c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem125": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem125",
            "name": "y_mem125",
            "offset": "0x7d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem126": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem126",
            "name": "y_mem126",
            "offset": "0x7e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem127": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem127",
            "name": "y_mem127",
            "offset": "0x7f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem128": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem128",
            "name": "y_mem128",
            "offset": "0x80",
            "doc": "memory that stores Y"
        },
        "ds.y_mem129": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem129",
            "name": "y_mem129",
            "offset": "0x81",
            "doc": "memory that stores Y"
        },
        "ds.y_mem130": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem130",
            "name": "y_mem130",
            "offset": "0x82",
            "doc": "memory that stores Y"
        },
        "ds.y_mem131": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem131",
            "name": "y_mem131",
            "offset": "0x83",
            "doc": "memory that stores Y"
        },
        "ds.y_mem132": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem132",
            "name": "y_mem132",
            "offset": "0x84",
            "doc": "memory that stores Y"
        },
        "ds.y_mem133": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem133",
            "name": "y_mem133",
            "offset": "0x85",
            "doc": "memory that stores Y"
        },
        "ds.y_mem134": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem134",
            "name": "y_mem134",
            "offset": "0x86",
            "doc": "memory that stores Y"
        },
        "ds.y_mem135": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem135",
            "name": "y_mem135",
            "offset": "0x87",
            "doc": "memory that stores Y"
        },
        "ds.y_mem136": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem136",
            "name": "y_mem136",
            "offset": "0x88",
            "doc": "memory that stores Y"
        },
        "ds.y_mem137": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem137",
            "name": "y_mem137",
            "offset": "0x89",
            "doc": "memory that stores Y"
        },
        "ds.y_mem138": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem138",
            "name": "y_mem138",
            "offset": "0x8a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem139": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem139",
            "name": "y_mem139",
            "offset": "0x8b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem140": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem140",
            "name": "y_mem140",
            "offset": "0x8c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem141": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem141",
            "name": "y_mem141",
            "offset": "0x8d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem142": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem142",
            "name": "y_mem142",
            "offset": "0x8e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem143": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem143",
            "name": "y_mem143",
            "offset": "0x8f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem144": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem144",
            "name": "y_mem144",
            "offset": "0x90",
            "doc": "memory that stores Y"
        },
        "ds.y_mem145": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem145",
            "name": "y_mem145",
            "offset": "0x91",
            "doc": "memory that stores Y"
        },
        "ds.y_mem146": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem146",
            "name": "y_mem146",
            "offset": "0x92",
            "doc": "memory that stores Y"
        },
        "ds.y_mem147": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem147",
            "name": "y_mem147",
            "offset": "0x93",
            "doc": "memory that stores Y"
        },
        "ds.y_mem148": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem148",
            "name": "y_mem148",
            "offset": "0x94",
            "doc": "memory that stores Y"
        },
        "ds.y_mem149": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem149",
            "name": "y_mem149",
            "offset": "0x95",
            "doc": "memory that stores Y"
        },
        "ds.y_mem150": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem150",
            "name": "y_mem150",
            "offset": "0x96",
            "doc": "memory that stores Y"
        },
        "ds.y_mem151": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem151",
            "name": "y_mem151",
            "offset": "0x97",
            "doc": "memory that stores Y"
        },
        "ds.y_mem152": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem152",
            "name": "y_mem152",
            "offset": "0x98",
            "doc": "memory that stores Y"
        },
        "ds.y_mem153": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem153",
            "name": "y_mem153",
            "offset": "0x99",
            "doc": "memory that stores Y"
        },
        "ds.y_mem154": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem154",
            "name": "y_mem154",
            "offset": "0x9a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem155": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem155",
            "name": "y_mem155",
            "offset": "0x9b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem156": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem156",
            "name": "y_mem156",
            "offset": "0x9c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem157": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem157",
            "name": "y_mem157",
            "offset": "0x9d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem158": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem158",
            "name": "y_mem158",
            "offset": "0x9e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem159": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem159",
            "name": "y_mem159",
            "offset": "0x9f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem160": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem160",
            "name": "y_mem160",
            "offset": "0xa0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem161": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem161",
            "name": "y_mem161",
            "offset": "0xa1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem162": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem162",
            "name": "y_mem162",
            "offset": "0xa2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem163": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem163",
            "name": "y_mem163",
            "offset": "0xa3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem164": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem164",
            "name": "y_mem164",
            "offset": "0xa4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem165": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem165",
            "name": "y_mem165",
            "offset": "0xa5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem166": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem166",
            "name": "y_mem166",
            "offset": "0xa6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem167": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem167",
            "name": "y_mem167",
            "offset": "0xa7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem168": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem168",
            "name": "y_mem168",
            "offset": "0xa8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem169": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem169",
            "name": "y_mem169",
            "offset": "0xa9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem170": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem170",
            "name": "y_mem170",
            "offset": "0xaa",
            "doc": "memory that stores Y"
        },
        "ds.y_mem171": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem171",
            "name": "y_mem171",
            "offset": "0xab",
            "doc": "memory that stores Y"
        },
        "ds.y_mem172": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem172",
            "name": "y_mem172",
            "offset": "0xac",
            "doc": "memory that stores Y"
        },
        "ds.y_mem173": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem173",
            "name": "y_mem173",
            "offset": "0xad",
            "doc": "memory that stores Y"
        },
        "ds.y_mem174": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem174",
            "name": "y_mem174",
            "offset": "0xae",
            "doc": "memory that stores Y"
        },
        "ds.y_mem175": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem175",
            "name": "y_mem175",
            "offset": "0xaf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem176": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem176",
            "name": "y_mem176",
            "offset": "0xb0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem177": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem177",
            "name": "y_mem177",
            "offset": "0xb1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem178": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem178",
            "name": "y_mem178",
            "offset": "0xb2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem179": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem179",
            "name": "y_mem179",
            "offset": "0xb3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem180": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem180",
            "name": "y_mem180",
            "offset": "0xb4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem181": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem181",
            "name": "y_mem181",
            "offset": "0xb5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem182": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem182",
            "name": "y_mem182",
            "offset": "0xb6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem183": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem183",
            "name": "y_mem183",
            "offset": "0xb7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem184": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem184",
            "name": "y_mem184",
            "offset": "0xb8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem185": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem185",
            "name": "y_mem185",
            "offset": "0xb9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem186": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem186",
            "name": "y_mem186",
            "offset": "0xba",
            "doc": "memory that stores Y"
        },
        "ds.y_mem187": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem187",
            "name": "y_mem187",
            "offset": "0xbb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem188": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem188",
            "name": "y_mem188",
            "offset": "0xbc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem189": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem189",
            "name": "y_mem189",
            "offset": "0xbd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem190": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem190",
            "name": "y_mem190",
            "offset": "0xbe",
            "doc": "memory that stores Y"
        },
        "ds.y_mem191": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem191",
            "name": "y_mem191",
            "offset": "0xbf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem192": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem192",
            "name": "y_mem192",
            "offset": "0xc0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem193": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem193",
            "name": "y_mem193",
            "offset": "0xc1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem194": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem194",
            "name": "y_mem194",
            "offset": "0xc2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem195": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem195",
            "name": "y_mem195",
            "offset": "0xc3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem196": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem196",
            "name": "y_mem196",
            "offset": "0xc4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem197": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem197",
            "name": "y_mem197",
            "offset": "0xc5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem198": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem198",
            "name": "y_mem198",
            "offset": "0xc6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem199": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem199",
            "name": "y_mem199",
            "offset": "0xc7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem200": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem200",
            "name": "y_mem200",
            "offset": "0xc8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem201": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem201",
            "name": "y_mem201",
            "offset": "0xc9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem202": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem202",
            "name": "y_mem202",
            "offset": "0xca",
            "doc": "memory that stores Y"
        },
        "ds.y_mem203": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem203",
            "name": "y_mem203",
            "offset": "0xcb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem204": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem204",
            "name": "y_mem204",
            "offset": "0xcc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem205": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem205",
            "name": "y_mem205",
            "offset": "0xcd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem206": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem206",
            "name": "y_mem206",
            "offset": "0xce",
            "doc": "memory that stores Y"
        },
        "ds.y_mem207": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem207",
            "name": "y_mem207",
            "offset": "0xcf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem208": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem208",
            "name": "y_mem208",
            "offset": "0xd0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem209": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem209",
            "name": "y_mem209",
            "offset": "0xd1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem210": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem210",
            "name": "y_mem210",
            "offset": "0xd2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem211": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem211",
            "name": "y_mem211",
            "offset": "0xd3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem212": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem212",
            "name": "y_mem212",
            "offset": "0xd4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem213": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem213",
            "name": "y_mem213",
            "offset": "0xd5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem214": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem214",
            "name": "y_mem214",
            "offset": "0xd6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem215": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem215",
            "name": "y_mem215",
            "offset": "0xd7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem216": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem216",
            "name": "y_mem216",
            "offset": "0xd8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem217": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem217",
            "name": "y_mem217",
            "offset": "0xd9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem218": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem218",
            "name": "y_mem218",
            "offset": "0xda",
            "doc": "memory that stores Y"
        },
        "ds.y_mem219": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem219",
            "name": "y_mem219",
            "offset": "0xdb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem220": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem220",
            "name": "y_mem220",
            "offset": "0xdc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem221": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem221",
            "name": "y_mem221",
            "offset": "0xdd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem222": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem222",
            "name": "y_mem222",
            "offset": "0xde",
            "doc": "memory that stores Y"
        },
        "ds.y_mem223": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem223",
            "name": "y_mem223",
            "offset": "0xdf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem224": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem224",
            "name": "y_mem224",
            "offset": "0xe0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem225": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem225",
            "name": "y_mem225",
            "offset": "0xe1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem226": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem226",
            "name": "y_mem226",
            "offset": "0xe2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem227": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem227",
            "name": "y_mem227",
            "offset": "0xe3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem228": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem228",
            "name": "y_mem228",
            "offset": "0xe4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem229": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem229",
            "name": "y_mem229",
            "offset": "0xe5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem230": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem230",
            "name": "y_mem230",
            "offset": "0xe6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem231": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem231",
            "name": "y_mem231",
            "offset": "0xe7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem232": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem232",
            "name": "y_mem232",
            "offset": "0xe8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem233": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem233",
            "name": "y_mem233",
            "offset": "0xe9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem234": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem234",
            "name": "y_mem234",
            "offset": "0xea",
            "doc": "memory that stores Y"
        },
        "ds.y_mem235": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem235",
            "name": "y_mem235",
            "offset": "0xeb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem236": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem236",
            "name": "y_mem236",
            "offset": "0xec",
            "doc": "memory that stores Y"
        },
        "ds.y_mem237": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem237",
            "name": "y_mem237",
            "offset": "0xed",
            "doc": "memory that stores Y"
        },
        "ds.y_mem238": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem238",
            "name": "y_mem238",
            "offset": "0xee",
            "doc": "memory that stores Y"
        },
        "ds.y_mem239": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem239",
            "name": "y_mem239",
            "offset": "0xef",
            "doc": "memory that stores Y"
        },
        "ds.y_mem240": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem240",
            "name": "y_mem240",
            "offset": "0xf0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem241": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem241",
            "name": "y_mem241",
            "offset": "0xf1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem242": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem242",
            "name": "y_mem242",
            "offset": "0xf2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem243": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem243",
            "name": "y_mem243",
            "offset": "0xf3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem244": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem244",
            "name": "y_mem244",
            "offset": "0xf4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem245": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem245",
            "name": "y_mem245",
            "offset": "0xf5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem246": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem246",
            "name": "y_mem246",
            "offset": "0xf6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem247": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem247",
            "name": "y_mem247",
            "offset": "0xf7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem248": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem248",
            "name": "y_mem248",
            "offset": "0xf8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem249": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem249",
            "name": "y_mem249",
            "offset": "0xf9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem250": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem250",
            "name": "y_mem250",
            "offset": "0xfa",
            "doc": "memory that stores Y"
        },
        "ds.y_mem251": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem251",
            "name": "y_mem251",
            "offset": "0xfb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem252": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem252",
            "name": "y_mem252",
            "offset": "0xfc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem253": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem253",
            "name": "y_mem253",
            "offset": "0xfd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem254": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem254",
            "name": "y_mem254",
            "offset": "0xfe",
            "doc": "memory that stores Y"
        },
        "ds.y_mem255": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem255",
            "name": "y_mem255",
            "offset": "0xff",
            "doc": "memory that stores Y"
        },
        "ds.y_mem256": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem256",
            "name": "y_mem256",
            "offset": "0x100",
            "doc": "memory that stores Y"
        },
        "ds.y_mem257": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem257",
            "name": "y_mem257",
            "offset": "0x101",
            "doc": "memory that stores Y"
        },
        "ds.y_mem258": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem258",
            "name": "y_mem258",
            "offset": "0x102",
            "doc": "memory that stores Y"
        },
        "ds.y_mem259": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem259",
            "name": "y_mem259",
            "offset": "0x103",
            "doc": "memory that stores Y"
        },
        "ds.y_mem260": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem260",
            "name": "y_mem260",
            "offset": "0x104",
            "doc": "memory that stores Y"
        },
        "ds.y_mem261": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem261",
            "name": "y_mem261",
            "offset": "0x105",
            "doc": "memory that stores Y"
        },
        "ds.y_mem262": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem262",
            "name": "y_mem262",
            "offset": "0x106",
            "doc": "memory that stores Y"
        },
        "ds.y_mem263": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem263",
            "name": "y_mem263",
            "offset": "0x107",
            "doc": "memory that stores Y"
        },
        "ds.y_mem264": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem264",
            "name": "y_mem264",
            "offset": "0x108",
            "doc": "memory that stores Y"
        },
        "ds.y_mem265": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem265",
            "name": "y_mem265",
            "offset": "0x109",
            "doc": "memory that stores Y"
        },
        "ds.y_mem266": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem266",
            "name": "y_mem266",
            "offset": "0x10a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem267": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem267",
            "name": "y_mem267",
            "offset": "0x10b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem268": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem268",
            "name": "y_mem268",
            "offset": "0x10c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem269": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem269",
            "name": "y_mem269",
            "offset": "0x10d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem270": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem270",
            "name": "y_mem270",
            "offset": "0x10e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem271": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem271",
            "name": "y_mem271",
            "offset": "0x10f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem272": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem272",
            "name": "y_mem272",
            "offset": "0x110",
            "doc": "memory that stores Y"
        },
        "ds.y_mem273": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem273",
            "name": "y_mem273",
            "offset": "0x111",
            "doc": "memory that stores Y"
        },
        "ds.y_mem274": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem274",
            "name": "y_mem274",
            "offset": "0x112",
            "doc": "memory that stores Y"
        },
        "ds.y_mem275": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem275",
            "name": "y_mem275",
            "offset": "0x113",
            "doc": "memory that stores Y"
        },
        "ds.y_mem276": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem276",
            "name": "y_mem276",
            "offset": "0x114",
            "doc": "memory that stores Y"
        },
        "ds.y_mem277": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem277",
            "name": "y_mem277",
            "offset": "0x115",
            "doc": "memory that stores Y"
        },
        "ds.y_mem278": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem278",
            "name": "y_mem278",
            "offset": "0x116",
            "doc": "memory that stores Y"
        },
        "ds.y_mem279": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem279",
            "name": "y_mem279",
            "offset": "0x117",
            "doc": "memory that stores Y"
        },
        "ds.y_mem280": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem280",
            "name": "y_mem280",
            "offset": "0x118",
            "doc": "memory that stores Y"
        },
        "ds.y_mem281": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem281",
            "name": "y_mem281",
            "offset": "0x119",
            "doc": "memory that stores Y"
        },
        "ds.y_mem282": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem282",
            "name": "y_mem282",
            "offset": "0x11a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem283": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem283",
            "name": "y_mem283",
            "offset": "0x11b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem284": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem284",
            "name": "y_mem284",
            "offset": "0x11c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem285": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem285",
            "name": "y_mem285",
            "offset": "0x11d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem286": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem286",
            "name": "y_mem286",
            "offset": "0x11e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem287": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem287",
            "name": "y_mem287",
            "offset": "0x11f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem288": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem288",
            "name": "y_mem288",
            "offset": "0x120",
            "doc": "memory that stores Y"
        },
        "ds.y_mem289": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem289",
            "name": "y_mem289",
            "offset": "0x121",
            "doc": "memory that stores Y"
        },
        "ds.y_mem290": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem290",
            "name": "y_mem290",
            "offset": "0x122",
            "doc": "memory that stores Y"
        },
        "ds.y_mem291": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem291",
            "name": "y_mem291",
            "offset": "0x123",
            "doc": "memory that stores Y"
        },
        "ds.y_mem292": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem292",
            "name": "y_mem292",
            "offset": "0x124",
            "doc": "memory that stores Y"
        },
        "ds.y_mem293": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem293",
            "name": "y_mem293",
            "offset": "0x125",
            "doc": "memory that stores Y"
        },
        "ds.y_mem294": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem294",
            "name": "y_mem294",
            "offset": "0x126",
            "doc": "memory that stores Y"
        },
        "ds.y_mem295": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem295",
            "name": "y_mem295",
            "offset": "0x127",
            "doc": "memory that stores Y"
        },
        "ds.y_mem296": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem296",
            "name": "y_mem296",
            "offset": "0x128",
            "doc": "memory that stores Y"
        },
        "ds.y_mem297": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem297",
            "name": "y_mem297",
            "offset": "0x129",
            "doc": "memory that stores Y"
        },
        "ds.y_mem298": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem298",
            "name": "y_mem298",
            "offset": "0x12a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem299": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem299",
            "name": "y_mem299",
            "offset": "0x12b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem300": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem300",
            "name": "y_mem300",
            "offset": "0x12c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem301": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem301",
            "name": "y_mem301",
            "offset": "0x12d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem302": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem302",
            "name": "y_mem302",
            "offset": "0x12e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem303": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem303",
            "name": "y_mem303",
            "offset": "0x12f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem304": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem304",
            "name": "y_mem304",
            "offset": "0x130",
            "doc": "memory that stores Y"
        },
        "ds.y_mem305": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem305",
            "name": "y_mem305",
            "offset": "0x131",
            "doc": "memory that stores Y"
        },
        "ds.y_mem306": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem306",
            "name": "y_mem306",
            "offset": "0x132",
            "doc": "memory that stores Y"
        },
        "ds.y_mem307": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem307",
            "name": "y_mem307",
            "offset": "0x133",
            "doc": "memory that stores Y"
        },
        "ds.y_mem308": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem308",
            "name": "y_mem308",
            "offset": "0x134",
            "doc": "memory that stores Y"
        },
        "ds.y_mem309": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem309",
            "name": "y_mem309",
            "offset": "0x135",
            "doc": "memory that stores Y"
        },
        "ds.y_mem310": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem310",
            "name": "y_mem310",
            "offset": "0x136",
            "doc": "memory that stores Y"
        },
        "ds.y_mem311": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem311",
            "name": "y_mem311",
            "offset": "0x137",
            "doc": "memory that stores Y"
        },
        "ds.y_mem312": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem312",
            "name": "y_mem312",
            "offset": "0x138",
            "doc": "memory that stores Y"
        },
        "ds.y_mem313": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem313",
            "name": "y_mem313",
            "offset": "0x139",
            "doc": "memory that stores Y"
        },
        "ds.y_mem314": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem314",
            "name": "y_mem314",
            "offset": "0x13a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem315": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem315",
            "name": "y_mem315",
            "offset": "0x13b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem316": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem316",
            "name": "y_mem316",
            "offset": "0x13c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem317": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem317",
            "name": "y_mem317",
            "offset": "0x13d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem318": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem318",
            "name": "y_mem318",
            "offset": "0x13e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem319": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem319",
            "name": "y_mem319",
            "offset": "0x13f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem320": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem320",
            "name": "y_mem320",
            "offset": "0x140",
            "doc": "memory that stores Y"
        },
        "ds.y_mem321": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem321",
            "name": "y_mem321",
            "offset": "0x141",
            "doc": "memory that stores Y"
        },
        "ds.y_mem322": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem322",
            "name": "y_mem322",
            "offset": "0x142",
            "doc": "memory that stores Y"
        },
        "ds.y_mem323": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem323",
            "name": "y_mem323",
            "offset": "0x143",
            "doc": "memory that stores Y"
        },
        "ds.y_mem324": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem324",
            "name": "y_mem324",
            "offset": "0x144",
            "doc": "memory that stores Y"
        },
        "ds.y_mem325": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem325",
            "name": "y_mem325",
            "offset": "0x145",
            "doc": "memory that stores Y"
        },
        "ds.y_mem326": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem326",
            "name": "y_mem326",
            "offset": "0x146",
            "doc": "memory that stores Y"
        },
        "ds.y_mem327": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem327",
            "name": "y_mem327",
            "offset": "0x147",
            "doc": "memory that stores Y"
        },
        "ds.y_mem328": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem328",
            "name": "y_mem328",
            "offset": "0x148",
            "doc": "memory that stores Y"
        },
        "ds.y_mem329": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem329",
            "name": "y_mem329",
            "offset": "0x149",
            "doc": "memory that stores Y"
        },
        "ds.y_mem330": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem330",
            "name": "y_mem330",
            "offset": "0x14a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem331": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem331",
            "name": "y_mem331",
            "offset": "0x14b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem332": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem332",
            "name": "y_mem332",
            "offset": "0x14c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem333": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem333",
            "name": "y_mem333",
            "offset": "0x14d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem334": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem334",
            "name": "y_mem334",
            "offset": "0x14e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem335": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem335",
            "name": "y_mem335",
            "offset": "0x14f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem336": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem336",
            "name": "y_mem336",
            "offset": "0x150",
            "doc": "memory that stores Y"
        },
        "ds.y_mem337": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem337",
            "name": "y_mem337",
            "offset": "0x151",
            "doc": "memory that stores Y"
        },
        "ds.y_mem338": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem338",
            "name": "y_mem338",
            "offset": "0x152",
            "doc": "memory that stores Y"
        },
        "ds.y_mem339": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem339",
            "name": "y_mem339",
            "offset": "0x153",
            "doc": "memory that stores Y"
        },
        "ds.y_mem340": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem340",
            "name": "y_mem340",
            "offset": "0x154",
            "doc": "memory that stores Y"
        },
        "ds.y_mem341": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem341",
            "name": "y_mem341",
            "offset": "0x155",
            "doc": "memory that stores Y"
        },
        "ds.y_mem342": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem342",
            "name": "y_mem342",
            "offset": "0x156",
            "doc": "memory that stores Y"
        },
        "ds.y_mem343": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem343",
            "name": "y_mem343",
            "offset": "0x157",
            "doc": "memory that stores Y"
        },
        "ds.y_mem344": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem344",
            "name": "y_mem344",
            "offset": "0x158",
            "doc": "memory that stores Y"
        },
        "ds.y_mem345": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem345",
            "name": "y_mem345",
            "offset": "0x159",
            "doc": "memory that stores Y"
        },
        "ds.y_mem346": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem346",
            "name": "y_mem346",
            "offset": "0x15a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem347": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem347",
            "name": "y_mem347",
            "offset": "0x15b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem348": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem348",
            "name": "y_mem348",
            "offset": "0x15c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem349": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem349",
            "name": "y_mem349",
            "offset": "0x15d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem350": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem350",
            "name": "y_mem350",
            "offset": "0x15e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem351": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem351",
            "name": "y_mem351",
            "offset": "0x15f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem352": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem352",
            "name": "y_mem352",
            "offset": "0x160",
            "doc": "memory that stores Y"
        },
        "ds.y_mem353": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem353",
            "name": "y_mem353",
            "offset": "0x161",
            "doc": "memory that stores Y"
        },
        "ds.y_mem354": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem354",
            "name": "y_mem354",
            "offset": "0x162",
            "doc": "memory that stores Y"
        },
        "ds.y_mem355": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem355",
            "name": "y_mem355",
            "offset": "0x163",
            "doc": "memory that stores Y"
        },
        "ds.y_mem356": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem356",
            "name": "y_mem356",
            "offset": "0x164",
            "doc": "memory that stores Y"
        },
        "ds.y_mem357": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem357",
            "name": "y_mem357",
            "offset": "0x165",
            "doc": "memory that stores Y"
        },
        "ds.y_mem358": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem358",
            "name": "y_mem358",
            "offset": "0x166",
            "doc": "memory that stores Y"
        },
        "ds.y_mem359": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem359",
            "name": "y_mem359",
            "offset": "0x167",
            "doc": "memory that stores Y"
        },
        "ds.y_mem360": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem360",
            "name": "y_mem360",
            "offset": "0x168",
            "doc": "memory that stores Y"
        },
        "ds.y_mem361": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem361",
            "name": "y_mem361",
            "offset": "0x169",
            "doc": "memory that stores Y"
        },
        "ds.y_mem362": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem362",
            "name": "y_mem362",
            "offset": "0x16a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem363": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem363",
            "name": "y_mem363",
            "offset": "0x16b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem364": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem364",
            "name": "y_mem364",
            "offset": "0x16c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem365": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem365",
            "name": "y_mem365",
            "offset": "0x16d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem366": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem366",
            "name": "y_mem366",
            "offset": "0x16e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem367": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem367",
            "name": "y_mem367",
            "offset": "0x16f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem368": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem368",
            "name": "y_mem368",
            "offset": "0x170",
            "doc": "memory that stores Y"
        },
        "ds.y_mem369": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem369",
            "name": "y_mem369",
            "offset": "0x171",
            "doc": "memory that stores Y"
        },
        "ds.y_mem370": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem370",
            "name": "y_mem370",
            "offset": "0x172",
            "doc": "memory that stores Y"
        },
        "ds.y_mem371": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem371",
            "name": "y_mem371",
            "offset": "0x173",
            "doc": "memory that stores Y"
        },
        "ds.y_mem372": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem372",
            "name": "y_mem372",
            "offset": "0x174",
            "doc": "memory that stores Y"
        },
        "ds.y_mem373": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem373",
            "name": "y_mem373",
            "offset": "0x175",
            "doc": "memory that stores Y"
        },
        "ds.y_mem374": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem374",
            "name": "y_mem374",
            "offset": "0x176",
            "doc": "memory that stores Y"
        },
        "ds.y_mem375": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem375",
            "name": "y_mem375",
            "offset": "0x177",
            "doc": "memory that stores Y"
        },
        "ds.y_mem376": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem376",
            "name": "y_mem376",
            "offset": "0x178",
            "doc": "memory that stores Y"
        },
        "ds.y_mem377": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem377",
            "name": "y_mem377",
            "offset": "0x179",
            "doc": "memory that stores Y"
        },
        "ds.y_mem378": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem378",
            "name": "y_mem378",
            "offset": "0x17a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem379": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem379",
            "name": "y_mem379",
            "offset": "0x17b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem380": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem380",
            "name": "y_mem380",
            "offset": "0x17c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem381": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem381",
            "name": "y_mem381",
            "offset": "0x17d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem382": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem382",
            "name": "y_mem382",
            "offset": "0x17e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem383": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem383",
            "name": "y_mem383",
            "offset": "0x17f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem384": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem384",
            "name": "y_mem384",
            "offset": "0x180",
            "doc": "memory that stores Y"
        },
        "ds.y_mem385": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem385",
            "name": "y_mem385",
            "offset": "0x181",
            "doc": "memory that stores Y"
        },
        "ds.y_mem386": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem386",
            "name": "y_mem386",
            "offset": "0x182",
            "doc": "memory that stores Y"
        },
        "ds.y_mem387": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem387",
            "name": "y_mem387",
            "offset": "0x183",
            "doc": "memory that stores Y"
        },
        "ds.y_mem388": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem388",
            "name": "y_mem388",
            "offset": "0x184",
            "doc": "memory that stores Y"
        },
        "ds.y_mem389": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem389",
            "name": "y_mem389",
            "offset": "0x185",
            "doc": "memory that stores Y"
        },
        "ds.y_mem390": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem390",
            "name": "y_mem390",
            "offset": "0x186",
            "doc": "memory that stores Y"
        },
        "ds.y_mem391": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem391",
            "name": "y_mem391",
            "offset": "0x187",
            "doc": "memory that stores Y"
        },
        "ds.y_mem392": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem392",
            "name": "y_mem392",
            "offset": "0x188",
            "doc": "memory that stores Y"
        },
        "ds.y_mem393": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem393",
            "name": "y_mem393",
            "offset": "0x189",
            "doc": "memory that stores Y"
        },
        "ds.y_mem394": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem394",
            "name": "y_mem394",
            "offset": "0x18a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem395": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem395",
            "name": "y_mem395",
            "offset": "0x18b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem396": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem396",
            "name": "y_mem396",
            "offset": "0x18c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem397": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem397",
            "name": "y_mem397",
            "offset": "0x18d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem398": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem398",
            "name": "y_mem398",
            "offset": "0x18e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem399": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem399",
            "name": "y_mem399",
            "offset": "0x18f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem400": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem400",
            "name": "y_mem400",
            "offset": "0x190",
            "doc": "memory that stores Y"
        },
        "ds.y_mem401": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem401",
            "name": "y_mem401",
            "offset": "0x191",
            "doc": "memory that stores Y"
        },
        "ds.y_mem402": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem402",
            "name": "y_mem402",
            "offset": "0x192",
            "doc": "memory that stores Y"
        },
        "ds.y_mem403": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem403",
            "name": "y_mem403",
            "offset": "0x193",
            "doc": "memory that stores Y"
        },
        "ds.y_mem404": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem404",
            "name": "y_mem404",
            "offset": "0x194",
            "doc": "memory that stores Y"
        },
        "ds.y_mem405": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem405",
            "name": "y_mem405",
            "offset": "0x195",
            "doc": "memory that stores Y"
        },
        "ds.y_mem406": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem406",
            "name": "y_mem406",
            "offset": "0x196",
            "doc": "memory that stores Y"
        },
        "ds.y_mem407": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem407",
            "name": "y_mem407",
            "offset": "0x197",
            "doc": "memory that stores Y"
        },
        "ds.y_mem408": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem408",
            "name": "y_mem408",
            "offset": "0x198",
            "doc": "memory that stores Y"
        },
        "ds.y_mem409": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem409",
            "name": "y_mem409",
            "offset": "0x199",
            "doc": "memory that stores Y"
        },
        "ds.y_mem410": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem410",
            "name": "y_mem410",
            "offset": "0x19a",
            "doc": "memory that stores Y"
        },
        "ds.y_mem411": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem411",
            "name": "y_mem411",
            "offset": "0x19b",
            "doc": "memory that stores Y"
        },
        "ds.y_mem412": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem412",
            "name": "y_mem412",
            "offset": "0x19c",
            "doc": "memory that stores Y"
        },
        "ds.y_mem413": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem413",
            "name": "y_mem413",
            "offset": "0x19d",
            "doc": "memory that stores Y"
        },
        "ds.y_mem414": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem414",
            "name": "y_mem414",
            "offset": "0x19e",
            "doc": "memory that stores Y"
        },
        "ds.y_mem415": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem415",
            "name": "y_mem415",
            "offset": "0x19f",
            "doc": "memory that stores Y"
        },
        "ds.y_mem416": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem416",
            "name": "y_mem416",
            "offset": "0x1a0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem417": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem417",
            "name": "y_mem417",
            "offset": "0x1a1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem418": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem418",
            "name": "y_mem418",
            "offset": "0x1a2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem419": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem419",
            "name": "y_mem419",
            "offset": "0x1a3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem420": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem420",
            "name": "y_mem420",
            "offset": "0x1a4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem421": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem421",
            "name": "y_mem421",
            "offset": "0x1a5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem422": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem422",
            "name": "y_mem422",
            "offset": "0x1a6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem423": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem423",
            "name": "y_mem423",
            "offset": "0x1a7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem424": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem424",
            "name": "y_mem424",
            "offset": "0x1a8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem425": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem425",
            "name": "y_mem425",
            "offset": "0x1a9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem426": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem426",
            "name": "y_mem426",
            "offset": "0x1aa",
            "doc": "memory that stores Y"
        },
        "ds.y_mem427": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem427",
            "name": "y_mem427",
            "offset": "0x1ab",
            "doc": "memory that stores Y"
        },
        "ds.y_mem428": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem428",
            "name": "y_mem428",
            "offset": "0x1ac",
            "doc": "memory that stores Y"
        },
        "ds.y_mem429": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem429",
            "name": "y_mem429",
            "offset": "0x1ad",
            "doc": "memory that stores Y"
        },
        "ds.y_mem430": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem430",
            "name": "y_mem430",
            "offset": "0x1ae",
            "doc": "memory that stores Y"
        },
        "ds.y_mem431": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem431",
            "name": "y_mem431",
            "offset": "0x1af",
            "doc": "memory that stores Y"
        },
        "ds.y_mem432": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem432",
            "name": "y_mem432",
            "offset": "0x1b0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem433": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem433",
            "name": "y_mem433",
            "offset": "0x1b1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem434": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem434",
            "name": "y_mem434",
            "offset": "0x1b2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem435": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem435",
            "name": "y_mem435",
            "offset": "0x1b3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem436": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem436",
            "name": "y_mem436",
            "offset": "0x1b4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem437": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem437",
            "name": "y_mem437",
            "offset": "0x1b5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem438": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem438",
            "name": "y_mem438",
            "offset": "0x1b6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem439": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem439",
            "name": "y_mem439",
            "offset": "0x1b7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem440": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem440",
            "name": "y_mem440",
            "offset": "0x1b8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem441": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem441",
            "name": "y_mem441",
            "offset": "0x1b9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem442": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem442",
            "name": "y_mem442",
            "offset": "0x1ba",
            "doc": "memory that stores Y"
        },
        "ds.y_mem443": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem443",
            "name": "y_mem443",
            "offset": "0x1bb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem444": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem444",
            "name": "y_mem444",
            "offset": "0x1bc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem445": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem445",
            "name": "y_mem445",
            "offset": "0x1bd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem446": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem446",
            "name": "y_mem446",
            "offset": "0x1be",
            "doc": "memory that stores Y"
        },
        "ds.y_mem447": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem447",
            "name": "y_mem447",
            "offset": "0x1bf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem448": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem448",
            "name": "y_mem448",
            "offset": "0x1c0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem449": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem449",
            "name": "y_mem449",
            "offset": "0x1c1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem450": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem450",
            "name": "y_mem450",
            "offset": "0x1c2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem451": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem451",
            "name": "y_mem451",
            "offset": "0x1c3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem452": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem452",
            "name": "y_mem452",
            "offset": "0x1c4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem453": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem453",
            "name": "y_mem453",
            "offset": "0x1c5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem454": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem454",
            "name": "y_mem454",
            "offset": "0x1c6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem455": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem455",
            "name": "y_mem455",
            "offset": "0x1c7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem456": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem456",
            "name": "y_mem456",
            "offset": "0x1c8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem457": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem457",
            "name": "y_mem457",
            "offset": "0x1c9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem458": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem458",
            "name": "y_mem458",
            "offset": "0x1ca",
            "doc": "memory that stores Y"
        },
        "ds.y_mem459": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem459",
            "name": "y_mem459",
            "offset": "0x1cb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem460": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem460",
            "name": "y_mem460",
            "offset": "0x1cc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem461": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem461",
            "name": "y_mem461",
            "offset": "0x1cd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem462": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem462",
            "name": "y_mem462",
            "offset": "0x1ce",
            "doc": "memory that stores Y"
        },
        "ds.y_mem463": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem463",
            "name": "y_mem463",
            "offset": "0x1cf",
            "doc": "memory that stores Y"
        },
        "ds.y_mem464": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem464",
            "name": "y_mem464",
            "offset": "0x1d0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem465": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem465",
            "name": "y_mem465",
            "offset": "0x1d1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem466": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem466",
            "name": "y_mem466",
            "offset": "0x1d2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem467": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem467",
            "name": "y_mem467",
            "offset": "0x1d3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem468": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem468",
            "name": "y_mem468",
            "offset": "0x1d4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem469": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem469",
            "name": "y_mem469",
            "offset": "0x1d5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem470": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem470",
            "name": "y_mem470",
            "offset": "0x1d6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem471": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem471",
            "name": "y_mem471",
            "offset": "0x1d7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem472": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem472",
            "name": "y_mem472",
            "offset": "0x1d8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem473": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem473",
            "name": "y_mem473",
            "offset": "0x1d9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem474": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem474",
            "name": "y_mem474",
            "offset": "0x1da",
            "doc": "memory that stores Y"
        },
        "ds.y_mem475": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem475",
            "name": "y_mem475",
            "offset": "0x1db",
            "doc": "memory that stores Y"
        },
        "ds.y_mem476": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem476",
            "name": "y_mem476",
            "offset": "0x1dc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem477": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem477",
            "name": "y_mem477",
            "offset": "0x1dd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem478": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem478",
            "name": "y_mem478",
            "offset": "0x1de",
            "doc": "memory that stores Y"
        },
        "ds.y_mem479": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem479",
            "name": "y_mem479",
            "offset": "0x1df",
            "doc": "memory that stores Y"
        },
        "ds.y_mem480": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem480",
            "name": "y_mem480",
            "offset": "0x1e0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem481": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem481",
            "name": "y_mem481",
            "offset": "0x1e1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem482": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem482",
            "name": "y_mem482",
            "offset": "0x1e2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem483": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem483",
            "name": "y_mem483",
            "offset": "0x1e3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem484": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem484",
            "name": "y_mem484",
            "offset": "0x1e4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem485": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem485",
            "name": "y_mem485",
            "offset": "0x1e5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem486": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem486",
            "name": "y_mem486",
            "offset": "0x1e6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem487": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem487",
            "name": "y_mem487",
            "offset": "0x1e7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem488": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem488",
            "name": "y_mem488",
            "offset": "0x1e8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem489": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem489",
            "name": "y_mem489",
            "offset": "0x1e9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem490": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem490",
            "name": "y_mem490",
            "offset": "0x1ea",
            "doc": "memory that stores Y"
        },
        "ds.y_mem491": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem491",
            "name": "y_mem491",
            "offset": "0x1eb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem492": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem492",
            "name": "y_mem492",
            "offset": "0x1ec",
            "doc": "memory that stores Y"
        },
        "ds.y_mem493": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem493",
            "name": "y_mem493",
            "offset": "0x1ed",
            "doc": "memory that stores Y"
        },
        "ds.y_mem494": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem494",
            "name": "y_mem494",
            "offset": "0x1ee",
            "doc": "memory that stores Y"
        },
        "ds.y_mem495": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem495",
            "name": "y_mem495",
            "offset": "0x1ef",
            "doc": "memory that stores Y"
        },
        "ds.y_mem496": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem496",
            "name": "y_mem496",
            "offset": "0x1f0",
            "doc": "memory that stores Y"
        },
        "ds.y_mem497": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem497",
            "name": "y_mem497",
            "offset": "0x1f1",
            "doc": "memory that stores Y"
        },
        "ds.y_mem498": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem498",
            "name": "y_mem498",
            "offset": "0x1f2",
            "doc": "memory that stores Y"
        },
        "ds.y_mem499": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem499",
            "name": "y_mem499",
            "offset": "0x1f3",
            "doc": "memory that stores Y"
        },
        "ds.y_mem500": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem500",
            "name": "y_mem500",
            "offset": "0x1f4",
            "doc": "memory that stores Y"
        },
        "ds.y_mem501": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem501",
            "name": "y_mem501",
            "offset": "0x1f5",
            "doc": "memory that stores Y"
        },
        "ds.y_mem502": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem502",
            "name": "y_mem502",
            "offset": "0x1f6",
            "doc": "memory that stores Y"
        },
        "ds.y_mem503": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem503",
            "name": "y_mem503",
            "offset": "0x1f7",
            "doc": "memory that stores Y"
        },
        "ds.y_mem504": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem504",
            "name": "y_mem504",
            "offset": "0x1f8",
            "doc": "memory that stores Y"
        },
        "ds.y_mem505": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem505",
            "name": "y_mem505",
            "offset": "0x1f9",
            "doc": "memory that stores Y"
        },
        "ds.y_mem506": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem506",
            "name": "y_mem506",
            "offset": "0x1fa",
            "doc": "memory that stores Y"
        },
        "ds.y_mem507": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem507",
            "name": "y_mem507",
            "offset": "0x1fb",
            "doc": "memory that stores Y"
        },
        "ds.y_mem508": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem508",
            "name": "y_mem508",
            "offset": "0x1fc",
            "doc": "memory that stores Y"
        },
        "ds.y_mem509": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem509",
            "name": "y_mem509",
            "offset": "0x1fd",
            "doc": "memory that stores Y"
        },
        "ds.y_mem510": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem510",
            "name": "y_mem510",
            "offset": "0x1fe",
            "doc": "memory that stores Y"
        },
        "ds.y_mem511": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.y_mem511",
            "name": "y_mem511",
            "offset": "0x1ff",
            "doc": "memory that stores Y"
        },
        "ds.m_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem0",
            "name": "m_mem0",
            "offset": "0x200",
            "doc": "memory that stores M"
        },
        "ds.m_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem1",
            "name": "m_mem1",
            "offset": "0x201",
            "doc": "memory that stores M"
        },
        "ds.m_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem2",
            "name": "m_mem2",
            "offset": "0x202",
            "doc": "memory that stores M"
        },
        "ds.m_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem3",
            "name": "m_mem3",
            "offset": "0x203",
            "doc": "memory that stores M"
        },
        "ds.m_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem4",
            "name": "m_mem4",
            "offset": "0x204",
            "doc": "memory that stores M"
        },
        "ds.m_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem5",
            "name": "m_mem5",
            "offset": "0x205",
            "doc": "memory that stores M"
        },
        "ds.m_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem6",
            "name": "m_mem6",
            "offset": "0x206",
            "doc": "memory that stores M"
        },
        "ds.m_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem7",
            "name": "m_mem7",
            "offset": "0x207",
            "doc": "memory that stores M"
        },
        "ds.m_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem8",
            "name": "m_mem8",
            "offset": "0x208",
            "doc": "memory that stores M"
        },
        "ds.m_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem9",
            "name": "m_mem9",
            "offset": "0x209",
            "doc": "memory that stores M"
        },
        "ds.m_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem10",
            "name": "m_mem10",
            "offset": "0x20a",
            "doc": "memory that stores M"
        },
        "ds.m_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem11",
            "name": "m_mem11",
            "offset": "0x20b",
            "doc": "memory that stores M"
        },
        "ds.m_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem12",
            "name": "m_mem12",
            "offset": "0x20c",
            "doc": "memory that stores M"
        },
        "ds.m_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem13",
            "name": "m_mem13",
            "offset": "0x20d",
            "doc": "memory that stores M"
        },
        "ds.m_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem14",
            "name": "m_mem14",
            "offset": "0x20e",
            "doc": "memory that stores M"
        },
        "ds.m_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem15",
            "name": "m_mem15",
            "offset": "0x20f",
            "doc": "memory that stores M"
        },
        "ds.m_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem16",
            "name": "m_mem16",
            "offset": "0x210",
            "doc": "memory that stores M"
        },
        "ds.m_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem17",
            "name": "m_mem17",
            "offset": "0x211",
            "doc": "memory that stores M"
        },
        "ds.m_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem18",
            "name": "m_mem18",
            "offset": "0x212",
            "doc": "memory that stores M"
        },
        "ds.m_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem19",
            "name": "m_mem19",
            "offset": "0x213",
            "doc": "memory that stores M"
        },
        "ds.m_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem20",
            "name": "m_mem20",
            "offset": "0x214",
            "doc": "memory that stores M"
        },
        "ds.m_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem21",
            "name": "m_mem21",
            "offset": "0x215",
            "doc": "memory that stores M"
        },
        "ds.m_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem22",
            "name": "m_mem22",
            "offset": "0x216",
            "doc": "memory that stores M"
        },
        "ds.m_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem23",
            "name": "m_mem23",
            "offset": "0x217",
            "doc": "memory that stores M"
        },
        "ds.m_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem24",
            "name": "m_mem24",
            "offset": "0x218",
            "doc": "memory that stores M"
        },
        "ds.m_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem25",
            "name": "m_mem25",
            "offset": "0x219",
            "doc": "memory that stores M"
        },
        "ds.m_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem26",
            "name": "m_mem26",
            "offset": "0x21a",
            "doc": "memory that stores M"
        },
        "ds.m_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem27",
            "name": "m_mem27",
            "offset": "0x21b",
            "doc": "memory that stores M"
        },
        "ds.m_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem28",
            "name": "m_mem28",
            "offset": "0x21c",
            "doc": "memory that stores M"
        },
        "ds.m_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem29",
            "name": "m_mem29",
            "offset": "0x21d",
            "doc": "memory that stores M"
        },
        "ds.m_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem30",
            "name": "m_mem30",
            "offset": "0x21e",
            "doc": "memory that stores M"
        },
        "ds.m_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem31",
            "name": "m_mem31",
            "offset": "0x21f",
            "doc": "memory that stores M"
        },
        "ds.m_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem32",
            "name": "m_mem32",
            "offset": "0x220",
            "doc": "memory that stores M"
        },
        "ds.m_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem33",
            "name": "m_mem33",
            "offset": "0x221",
            "doc": "memory that stores M"
        },
        "ds.m_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem34",
            "name": "m_mem34",
            "offset": "0x222",
            "doc": "memory that stores M"
        },
        "ds.m_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem35",
            "name": "m_mem35",
            "offset": "0x223",
            "doc": "memory that stores M"
        },
        "ds.m_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem36",
            "name": "m_mem36",
            "offset": "0x224",
            "doc": "memory that stores M"
        },
        "ds.m_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem37",
            "name": "m_mem37",
            "offset": "0x225",
            "doc": "memory that stores M"
        },
        "ds.m_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem38",
            "name": "m_mem38",
            "offset": "0x226",
            "doc": "memory that stores M"
        },
        "ds.m_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem39",
            "name": "m_mem39",
            "offset": "0x227",
            "doc": "memory that stores M"
        },
        "ds.m_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem40",
            "name": "m_mem40",
            "offset": "0x228",
            "doc": "memory that stores M"
        },
        "ds.m_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem41",
            "name": "m_mem41",
            "offset": "0x229",
            "doc": "memory that stores M"
        },
        "ds.m_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem42",
            "name": "m_mem42",
            "offset": "0x22a",
            "doc": "memory that stores M"
        },
        "ds.m_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem43",
            "name": "m_mem43",
            "offset": "0x22b",
            "doc": "memory that stores M"
        },
        "ds.m_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem44",
            "name": "m_mem44",
            "offset": "0x22c",
            "doc": "memory that stores M"
        },
        "ds.m_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem45",
            "name": "m_mem45",
            "offset": "0x22d",
            "doc": "memory that stores M"
        },
        "ds.m_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem46",
            "name": "m_mem46",
            "offset": "0x22e",
            "doc": "memory that stores M"
        },
        "ds.m_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem47",
            "name": "m_mem47",
            "offset": "0x22f",
            "doc": "memory that stores M"
        },
        "ds.m_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem48",
            "name": "m_mem48",
            "offset": "0x230",
            "doc": "memory that stores M"
        },
        "ds.m_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem49",
            "name": "m_mem49",
            "offset": "0x231",
            "doc": "memory that stores M"
        },
        "ds.m_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem50",
            "name": "m_mem50",
            "offset": "0x232",
            "doc": "memory that stores M"
        },
        "ds.m_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem51",
            "name": "m_mem51",
            "offset": "0x233",
            "doc": "memory that stores M"
        },
        "ds.m_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem52",
            "name": "m_mem52",
            "offset": "0x234",
            "doc": "memory that stores M"
        },
        "ds.m_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem53",
            "name": "m_mem53",
            "offset": "0x235",
            "doc": "memory that stores M"
        },
        "ds.m_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem54",
            "name": "m_mem54",
            "offset": "0x236",
            "doc": "memory that stores M"
        },
        "ds.m_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem55",
            "name": "m_mem55",
            "offset": "0x237",
            "doc": "memory that stores M"
        },
        "ds.m_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem56",
            "name": "m_mem56",
            "offset": "0x238",
            "doc": "memory that stores M"
        },
        "ds.m_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem57",
            "name": "m_mem57",
            "offset": "0x239",
            "doc": "memory that stores M"
        },
        "ds.m_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem58",
            "name": "m_mem58",
            "offset": "0x23a",
            "doc": "memory that stores M"
        },
        "ds.m_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem59",
            "name": "m_mem59",
            "offset": "0x23b",
            "doc": "memory that stores M"
        },
        "ds.m_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem60",
            "name": "m_mem60",
            "offset": "0x23c",
            "doc": "memory that stores M"
        },
        "ds.m_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem61",
            "name": "m_mem61",
            "offset": "0x23d",
            "doc": "memory that stores M"
        },
        "ds.m_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem62",
            "name": "m_mem62",
            "offset": "0x23e",
            "doc": "memory that stores M"
        },
        "ds.m_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem63",
            "name": "m_mem63",
            "offset": "0x23f",
            "doc": "memory that stores M"
        },
        "ds.m_mem64": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem64",
            "name": "m_mem64",
            "offset": "0x240",
            "doc": "memory that stores M"
        },
        "ds.m_mem65": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem65",
            "name": "m_mem65",
            "offset": "0x241",
            "doc": "memory that stores M"
        },
        "ds.m_mem66": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem66",
            "name": "m_mem66",
            "offset": "0x242",
            "doc": "memory that stores M"
        },
        "ds.m_mem67": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem67",
            "name": "m_mem67",
            "offset": "0x243",
            "doc": "memory that stores M"
        },
        "ds.m_mem68": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem68",
            "name": "m_mem68",
            "offset": "0x244",
            "doc": "memory that stores M"
        },
        "ds.m_mem69": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem69",
            "name": "m_mem69",
            "offset": "0x245",
            "doc": "memory that stores M"
        },
        "ds.m_mem70": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem70",
            "name": "m_mem70",
            "offset": "0x246",
            "doc": "memory that stores M"
        },
        "ds.m_mem71": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem71",
            "name": "m_mem71",
            "offset": "0x247",
            "doc": "memory that stores M"
        },
        "ds.m_mem72": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem72",
            "name": "m_mem72",
            "offset": "0x248",
            "doc": "memory that stores M"
        },
        "ds.m_mem73": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem73",
            "name": "m_mem73",
            "offset": "0x249",
            "doc": "memory that stores M"
        },
        "ds.m_mem74": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem74",
            "name": "m_mem74",
            "offset": "0x24a",
            "doc": "memory that stores M"
        },
        "ds.m_mem75": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem75",
            "name": "m_mem75",
            "offset": "0x24b",
            "doc": "memory that stores M"
        },
        "ds.m_mem76": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem76",
            "name": "m_mem76",
            "offset": "0x24c",
            "doc": "memory that stores M"
        },
        "ds.m_mem77": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem77",
            "name": "m_mem77",
            "offset": "0x24d",
            "doc": "memory that stores M"
        },
        "ds.m_mem78": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem78",
            "name": "m_mem78",
            "offset": "0x24e",
            "doc": "memory that stores M"
        },
        "ds.m_mem79": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem79",
            "name": "m_mem79",
            "offset": "0x24f",
            "doc": "memory that stores M"
        },
        "ds.m_mem80": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem80",
            "name": "m_mem80",
            "offset": "0x250",
            "doc": "memory that stores M"
        },
        "ds.m_mem81": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem81",
            "name": "m_mem81",
            "offset": "0x251",
            "doc": "memory that stores M"
        },
        "ds.m_mem82": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem82",
            "name": "m_mem82",
            "offset": "0x252",
            "doc": "memory that stores M"
        },
        "ds.m_mem83": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem83",
            "name": "m_mem83",
            "offset": "0x253",
            "doc": "memory that stores M"
        },
        "ds.m_mem84": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem84",
            "name": "m_mem84",
            "offset": "0x254",
            "doc": "memory that stores M"
        },
        "ds.m_mem85": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem85",
            "name": "m_mem85",
            "offset": "0x255",
            "doc": "memory that stores M"
        },
        "ds.m_mem86": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem86",
            "name": "m_mem86",
            "offset": "0x256",
            "doc": "memory that stores M"
        },
        "ds.m_mem87": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem87",
            "name": "m_mem87",
            "offset": "0x257",
            "doc": "memory that stores M"
        },
        "ds.m_mem88": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem88",
            "name": "m_mem88",
            "offset": "0x258",
            "doc": "memory that stores M"
        },
        "ds.m_mem89": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem89",
            "name": "m_mem89",
            "offset": "0x259",
            "doc": "memory that stores M"
        },
        "ds.m_mem90": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem90",
            "name": "m_mem90",
            "offset": "0x25a",
            "doc": "memory that stores M"
        },
        "ds.m_mem91": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem91",
            "name": "m_mem91",
            "offset": "0x25b",
            "doc": "memory that stores M"
        },
        "ds.m_mem92": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem92",
            "name": "m_mem92",
            "offset": "0x25c",
            "doc": "memory that stores M"
        },
        "ds.m_mem93": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem93",
            "name": "m_mem93",
            "offset": "0x25d",
            "doc": "memory that stores M"
        },
        "ds.m_mem94": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem94",
            "name": "m_mem94",
            "offset": "0x25e",
            "doc": "memory that stores M"
        },
        "ds.m_mem95": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem95",
            "name": "m_mem95",
            "offset": "0x25f",
            "doc": "memory that stores M"
        },
        "ds.m_mem96": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem96",
            "name": "m_mem96",
            "offset": "0x260",
            "doc": "memory that stores M"
        },
        "ds.m_mem97": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem97",
            "name": "m_mem97",
            "offset": "0x261",
            "doc": "memory that stores M"
        },
        "ds.m_mem98": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem98",
            "name": "m_mem98",
            "offset": "0x262",
            "doc": "memory that stores M"
        },
        "ds.m_mem99": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem99",
            "name": "m_mem99",
            "offset": "0x263",
            "doc": "memory that stores M"
        },
        "ds.m_mem100": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem100",
            "name": "m_mem100",
            "offset": "0x264",
            "doc": "memory that stores M"
        },
        "ds.m_mem101": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem101",
            "name": "m_mem101",
            "offset": "0x265",
            "doc": "memory that stores M"
        },
        "ds.m_mem102": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem102",
            "name": "m_mem102",
            "offset": "0x266",
            "doc": "memory that stores M"
        },
        "ds.m_mem103": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem103",
            "name": "m_mem103",
            "offset": "0x267",
            "doc": "memory that stores M"
        },
        "ds.m_mem104": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem104",
            "name": "m_mem104",
            "offset": "0x268",
            "doc": "memory that stores M"
        },
        "ds.m_mem105": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem105",
            "name": "m_mem105",
            "offset": "0x269",
            "doc": "memory that stores M"
        },
        "ds.m_mem106": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem106",
            "name": "m_mem106",
            "offset": "0x26a",
            "doc": "memory that stores M"
        },
        "ds.m_mem107": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem107",
            "name": "m_mem107",
            "offset": "0x26b",
            "doc": "memory that stores M"
        },
        "ds.m_mem108": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem108",
            "name": "m_mem108",
            "offset": "0x26c",
            "doc": "memory that stores M"
        },
        "ds.m_mem109": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem109",
            "name": "m_mem109",
            "offset": "0x26d",
            "doc": "memory that stores M"
        },
        "ds.m_mem110": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem110",
            "name": "m_mem110",
            "offset": "0x26e",
            "doc": "memory that stores M"
        },
        "ds.m_mem111": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem111",
            "name": "m_mem111",
            "offset": "0x26f",
            "doc": "memory that stores M"
        },
        "ds.m_mem112": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem112",
            "name": "m_mem112",
            "offset": "0x270",
            "doc": "memory that stores M"
        },
        "ds.m_mem113": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem113",
            "name": "m_mem113",
            "offset": "0x271",
            "doc": "memory that stores M"
        },
        "ds.m_mem114": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem114",
            "name": "m_mem114",
            "offset": "0x272",
            "doc": "memory that stores M"
        },
        "ds.m_mem115": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem115",
            "name": "m_mem115",
            "offset": "0x273",
            "doc": "memory that stores M"
        },
        "ds.m_mem116": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem116",
            "name": "m_mem116",
            "offset": "0x274",
            "doc": "memory that stores M"
        },
        "ds.m_mem117": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem117",
            "name": "m_mem117",
            "offset": "0x275",
            "doc": "memory that stores M"
        },
        "ds.m_mem118": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem118",
            "name": "m_mem118",
            "offset": "0x276",
            "doc": "memory that stores M"
        },
        "ds.m_mem119": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem119",
            "name": "m_mem119",
            "offset": "0x277",
            "doc": "memory that stores M"
        },
        "ds.m_mem120": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem120",
            "name": "m_mem120",
            "offset": "0x278",
            "doc": "memory that stores M"
        },
        "ds.m_mem121": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem121",
            "name": "m_mem121",
            "offset": "0x279",
            "doc": "memory that stores M"
        },
        "ds.m_mem122": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem122",
            "name": "m_mem122",
            "offset": "0x27a",
            "doc": "memory that stores M"
        },
        "ds.m_mem123": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem123",
            "name": "m_mem123",
            "offset": "0x27b",
            "doc": "memory that stores M"
        },
        "ds.m_mem124": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem124",
            "name": "m_mem124",
            "offset": "0x27c",
            "doc": "memory that stores M"
        },
        "ds.m_mem125": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem125",
            "name": "m_mem125",
            "offset": "0x27d",
            "doc": "memory that stores M"
        },
        "ds.m_mem126": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem126",
            "name": "m_mem126",
            "offset": "0x27e",
            "doc": "memory that stores M"
        },
        "ds.m_mem127": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem127",
            "name": "m_mem127",
            "offset": "0x27f",
            "doc": "memory that stores M"
        },
        "ds.m_mem128": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem128",
            "name": "m_mem128",
            "offset": "0x280",
            "doc": "memory that stores M"
        },
        "ds.m_mem129": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem129",
            "name": "m_mem129",
            "offset": "0x281",
            "doc": "memory that stores M"
        },
        "ds.m_mem130": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem130",
            "name": "m_mem130",
            "offset": "0x282",
            "doc": "memory that stores M"
        },
        "ds.m_mem131": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem131",
            "name": "m_mem131",
            "offset": "0x283",
            "doc": "memory that stores M"
        },
        "ds.m_mem132": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem132",
            "name": "m_mem132",
            "offset": "0x284",
            "doc": "memory that stores M"
        },
        "ds.m_mem133": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem133",
            "name": "m_mem133",
            "offset": "0x285",
            "doc": "memory that stores M"
        },
        "ds.m_mem134": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem134",
            "name": "m_mem134",
            "offset": "0x286",
            "doc": "memory that stores M"
        },
        "ds.m_mem135": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem135",
            "name": "m_mem135",
            "offset": "0x287",
            "doc": "memory that stores M"
        },
        "ds.m_mem136": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem136",
            "name": "m_mem136",
            "offset": "0x288",
            "doc": "memory that stores M"
        },
        "ds.m_mem137": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem137",
            "name": "m_mem137",
            "offset": "0x289",
            "doc": "memory that stores M"
        },
        "ds.m_mem138": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem138",
            "name": "m_mem138",
            "offset": "0x28a",
            "doc": "memory that stores M"
        },
        "ds.m_mem139": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem139",
            "name": "m_mem139",
            "offset": "0x28b",
            "doc": "memory that stores M"
        },
        "ds.m_mem140": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem140",
            "name": "m_mem140",
            "offset": "0x28c",
            "doc": "memory that stores M"
        },
        "ds.m_mem141": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem141",
            "name": "m_mem141",
            "offset": "0x28d",
            "doc": "memory that stores M"
        },
        "ds.m_mem142": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem142",
            "name": "m_mem142",
            "offset": "0x28e",
            "doc": "memory that stores M"
        },
        "ds.m_mem143": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem143",
            "name": "m_mem143",
            "offset": "0x28f",
            "doc": "memory that stores M"
        },
        "ds.m_mem144": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem144",
            "name": "m_mem144",
            "offset": "0x290",
            "doc": "memory that stores M"
        },
        "ds.m_mem145": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem145",
            "name": "m_mem145",
            "offset": "0x291",
            "doc": "memory that stores M"
        },
        "ds.m_mem146": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem146",
            "name": "m_mem146",
            "offset": "0x292",
            "doc": "memory that stores M"
        },
        "ds.m_mem147": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem147",
            "name": "m_mem147",
            "offset": "0x293",
            "doc": "memory that stores M"
        },
        "ds.m_mem148": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem148",
            "name": "m_mem148",
            "offset": "0x294",
            "doc": "memory that stores M"
        },
        "ds.m_mem149": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem149",
            "name": "m_mem149",
            "offset": "0x295",
            "doc": "memory that stores M"
        },
        "ds.m_mem150": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem150",
            "name": "m_mem150",
            "offset": "0x296",
            "doc": "memory that stores M"
        },
        "ds.m_mem151": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem151",
            "name": "m_mem151",
            "offset": "0x297",
            "doc": "memory that stores M"
        },
        "ds.m_mem152": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem152",
            "name": "m_mem152",
            "offset": "0x298",
            "doc": "memory that stores M"
        },
        "ds.m_mem153": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem153",
            "name": "m_mem153",
            "offset": "0x299",
            "doc": "memory that stores M"
        },
        "ds.m_mem154": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem154",
            "name": "m_mem154",
            "offset": "0x29a",
            "doc": "memory that stores M"
        },
        "ds.m_mem155": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem155",
            "name": "m_mem155",
            "offset": "0x29b",
            "doc": "memory that stores M"
        },
        "ds.m_mem156": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem156",
            "name": "m_mem156",
            "offset": "0x29c",
            "doc": "memory that stores M"
        },
        "ds.m_mem157": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem157",
            "name": "m_mem157",
            "offset": "0x29d",
            "doc": "memory that stores M"
        },
        "ds.m_mem158": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem158",
            "name": "m_mem158",
            "offset": "0x29e",
            "doc": "memory that stores M"
        },
        "ds.m_mem159": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem159",
            "name": "m_mem159",
            "offset": "0x29f",
            "doc": "memory that stores M"
        },
        "ds.m_mem160": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem160",
            "name": "m_mem160",
            "offset": "0x2a0",
            "doc": "memory that stores M"
        },
        "ds.m_mem161": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem161",
            "name": "m_mem161",
            "offset": "0x2a1",
            "doc": "memory that stores M"
        },
        "ds.m_mem162": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem162",
            "name": "m_mem162",
            "offset": "0x2a2",
            "doc": "memory that stores M"
        },
        "ds.m_mem163": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem163",
            "name": "m_mem163",
            "offset": "0x2a3",
            "doc": "memory that stores M"
        },
        "ds.m_mem164": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem164",
            "name": "m_mem164",
            "offset": "0x2a4",
            "doc": "memory that stores M"
        },
        "ds.m_mem165": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem165",
            "name": "m_mem165",
            "offset": "0x2a5",
            "doc": "memory that stores M"
        },
        "ds.m_mem166": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem166",
            "name": "m_mem166",
            "offset": "0x2a6",
            "doc": "memory that stores M"
        },
        "ds.m_mem167": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem167",
            "name": "m_mem167",
            "offset": "0x2a7",
            "doc": "memory that stores M"
        },
        "ds.m_mem168": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem168",
            "name": "m_mem168",
            "offset": "0x2a8",
            "doc": "memory that stores M"
        },
        "ds.m_mem169": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem169",
            "name": "m_mem169",
            "offset": "0x2a9",
            "doc": "memory that stores M"
        },
        "ds.m_mem170": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem170",
            "name": "m_mem170",
            "offset": "0x2aa",
            "doc": "memory that stores M"
        },
        "ds.m_mem171": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem171",
            "name": "m_mem171",
            "offset": "0x2ab",
            "doc": "memory that stores M"
        },
        "ds.m_mem172": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem172",
            "name": "m_mem172",
            "offset": "0x2ac",
            "doc": "memory that stores M"
        },
        "ds.m_mem173": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem173",
            "name": "m_mem173",
            "offset": "0x2ad",
            "doc": "memory that stores M"
        },
        "ds.m_mem174": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem174",
            "name": "m_mem174",
            "offset": "0x2ae",
            "doc": "memory that stores M"
        },
        "ds.m_mem175": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem175",
            "name": "m_mem175",
            "offset": "0x2af",
            "doc": "memory that stores M"
        },
        "ds.m_mem176": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem176",
            "name": "m_mem176",
            "offset": "0x2b0",
            "doc": "memory that stores M"
        },
        "ds.m_mem177": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem177",
            "name": "m_mem177",
            "offset": "0x2b1",
            "doc": "memory that stores M"
        },
        "ds.m_mem178": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem178",
            "name": "m_mem178",
            "offset": "0x2b2",
            "doc": "memory that stores M"
        },
        "ds.m_mem179": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem179",
            "name": "m_mem179",
            "offset": "0x2b3",
            "doc": "memory that stores M"
        },
        "ds.m_mem180": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem180",
            "name": "m_mem180",
            "offset": "0x2b4",
            "doc": "memory that stores M"
        },
        "ds.m_mem181": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem181",
            "name": "m_mem181",
            "offset": "0x2b5",
            "doc": "memory that stores M"
        },
        "ds.m_mem182": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem182",
            "name": "m_mem182",
            "offset": "0x2b6",
            "doc": "memory that stores M"
        },
        "ds.m_mem183": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem183",
            "name": "m_mem183",
            "offset": "0x2b7",
            "doc": "memory that stores M"
        },
        "ds.m_mem184": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem184",
            "name": "m_mem184",
            "offset": "0x2b8",
            "doc": "memory that stores M"
        },
        "ds.m_mem185": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem185",
            "name": "m_mem185",
            "offset": "0x2b9",
            "doc": "memory that stores M"
        },
        "ds.m_mem186": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem186",
            "name": "m_mem186",
            "offset": "0x2ba",
            "doc": "memory that stores M"
        },
        "ds.m_mem187": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem187",
            "name": "m_mem187",
            "offset": "0x2bb",
            "doc": "memory that stores M"
        },
        "ds.m_mem188": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem188",
            "name": "m_mem188",
            "offset": "0x2bc",
            "doc": "memory that stores M"
        },
        "ds.m_mem189": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem189",
            "name": "m_mem189",
            "offset": "0x2bd",
            "doc": "memory that stores M"
        },
        "ds.m_mem190": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem190",
            "name": "m_mem190",
            "offset": "0x2be",
            "doc": "memory that stores M"
        },
        "ds.m_mem191": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem191",
            "name": "m_mem191",
            "offset": "0x2bf",
            "doc": "memory that stores M"
        },
        "ds.m_mem192": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem192",
            "name": "m_mem192",
            "offset": "0x2c0",
            "doc": "memory that stores M"
        },
        "ds.m_mem193": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem193",
            "name": "m_mem193",
            "offset": "0x2c1",
            "doc": "memory that stores M"
        },
        "ds.m_mem194": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem194",
            "name": "m_mem194",
            "offset": "0x2c2",
            "doc": "memory that stores M"
        },
        "ds.m_mem195": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem195",
            "name": "m_mem195",
            "offset": "0x2c3",
            "doc": "memory that stores M"
        },
        "ds.m_mem196": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem196",
            "name": "m_mem196",
            "offset": "0x2c4",
            "doc": "memory that stores M"
        },
        "ds.m_mem197": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem197",
            "name": "m_mem197",
            "offset": "0x2c5",
            "doc": "memory that stores M"
        },
        "ds.m_mem198": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem198",
            "name": "m_mem198",
            "offset": "0x2c6",
            "doc": "memory that stores M"
        },
        "ds.m_mem199": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem199",
            "name": "m_mem199",
            "offset": "0x2c7",
            "doc": "memory that stores M"
        },
        "ds.m_mem200": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem200",
            "name": "m_mem200",
            "offset": "0x2c8",
            "doc": "memory that stores M"
        },
        "ds.m_mem201": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem201",
            "name": "m_mem201",
            "offset": "0x2c9",
            "doc": "memory that stores M"
        },
        "ds.m_mem202": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem202",
            "name": "m_mem202",
            "offset": "0x2ca",
            "doc": "memory that stores M"
        },
        "ds.m_mem203": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem203",
            "name": "m_mem203",
            "offset": "0x2cb",
            "doc": "memory that stores M"
        },
        "ds.m_mem204": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem204",
            "name": "m_mem204",
            "offset": "0x2cc",
            "doc": "memory that stores M"
        },
        "ds.m_mem205": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem205",
            "name": "m_mem205",
            "offset": "0x2cd",
            "doc": "memory that stores M"
        },
        "ds.m_mem206": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem206",
            "name": "m_mem206",
            "offset": "0x2ce",
            "doc": "memory that stores M"
        },
        "ds.m_mem207": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem207",
            "name": "m_mem207",
            "offset": "0x2cf",
            "doc": "memory that stores M"
        },
        "ds.m_mem208": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem208",
            "name": "m_mem208",
            "offset": "0x2d0",
            "doc": "memory that stores M"
        },
        "ds.m_mem209": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem209",
            "name": "m_mem209",
            "offset": "0x2d1",
            "doc": "memory that stores M"
        },
        "ds.m_mem210": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem210",
            "name": "m_mem210",
            "offset": "0x2d2",
            "doc": "memory that stores M"
        },
        "ds.m_mem211": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem211",
            "name": "m_mem211",
            "offset": "0x2d3",
            "doc": "memory that stores M"
        },
        "ds.m_mem212": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem212",
            "name": "m_mem212",
            "offset": "0x2d4",
            "doc": "memory that stores M"
        },
        "ds.m_mem213": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem213",
            "name": "m_mem213",
            "offset": "0x2d5",
            "doc": "memory that stores M"
        },
        "ds.m_mem214": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem214",
            "name": "m_mem214",
            "offset": "0x2d6",
            "doc": "memory that stores M"
        },
        "ds.m_mem215": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem215",
            "name": "m_mem215",
            "offset": "0x2d7",
            "doc": "memory that stores M"
        },
        "ds.m_mem216": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem216",
            "name": "m_mem216",
            "offset": "0x2d8",
            "doc": "memory that stores M"
        },
        "ds.m_mem217": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem217",
            "name": "m_mem217",
            "offset": "0x2d9",
            "doc": "memory that stores M"
        },
        "ds.m_mem218": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem218",
            "name": "m_mem218",
            "offset": "0x2da",
            "doc": "memory that stores M"
        },
        "ds.m_mem219": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem219",
            "name": "m_mem219",
            "offset": "0x2db",
            "doc": "memory that stores M"
        },
        "ds.m_mem220": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem220",
            "name": "m_mem220",
            "offset": "0x2dc",
            "doc": "memory that stores M"
        },
        "ds.m_mem221": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem221",
            "name": "m_mem221",
            "offset": "0x2dd",
            "doc": "memory that stores M"
        },
        "ds.m_mem222": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem222",
            "name": "m_mem222",
            "offset": "0x2de",
            "doc": "memory that stores M"
        },
        "ds.m_mem223": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem223",
            "name": "m_mem223",
            "offset": "0x2df",
            "doc": "memory that stores M"
        },
        "ds.m_mem224": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem224",
            "name": "m_mem224",
            "offset": "0x2e0",
            "doc": "memory that stores M"
        },
        "ds.m_mem225": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem225",
            "name": "m_mem225",
            "offset": "0x2e1",
            "doc": "memory that stores M"
        },
        "ds.m_mem226": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem226",
            "name": "m_mem226",
            "offset": "0x2e2",
            "doc": "memory that stores M"
        },
        "ds.m_mem227": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem227",
            "name": "m_mem227",
            "offset": "0x2e3",
            "doc": "memory that stores M"
        },
        "ds.m_mem228": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem228",
            "name": "m_mem228",
            "offset": "0x2e4",
            "doc": "memory that stores M"
        },
        "ds.m_mem229": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem229",
            "name": "m_mem229",
            "offset": "0x2e5",
            "doc": "memory that stores M"
        },
        "ds.m_mem230": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem230",
            "name": "m_mem230",
            "offset": "0x2e6",
            "doc": "memory that stores M"
        },
        "ds.m_mem231": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem231",
            "name": "m_mem231",
            "offset": "0x2e7",
            "doc": "memory that stores M"
        },
        "ds.m_mem232": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem232",
            "name": "m_mem232",
            "offset": "0x2e8",
            "doc": "memory that stores M"
        },
        "ds.m_mem233": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem233",
            "name": "m_mem233",
            "offset": "0x2e9",
            "doc": "memory that stores M"
        },
        "ds.m_mem234": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem234",
            "name": "m_mem234",
            "offset": "0x2ea",
            "doc": "memory that stores M"
        },
        "ds.m_mem235": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem235",
            "name": "m_mem235",
            "offset": "0x2eb",
            "doc": "memory that stores M"
        },
        "ds.m_mem236": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem236",
            "name": "m_mem236",
            "offset": "0x2ec",
            "doc": "memory that stores M"
        },
        "ds.m_mem237": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem237",
            "name": "m_mem237",
            "offset": "0x2ed",
            "doc": "memory that stores M"
        },
        "ds.m_mem238": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem238",
            "name": "m_mem238",
            "offset": "0x2ee",
            "doc": "memory that stores M"
        },
        "ds.m_mem239": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem239",
            "name": "m_mem239",
            "offset": "0x2ef",
            "doc": "memory that stores M"
        },
        "ds.m_mem240": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem240",
            "name": "m_mem240",
            "offset": "0x2f0",
            "doc": "memory that stores M"
        },
        "ds.m_mem241": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem241",
            "name": "m_mem241",
            "offset": "0x2f1",
            "doc": "memory that stores M"
        },
        "ds.m_mem242": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem242",
            "name": "m_mem242",
            "offset": "0x2f2",
            "doc": "memory that stores M"
        },
        "ds.m_mem243": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem243",
            "name": "m_mem243",
            "offset": "0x2f3",
            "doc": "memory that stores M"
        },
        "ds.m_mem244": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem244",
            "name": "m_mem244",
            "offset": "0x2f4",
            "doc": "memory that stores M"
        },
        "ds.m_mem245": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem245",
            "name": "m_mem245",
            "offset": "0x2f5",
            "doc": "memory that stores M"
        },
        "ds.m_mem246": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem246",
            "name": "m_mem246",
            "offset": "0x2f6",
            "doc": "memory that stores M"
        },
        "ds.m_mem247": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem247",
            "name": "m_mem247",
            "offset": "0x2f7",
            "doc": "memory that stores M"
        },
        "ds.m_mem248": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem248",
            "name": "m_mem248",
            "offset": "0x2f8",
            "doc": "memory that stores M"
        },
        "ds.m_mem249": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem249",
            "name": "m_mem249",
            "offset": "0x2f9",
            "doc": "memory that stores M"
        },
        "ds.m_mem250": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem250",
            "name": "m_mem250",
            "offset": "0x2fa",
            "doc": "memory that stores M"
        },
        "ds.m_mem251": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem251",
            "name": "m_mem251",
            "offset": "0x2fb",
            "doc": "memory that stores M"
        },
        "ds.m_mem252": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem252",
            "name": "m_mem252",
            "offset": "0x2fc",
            "doc": "memory that stores M"
        },
        "ds.m_mem253": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem253",
            "name": "m_mem253",
            "offset": "0x2fd",
            "doc": "memory that stores M"
        },
        "ds.m_mem254": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem254",
            "name": "m_mem254",
            "offset": "0x2fe",
            "doc": "memory that stores M"
        },
        "ds.m_mem255": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem255",
            "name": "m_mem255",
            "offset": "0x2ff",
            "doc": "memory that stores M"
        },
        "ds.m_mem256": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem256",
            "name": "m_mem256",
            "offset": "0x300",
            "doc": "memory that stores M"
        },
        "ds.m_mem257": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem257",
            "name": "m_mem257",
            "offset": "0x301",
            "doc": "memory that stores M"
        },
        "ds.m_mem258": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem258",
            "name": "m_mem258",
            "offset": "0x302",
            "doc": "memory that stores M"
        },
        "ds.m_mem259": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem259",
            "name": "m_mem259",
            "offset": "0x303",
            "doc": "memory that stores M"
        },
        "ds.m_mem260": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem260",
            "name": "m_mem260",
            "offset": "0x304",
            "doc": "memory that stores M"
        },
        "ds.m_mem261": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem261",
            "name": "m_mem261",
            "offset": "0x305",
            "doc": "memory that stores M"
        },
        "ds.m_mem262": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem262",
            "name": "m_mem262",
            "offset": "0x306",
            "doc": "memory that stores M"
        },
        "ds.m_mem263": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem263",
            "name": "m_mem263",
            "offset": "0x307",
            "doc": "memory that stores M"
        },
        "ds.m_mem264": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem264",
            "name": "m_mem264",
            "offset": "0x308",
            "doc": "memory that stores M"
        },
        "ds.m_mem265": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem265",
            "name": "m_mem265",
            "offset": "0x309",
            "doc": "memory that stores M"
        },
        "ds.m_mem266": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem266",
            "name": "m_mem266",
            "offset": "0x30a",
            "doc": "memory that stores M"
        },
        "ds.m_mem267": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem267",
            "name": "m_mem267",
            "offset": "0x30b",
            "doc": "memory that stores M"
        },
        "ds.m_mem268": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem268",
            "name": "m_mem268",
            "offset": "0x30c",
            "doc": "memory that stores M"
        },
        "ds.m_mem269": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem269",
            "name": "m_mem269",
            "offset": "0x30d",
            "doc": "memory that stores M"
        },
        "ds.m_mem270": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem270",
            "name": "m_mem270",
            "offset": "0x30e",
            "doc": "memory that stores M"
        },
        "ds.m_mem271": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem271",
            "name": "m_mem271",
            "offset": "0x30f",
            "doc": "memory that stores M"
        },
        "ds.m_mem272": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem272",
            "name": "m_mem272",
            "offset": "0x310",
            "doc": "memory that stores M"
        },
        "ds.m_mem273": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem273",
            "name": "m_mem273",
            "offset": "0x311",
            "doc": "memory that stores M"
        },
        "ds.m_mem274": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem274",
            "name": "m_mem274",
            "offset": "0x312",
            "doc": "memory that stores M"
        },
        "ds.m_mem275": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem275",
            "name": "m_mem275",
            "offset": "0x313",
            "doc": "memory that stores M"
        },
        "ds.m_mem276": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem276",
            "name": "m_mem276",
            "offset": "0x314",
            "doc": "memory that stores M"
        },
        "ds.m_mem277": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem277",
            "name": "m_mem277",
            "offset": "0x315",
            "doc": "memory that stores M"
        },
        "ds.m_mem278": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem278",
            "name": "m_mem278",
            "offset": "0x316",
            "doc": "memory that stores M"
        },
        "ds.m_mem279": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem279",
            "name": "m_mem279",
            "offset": "0x317",
            "doc": "memory that stores M"
        },
        "ds.m_mem280": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem280",
            "name": "m_mem280",
            "offset": "0x318",
            "doc": "memory that stores M"
        },
        "ds.m_mem281": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem281",
            "name": "m_mem281",
            "offset": "0x319",
            "doc": "memory that stores M"
        },
        "ds.m_mem282": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem282",
            "name": "m_mem282",
            "offset": "0x31a",
            "doc": "memory that stores M"
        },
        "ds.m_mem283": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem283",
            "name": "m_mem283",
            "offset": "0x31b",
            "doc": "memory that stores M"
        },
        "ds.m_mem284": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem284",
            "name": "m_mem284",
            "offset": "0x31c",
            "doc": "memory that stores M"
        },
        "ds.m_mem285": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem285",
            "name": "m_mem285",
            "offset": "0x31d",
            "doc": "memory that stores M"
        },
        "ds.m_mem286": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem286",
            "name": "m_mem286",
            "offset": "0x31e",
            "doc": "memory that stores M"
        },
        "ds.m_mem287": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem287",
            "name": "m_mem287",
            "offset": "0x31f",
            "doc": "memory that stores M"
        },
        "ds.m_mem288": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem288",
            "name": "m_mem288",
            "offset": "0x320",
            "doc": "memory that stores M"
        },
        "ds.m_mem289": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem289",
            "name": "m_mem289",
            "offset": "0x321",
            "doc": "memory that stores M"
        },
        "ds.m_mem290": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem290",
            "name": "m_mem290",
            "offset": "0x322",
            "doc": "memory that stores M"
        },
        "ds.m_mem291": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem291",
            "name": "m_mem291",
            "offset": "0x323",
            "doc": "memory that stores M"
        },
        "ds.m_mem292": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem292",
            "name": "m_mem292",
            "offset": "0x324",
            "doc": "memory that stores M"
        },
        "ds.m_mem293": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem293",
            "name": "m_mem293",
            "offset": "0x325",
            "doc": "memory that stores M"
        },
        "ds.m_mem294": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem294",
            "name": "m_mem294",
            "offset": "0x326",
            "doc": "memory that stores M"
        },
        "ds.m_mem295": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem295",
            "name": "m_mem295",
            "offset": "0x327",
            "doc": "memory that stores M"
        },
        "ds.m_mem296": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem296",
            "name": "m_mem296",
            "offset": "0x328",
            "doc": "memory that stores M"
        },
        "ds.m_mem297": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem297",
            "name": "m_mem297",
            "offset": "0x329",
            "doc": "memory that stores M"
        },
        "ds.m_mem298": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem298",
            "name": "m_mem298",
            "offset": "0x32a",
            "doc": "memory that stores M"
        },
        "ds.m_mem299": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem299",
            "name": "m_mem299",
            "offset": "0x32b",
            "doc": "memory that stores M"
        },
        "ds.m_mem300": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem300",
            "name": "m_mem300",
            "offset": "0x32c",
            "doc": "memory that stores M"
        },
        "ds.m_mem301": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem301",
            "name": "m_mem301",
            "offset": "0x32d",
            "doc": "memory that stores M"
        },
        "ds.m_mem302": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem302",
            "name": "m_mem302",
            "offset": "0x32e",
            "doc": "memory that stores M"
        },
        "ds.m_mem303": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem303",
            "name": "m_mem303",
            "offset": "0x32f",
            "doc": "memory that stores M"
        },
        "ds.m_mem304": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem304",
            "name": "m_mem304",
            "offset": "0x330",
            "doc": "memory that stores M"
        },
        "ds.m_mem305": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem305",
            "name": "m_mem305",
            "offset": "0x331",
            "doc": "memory that stores M"
        },
        "ds.m_mem306": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem306",
            "name": "m_mem306",
            "offset": "0x332",
            "doc": "memory that stores M"
        },
        "ds.m_mem307": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem307",
            "name": "m_mem307",
            "offset": "0x333",
            "doc": "memory that stores M"
        },
        "ds.m_mem308": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem308",
            "name": "m_mem308",
            "offset": "0x334",
            "doc": "memory that stores M"
        },
        "ds.m_mem309": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem309",
            "name": "m_mem309",
            "offset": "0x335",
            "doc": "memory that stores M"
        },
        "ds.m_mem310": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem310",
            "name": "m_mem310",
            "offset": "0x336",
            "doc": "memory that stores M"
        },
        "ds.m_mem311": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem311",
            "name": "m_mem311",
            "offset": "0x337",
            "doc": "memory that stores M"
        },
        "ds.m_mem312": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem312",
            "name": "m_mem312",
            "offset": "0x338",
            "doc": "memory that stores M"
        },
        "ds.m_mem313": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem313",
            "name": "m_mem313",
            "offset": "0x339",
            "doc": "memory that stores M"
        },
        "ds.m_mem314": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem314",
            "name": "m_mem314",
            "offset": "0x33a",
            "doc": "memory that stores M"
        },
        "ds.m_mem315": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem315",
            "name": "m_mem315",
            "offset": "0x33b",
            "doc": "memory that stores M"
        },
        "ds.m_mem316": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem316",
            "name": "m_mem316",
            "offset": "0x33c",
            "doc": "memory that stores M"
        },
        "ds.m_mem317": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem317",
            "name": "m_mem317",
            "offset": "0x33d",
            "doc": "memory that stores M"
        },
        "ds.m_mem318": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem318",
            "name": "m_mem318",
            "offset": "0x33e",
            "doc": "memory that stores M"
        },
        "ds.m_mem319": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem319",
            "name": "m_mem319",
            "offset": "0x33f",
            "doc": "memory that stores M"
        },
        "ds.m_mem320": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem320",
            "name": "m_mem320",
            "offset": "0x340",
            "doc": "memory that stores M"
        },
        "ds.m_mem321": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem321",
            "name": "m_mem321",
            "offset": "0x341",
            "doc": "memory that stores M"
        },
        "ds.m_mem322": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem322",
            "name": "m_mem322",
            "offset": "0x342",
            "doc": "memory that stores M"
        },
        "ds.m_mem323": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem323",
            "name": "m_mem323",
            "offset": "0x343",
            "doc": "memory that stores M"
        },
        "ds.m_mem324": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem324",
            "name": "m_mem324",
            "offset": "0x344",
            "doc": "memory that stores M"
        },
        "ds.m_mem325": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem325",
            "name": "m_mem325",
            "offset": "0x345",
            "doc": "memory that stores M"
        },
        "ds.m_mem326": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem326",
            "name": "m_mem326",
            "offset": "0x346",
            "doc": "memory that stores M"
        },
        "ds.m_mem327": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem327",
            "name": "m_mem327",
            "offset": "0x347",
            "doc": "memory that stores M"
        },
        "ds.m_mem328": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem328",
            "name": "m_mem328",
            "offset": "0x348",
            "doc": "memory that stores M"
        },
        "ds.m_mem329": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem329",
            "name": "m_mem329",
            "offset": "0x349",
            "doc": "memory that stores M"
        },
        "ds.m_mem330": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem330",
            "name": "m_mem330",
            "offset": "0x34a",
            "doc": "memory that stores M"
        },
        "ds.m_mem331": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem331",
            "name": "m_mem331",
            "offset": "0x34b",
            "doc": "memory that stores M"
        },
        "ds.m_mem332": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem332",
            "name": "m_mem332",
            "offset": "0x34c",
            "doc": "memory that stores M"
        },
        "ds.m_mem333": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem333",
            "name": "m_mem333",
            "offset": "0x34d",
            "doc": "memory that stores M"
        },
        "ds.m_mem334": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem334",
            "name": "m_mem334",
            "offset": "0x34e",
            "doc": "memory that stores M"
        },
        "ds.m_mem335": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem335",
            "name": "m_mem335",
            "offset": "0x34f",
            "doc": "memory that stores M"
        },
        "ds.m_mem336": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem336",
            "name": "m_mem336",
            "offset": "0x350",
            "doc": "memory that stores M"
        },
        "ds.m_mem337": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem337",
            "name": "m_mem337",
            "offset": "0x351",
            "doc": "memory that stores M"
        },
        "ds.m_mem338": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem338",
            "name": "m_mem338",
            "offset": "0x352",
            "doc": "memory that stores M"
        },
        "ds.m_mem339": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem339",
            "name": "m_mem339",
            "offset": "0x353",
            "doc": "memory that stores M"
        },
        "ds.m_mem340": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem340",
            "name": "m_mem340",
            "offset": "0x354",
            "doc": "memory that stores M"
        },
        "ds.m_mem341": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem341",
            "name": "m_mem341",
            "offset": "0x355",
            "doc": "memory that stores M"
        },
        "ds.m_mem342": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem342",
            "name": "m_mem342",
            "offset": "0x356",
            "doc": "memory that stores M"
        },
        "ds.m_mem343": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem343",
            "name": "m_mem343",
            "offset": "0x357",
            "doc": "memory that stores M"
        },
        "ds.m_mem344": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem344",
            "name": "m_mem344",
            "offset": "0x358",
            "doc": "memory that stores M"
        },
        "ds.m_mem345": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem345",
            "name": "m_mem345",
            "offset": "0x359",
            "doc": "memory that stores M"
        },
        "ds.m_mem346": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem346",
            "name": "m_mem346",
            "offset": "0x35a",
            "doc": "memory that stores M"
        },
        "ds.m_mem347": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem347",
            "name": "m_mem347",
            "offset": "0x35b",
            "doc": "memory that stores M"
        },
        "ds.m_mem348": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem348",
            "name": "m_mem348",
            "offset": "0x35c",
            "doc": "memory that stores M"
        },
        "ds.m_mem349": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem349",
            "name": "m_mem349",
            "offset": "0x35d",
            "doc": "memory that stores M"
        },
        "ds.m_mem350": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem350",
            "name": "m_mem350",
            "offset": "0x35e",
            "doc": "memory that stores M"
        },
        "ds.m_mem351": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem351",
            "name": "m_mem351",
            "offset": "0x35f",
            "doc": "memory that stores M"
        },
        "ds.m_mem352": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem352",
            "name": "m_mem352",
            "offset": "0x360",
            "doc": "memory that stores M"
        },
        "ds.m_mem353": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem353",
            "name": "m_mem353",
            "offset": "0x361",
            "doc": "memory that stores M"
        },
        "ds.m_mem354": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem354",
            "name": "m_mem354",
            "offset": "0x362",
            "doc": "memory that stores M"
        },
        "ds.m_mem355": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem355",
            "name": "m_mem355",
            "offset": "0x363",
            "doc": "memory that stores M"
        },
        "ds.m_mem356": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem356",
            "name": "m_mem356",
            "offset": "0x364",
            "doc": "memory that stores M"
        },
        "ds.m_mem357": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem357",
            "name": "m_mem357",
            "offset": "0x365",
            "doc": "memory that stores M"
        },
        "ds.m_mem358": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem358",
            "name": "m_mem358",
            "offset": "0x366",
            "doc": "memory that stores M"
        },
        "ds.m_mem359": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem359",
            "name": "m_mem359",
            "offset": "0x367",
            "doc": "memory that stores M"
        },
        "ds.m_mem360": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem360",
            "name": "m_mem360",
            "offset": "0x368",
            "doc": "memory that stores M"
        },
        "ds.m_mem361": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem361",
            "name": "m_mem361",
            "offset": "0x369",
            "doc": "memory that stores M"
        },
        "ds.m_mem362": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem362",
            "name": "m_mem362",
            "offset": "0x36a",
            "doc": "memory that stores M"
        },
        "ds.m_mem363": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem363",
            "name": "m_mem363",
            "offset": "0x36b",
            "doc": "memory that stores M"
        },
        "ds.m_mem364": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem364",
            "name": "m_mem364",
            "offset": "0x36c",
            "doc": "memory that stores M"
        },
        "ds.m_mem365": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem365",
            "name": "m_mem365",
            "offset": "0x36d",
            "doc": "memory that stores M"
        },
        "ds.m_mem366": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem366",
            "name": "m_mem366",
            "offset": "0x36e",
            "doc": "memory that stores M"
        },
        "ds.m_mem367": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem367",
            "name": "m_mem367",
            "offset": "0x36f",
            "doc": "memory that stores M"
        },
        "ds.m_mem368": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem368",
            "name": "m_mem368",
            "offset": "0x370",
            "doc": "memory that stores M"
        },
        "ds.m_mem369": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem369",
            "name": "m_mem369",
            "offset": "0x371",
            "doc": "memory that stores M"
        },
        "ds.m_mem370": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem370",
            "name": "m_mem370",
            "offset": "0x372",
            "doc": "memory that stores M"
        },
        "ds.m_mem371": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem371",
            "name": "m_mem371",
            "offset": "0x373",
            "doc": "memory that stores M"
        },
        "ds.m_mem372": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem372",
            "name": "m_mem372",
            "offset": "0x374",
            "doc": "memory that stores M"
        },
        "ds.m_mem373": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem373",
            "name": "m_mem373",
            "offset": "0x375",
            "doc": "memory that stores M"
        },
        "ds.m_mem374": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem374",
            "name": "m_mem374",
            "offset": "0x376",
            "doc": "memory that stores M"
        },
        "ds.m_mem375": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem375",
            "name": "m_mem375",
            "offset": "0x377",
            "doc": "memory that stores M"
        },
        "ds.m_mem376": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem376",
            "name": "m_mem376",
            "offset": "0x378",
            "doc": "memory that stores M"
        },
        "ds.m_mem377": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem377",
            "name": "m_mem377",
            "offset": "0x379",
            "doc": "memory that stores M"
        },
        "ds.m_mem378": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem378",
            "name": "m_mem378",
            "offset": "0x37a",
            "doc": "memory that stores M"
        },
        "ds.m_mem379": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem379",
            "name": "m_mem379",
            "offset": "0x37b",
            "doc": "memory that stores M"
        },
        "ds.m_mem380": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem380",
            "name": "m_mem380",
            "offset": "0x37c",
            "doc": "memory that stores M"
        },
        "ds.m_mem381": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem381",
            "name": "m_mem381",
            "offset": "0x37d",
            "doc": "memory that stores M"
        },
        "ds.m_mem382": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem382",
            "name": "m_mem382",
            "offset": "0x37e",
            "doc": "memory that stores M"
        },
        "ds.m_mem383": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem383",
            "name": "m_mem383",
            "offset": "0x37f",
            "doc": "memory that stores M"
        },
        "ds.m_mem384": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem384",
            "name": "m_mem384",
            "offset": "0x380",
            "doc": "memory that stores M"
        },
        "ds.m_mem385": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem385",
            "name": "m_mem385",
            "offset": "0x381",
            "doc": "memory that stores M"
        },
        "ds.m_mem386": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem386",
            "name": "m_mem386",
            "offset": "0x382",
            "doc": "memory that stores M"
        },
        "ds.m_mem387": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem387",
            "name": "m_mem387",
            "offset": "0x383",
            "doc": "memory that stores M"
        },
        "ds.m_mem388": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem388",
            "name": "m_mem388",
            "offset": "0x384",
            "doc": "memory that stores M"
        },
        "ds.m_mem389": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem389",
            "name": "m_mem389",
            "offset": "0x385",
            "doc": "memory that stores M"
        },
        "ds.m_mem390": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem390",
            "name": "m_mem390",
            "offset": "0x386",
            "doc": "memory that stores M"
        },
        "ds.m_mem391": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem391",
            "name": "m_mem391",
            "offset": "0x387",
            "doc": "memory that stores M"
        },
        "ds.m_mem392": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem392",
            "name": "m_mem392",
            "offset": "0x388",
            "doc": "memory that stores M"
        },
        "ds.m_mem393": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem393",
            "name": "m_mem393",
            "offset": "0x389",
            "doc": "memory that stores M"
        },
        "ds.m_mem394": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem394",
            "name": "m_mem394",
            "offset": "0x38a",
            "doc": "memory that stores M"
        },
        "ds.m_mem395": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem395",
            "name": "m_mem395",
            "offset": "0x38b",
            "doc": "memory that stores M"
        },
        "ds.m_mem396": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem396",
            "name": "m_mem396",
            "offset": "0x38c",
            "doc": "memory that stores M"
        },
        "ds.m_mem397": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem397",
            "name": "m_mem397",
            "offset": "0x38d",
            "doc": "memory that stores M"
        },
        "ds.m_mem398": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem398",
            "name": "m_mem398",
            "offset": "0x38e",
            "doc": "memory that stores M"
        },
        "ds.m_mem399": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem399",
            "name": "m_mem399",
            "offset": "0x38f",
            "doc": "memory that stores M"
        },
        "ds.m_mem400": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem400",
            "name": "m_mem400",
            "offset": "0x390",
            "doc": "memory that stores M"
        },
        "ds.m_mem401": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem401",
            "name": "m_mem401",
            "offset": "0x391",
            "doc": "memory that stores M"
        },
        "ds.m_mem402": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem402",
            "name": "m_mem402",
            "offset": "0x392",
            "doc": "memory that stores M"
        },
        "ds.m_mem403": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem403",
            "name": "m_mem403",
            "offset": "0x393",
            "doc": "memory that stores M"
        },
        "ds.m_mem404": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem404",
            "name": "m_mem404",
            "offset": "0x394",
            "doc": "memory that stores M"
        },
        "ds.m_mem405": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem405",
            "name": "m_mem405",
            "offset": "0x395",
            "doc": "memory that stores M"
        },
        "ds.m_mem406": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem406",
            "name": "m_mem406",
            "offset": "0x396",
            "doc": "memory that stores M"
        },
        "ds.m_mem407": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem407",
            "name": "m_mem407",
            "offset": "0x397",
            "doc": "memory that stores M"
        },
        "ds.m_mem408": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem408",
            "name": "m_mem408",
            "offset": "0x398",
            "doc": "memory that stores M"
        },
        "ds.m_mem409": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem409",
            "name": "m_mem409",
            "offset": "0x399",
            "doc": "memory that stores M"
        },
        "ds.m_mem410": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem410",
            "name": "m_mem410",
            "offset": "0x39a",
            "doc": "memory that stores M"
        },
        "ds.m_mem411": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem411",
            "name": "m_mem411",
            "offset": "0x39b",
            "doc": "memory that stores M"
        },
        "ds.m_mem412": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem412",
            "name": "m_mem412",
            "offset": "0x39c",
            "doc": "memory that stores M"
        },
        "ds.m_mem413": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem413",
            "name": "m_mem413",
            "offset": "0x39d",
            "doc": "memory that stores M"
        },
        "ds.m_mem414": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem414",
            "name": "m_mem414",
            "offset": "0x39e",
            "doc": "memory that stores M"
        },
        "ds.m_mem415": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem415",
            "name": "m_mem415",
            "offset": "0x39f",
            "doc": "memory that stores M"
        },
        "ds.m_mem416": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem416",
            "name": "m_mem416",
            "offset": "0x3a0",
            "doc": "memory that stores M"
        },
        "ds.m_mem417": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem417",
            "name": "m_mem417",
            "offset": "0x3a1",
            "doc": "memory that stores M"
        },
        "ds.m_mem418": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem418",
            "name": "m_mem418",
            "offset": "0x3a2",
            "doc": "memory that stores M"
        },
        "ds.m_mem419": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem419",
            "name": "m_mem419",
            "offset": "0x3a3",
            "doc": "memory that stores M"
        },
        "ds.m_mem420": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem420",
            "name": "m_mem420",
            "offset": "0x3a4",
            "doc": "memory that stores M"
        },
        "ds.m_mem421": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem421",
            "name": "m_mem421",
            "offset": "0x3a5",
            "doc": "memory that stores M"
        },
        "ds.m_mem422": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem422",
            "name": "m_mem422",
            "offset": "0x3a6",
            "doc": "memory that stores M"
        },
        "ds.m_mem423": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem423",
            "name": "m_mem423",
            "offset": "0x3a7",
            "doc": "memory that stores M"
        },
        "ds.m_mem424": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem424",
            "name": "m_mem424",
            "offset": "0x3a8",
            "doc": "memory that stores M"
        },
        "ds.m_mem425": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem425",
            "name": "m_mem425",
            "offset": "0x3a9",
            "doc": "memory that stores M"
        },
        "ds.m_mem426": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem426",
            "name": "m_mem426",
            "offset": "0x3aa",
            "doc": "memory that stores M"
        },
        "ds.m_mem427": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem427",
            "name": "m_mem427",
            "offset": "0x3ab",
            "doc": "memory that stores M"
        },
        "ds.m_mem428": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem428",
            "name": "m_mem428",
            "offset": "0x3ac",
            "doc": "memory that stores M"
        },
        "ds.m_mem429": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem429",
            "name": "m_mem429",
            "offset": "0x3ad",
            "doc": "memory that stores M"
        },
        "ds.m_mem430": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem430",
            "name": "m_mem430",
            "offset": "0x3ae",
            "doc": "memory that stores M"
        },
        "ds.m_mem431": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem431",
            "name": "m_mem431",
            "offset": "0x3af",
            "doc": "memory that stores M"
        },
        "ds.m_mem432": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem432",
            "name": "m_mem432",
            "offset": "0x3b0",
            "doc": "memory that stores M"
        },
        "ds.m_mem433": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem433",
            "name": "m_mem433",
            "offset": "0x3b1",
            "doc": "memory that stores M"
        },
        "ds.m_mem434": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem434",
            "name": "m_mem434",
            "offset": "0x3b2",
            "doc": "memory that stores M"
        },
        "ds.m_mem435": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem435",
            "name": "m_mem435",
            "offset": "0x3b3",
            "doc": "memory that stores M"
        },
        "ds.m_mem436": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem436",
            "name": "m_mem436",
            "offset": "0x3b4",
            "doc": "memory that stores M"
        },
        "ds.m_mem437": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem437",
            "name": "m_mem437",
            "offset": "0x3b5",
            "doc": "memory that stores M"
        },
        "ds.m_mem438": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem438",
            "name": "m_mem438",
            "offset": "0x3b6",
            "doc": "memory that stores M"
        },
        "ds.m_mem439": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem439",
            "name": "m_mem439",
            "offset": "0x3b7",
            "doc": "memory that stores M"
        },
        "ds.m_mem440": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem440",
            "name": "m_mem440",
            "offset": "0x3b8",
            "doc": "memory that stores M"
        },
        "ds.m_mem441": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem441",
            "name": "m_mem441",
            "offset": "0x3b9",
            "doc": "memory that stores M"
        },
        "ds.m_mem442": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem442",
            "name": "m_mem442",
            "offset": "0x3ba",
            "doc": "memory that stores M"
        },
        "ds.m_mem443": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem443",
            "name": "m_mem443",
            "offset": "0x3bb",
            "doc": "memory that stores M"
        },
        "ds.m_mem444": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem444",
            "name": "m_mem444",
            "offset": "0x3bc",
            "doc": "memory that stores M"
        },
        "ds.m_mem445": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem445",
            "name": "m_mem445",
            "offset": "0x3bd",
            "doc": "memory that stores M"
        },
        "ds.m_mem446": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem446",
            "name": "m_mem446",
            "offset": "0x3be",
            "doc": "memory that stores M"
        },
        "ds.m_mem447": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem447",
            "name": "m_mem447",
            "offset": "0x3bf",
            "doc": "memory that stores M"
        },
        "ds.m_mem448": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem448",
            "name": "m_mem448",
            "offset": "0x3c0",
            "doc": "memory that stores M"
        },
        "ds.m_mem449": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem449",
            "name": "m_mem449",
            "offset": "0x3c1",
            "doc": "memory that stores M"
        },
        "ds.m_mem450": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem450",
            "name": "m_mem450",
            "offset": "0x3c2",
            "doc": "memory that stores M"
        },
        "ds.m_mem451": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem451",
            "name": "m_mem451",
            "offset": "0x3c3",
            "doc": "memory that stores M"
        },
        "ds.m_mem452": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem452",
            "name": "m_mem452",
            "offset": "0x3c4",
            "doc": "memory that stores M"
        },
        "ds.m_mem453": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem453",
            "name": "m_mem453",
            "offset": "0x3c5",
            "doc": "memory that stores M"
        },
        "ds.m_mem454": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem454",
            "name": "m_mem454",
            "offset": "0x3c6",
            "doc": "memory that stores M"
        },
        "ds.m_mem455": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem455",
            "name": "m_mem455",
            "offset": "0x3c7",
            "doc": "memory that stores M"
        },
        "ds.m_mem456": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem456",
            "name": "m_mem456",
            "offset": "0x3c8",
            "doc": "memory that stores M"
        },
        "ds.m_mem457": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem457",
            "name": "m_mem457",
            "offset": "0x3c9",
            "doc": "memory that stores M"
        },
        "ds.m_mem458": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem458",
            "name": "m_mem458",
            "offset": "0x3ca",
            "doc": "memory that stores M"
        },
        "ds.m_mem459": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem459",
            "name": "m_mem459",
            "offset": "0x3cb",
            "doc": "memory that stores M"
        },
        "ds.m_mem460": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem460",
            "name": "m_mem460",
            "offset": "0x3cc",
            "doc": "memory that stores M"
        },
        "ds.m_mem461": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem461",
            "name": "m_mem461",
            "offset": "0x3cd",
            "doc": "memory that stores M"
        },
        "ds.m_mem462": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem462",
            "name": "m_mem462",
            "offset": "0x3ce",
            "doc": "memory that stores M"
        },
        "ds.m_mem463": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem463",
            "name": "m_mem463",
            "offset": "0x3cf",
            "doc": "memory that stores M"
        },
        "ds.m_mem464": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem464",
            "name": "m_mem464",
            "offset": "0x3d0",
            "doc": "memory that stores M"
        },
        "ds.m_mem465": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem465",
            "name": "m_mem465",
            "offset": "0x3d1",
            "doc": "memory that stores M"
        },
        "ds.m_mem466": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem466",
            "name": "m_mem466",
            "offset": "0x3d2",
            "doc": "memory that stores M"
        },
        "ds.m_mem467": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem467",
            "name": "m_mem467",
            "offset": "0x3d3",
            "doc": "memory that stores M"
        },
        "ds.m_mem468": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem468",
            "name": "m_mem468",
            "offset": "0x3d4",
            "doc": "memory that stores M"
        },
        "ds.m_mem469": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem469",
            "name": "m_mem469",
            "offset": "0x3d5",
            "doc": "memory that stores M"
        },
        "ds.m_mem470": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem470",
            "name": "m_mem470",
            "offset": "0x3d6",
            "doc": "memory that stores M"
        },
        "ds.m_mem471": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem471",
            "name": "m_mem471",
            "offset": "0x3d7",
            "doc": "memory that stores M"
        },
        "ds.m_mem472": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem472",
            "name": "m_mem472",
            "offset": "0x3d8",
            "doc": "memory that stores M"
        },
        "ds.m_mem473": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem473",
            "name": "m_mem473",
            "offset": "0x3d9",
            "doc": "memory that stores M"
        },
        "ds.m_mem474": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem474",
            "name": "m_mem474",
            "offset": "0x3da",
            "doc": "memory that stores M"
        },
        "ds.m_mem475": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem475",
            "name": "m_mem475",
            "offset": "0x3db",
            "doc": "memory that stores M"
        },
        "ds.m_mem476": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem476",
            "name": "m_mem476",
            "offset": "0x3dc",
            "doc": "memory that stores M"
        },
        "ds.m_mem477": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem477",
            "name": "m_mem477",
            "offset": "0x3dd",
            "doc": "memory that stores M"
        },
        "ds.m_mem478": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem478",
            "name": "m_mem478",
            "offset": "0x3de",
            "doc": "memory that stores M"
        },
        "ds.m_mem479": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem479",
            "name": "m_mem479",
            "offset": "0x3df",
            "doc": "memory that stores M"
        },
        "ds.m_mem480": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem480",
            "name": "m_mem480",
            "offset": "0x3e0",
            "doc": "memory that stores M"
        },
        "ds.m_mem481": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem481",
            "name": "m_mem481",
            "offset": "0x3e1",
            "doc": "memory that stores M"
        },
        "ds.m_mem482": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem482",
            "name": "m_mem482",
            "offset": "0x3e2",
            "doc": "memory that stores M"
        },
        "ds.m_mem483": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem483",
            "name": "m_mem483",
            "offset": "0x3e3",
            "doc": "memory that stores M"
        },
        "ds.m_mem484": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem484",
            "name": "m_mem484",
            "offset": "0x3e4",
            "doc": "memory that stores M"
        },
        "ds.m_mem485": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem485",
            "name": "m_mem485",
            "offset": "0x3e5",
            "doc": "memory that stores M"
        },
        "ds.m_mem486": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem486",
            "name": "m_mem486",
            "offset": "0x3e6",
            "doc": "memory that stores M"
        },
        "ds.m_mem487": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem487",
            "name": "m_mem487",
            "offset": "0x3e7",
            "doc": "memory that stores M"
        },
        "ds.m_mem488": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem488",
            "name": "m_mem488",
            "offset": "0x3e8",
            "doc": "memory that stores M"
        },
        "ds.m_mem489": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem489",
            "name": "m_mem489",
            "offset": "0x3e9",
            "doc": "memory that stores M"
        },
        "ds.m_mem490": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem490",
            "name": "m_mem490",
            "offset": "0x3ea",
            "doc": "memory that stores M"
        },
        "ds.m_mem491": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem491",
            "name": "m_mem491",
            "offset": "0x3eb",
            "doc": "memory that stores M"
        },
        "ds.m_mem492": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem492",
            "name": "m_mem492",
            "offset": "0x3ec",
            "doc": "memory that stores M"
        },
        "ds.m_mem493": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem493",
            "name": "m_mem493",
            "offset": "0x3ed",
            "doc": "memory that stores M"
        },
        "ds.m_mem494": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem494",
            "name": "m_mem494",
            "offset": "0x3ee",
            "doc": "memory that stores M"
        },
        "ds.m_mem495": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem495",
            "name": "m_mem495",
            "offset": "0x3ef",
            "doc": "memory that stores M"
        },
        "ds.m_mem496": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem496",
            "name": "m_mem496",
            "offset": "0x3f0",
            "doc": "memory that stores M"
        },
        "ds.m_mem497": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem497",
            "name": "m_mem497",
            "offset": "0x3f1",
            "doc": "memory that stores M"
        },
        "ds.m_mem498": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem498",
            "name": "m_mem498",
            "offset": "0x3f2",
            "doc": "memory that stores M"
        },
        "ds.m_mem499": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem499",
            "name": "m_mem499",
            "offset": "0x3f3",
            "doc": "memory that stores M"
        },
        "ds.m_mem500": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem500",
            "name": "m_mem500",
            "offset": "0x3f4",
            "doc": "memory that stores M"
        },
        "ds.m_mem501": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem501",
            "name": "m_mem501",
            "offset": "0x3f5",
            "doc": "memory that stores M"
        },
        "ds.m_mem502": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem502",
            "name": "m_mem502",
            "offset": "0x3f6",
            "doc": "memory that stores M"
        },
        "ds.m_mem503": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem503",
            "name": "m_mem503",
            "offset": "0x3f7",
            "doc": "memory that stores M"
        },
        "ds.m_mem504": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem504",
            "name": "m_mem504",
            "offset": "0x3f8",
            "doc": "memory that stores M"
        },
        "ds.m_mem505": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem505",
            "name": "m_mem505",
            "offset": "0x3f9",
            "doc": "memory that stores M"
        },
        "ds.m_mem506": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem506",
            "name": "m_mem506",
            "offset": "0x3fa",
            "doc": "memory that stores M"
        },
        "ds.m_mem507": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem507",
            "name": "m_mem507",
            "offset": "0x3fb",
            "doc": "memory that stores M"
        },
        "ds.m_mem508": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem508",
            "name": "m_mem508",
            "offset": "0x3fc",
            "doc": "memory that stores M"
        },
        "ds.m_mem509": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem509",
            "name": "m_mem509",
            "offset": "0x3fd",
            "doc": "memory that stores M"
        },
        "ds.m_mem510": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem510",
            "name": "m_mem510",
            "offset": "0x3fe",
            "doc": "memory that stores M"
        },
        "ds.m_mem511": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.m_mem511",
            "name": "m_mem511",
            "offset": "0x3ff",
            "doc": "memory that stores M"
        },
        "ds.rb_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem0",
            "name": "rb_mem0",
            "offset": "0x400",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem1",
            "name": "rb_mem1",
            "offset": "0x401",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem2",
            "name": "rb_mem2",
            "offset": "0x402",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem3",
            "name": "rb_mem3",
            "offset": "0x403",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem4",
            "name": "rb_mem4",
            "offset": "0x404",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem5",
            "name": "rb_mem5",
            "offset": "0x405",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem6",
            "name": "rb_mem6",
            "offset": "0x406",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem7",
            "name": "rb_mem7",
            "offset": "0x407",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem8",
            "name": "rb_mem8",
            "offset": "0x408",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem9",
            "name": "rb_mem9",
            "offset": "0x409",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem10",
            "name": "rb_mem10",
            "offset": "0x40a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem11",
            "name": "rb_mem11",
            "offset": "0x40b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem12",
            "name": "rb_mem12",
            "offset": "0x40c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem13",
            "name": "rb_mem13",
            "offset": "0x40d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem14",
            "name": "rb_mem14",
            "offset": "0x40e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem15",
            "name": "rb_mem15",
            "offset": "0x40f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem16",
            "name": "rb_mem16",
            "offset": "0x410",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem17",
            "name": "rb_mem17",
            "offset": "0x411",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem18",
            "name": "rb_mem18",
            "offset": "0x412",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem19",
            "name": "rb_mem19",
            "offset": "0x413",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem20",
            "name": "rb_mem20",
            "offset": "0x414",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem21",
            "name": "rb_mem21",
            "offset": "0x415",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem22",
            "name": "rb_mem22",
            "offset": "0x416",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem23",
            "name": "rb_mem23",
            "offset": "0x417",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem24",
            "name": "rb_mem24",
            "offset": "0x418",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem25",
            "name": "rb_mem25",
            "offset": "0x419",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem26",
            "name": "rb_mem26",
            "offset": "0x41a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem27",
            "name": "rb_mem27",
            "offset": "0x41b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem28",
            "name": "rb_mem28",
            "offset": "0x41c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem29",
            "name": "rb_mem29",
            "offset": "0x41d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem30",
            "name": "rb_mem30",
            "offset": "0x41e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem31",
            "name": "rb_mem31",
            "offset": "0x41f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem32",
            "name": "rb_mem32",
            "offset": "0x420",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem33",
            "name": "rb_mem33",
            "offset": "0x421",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem34",
            "name": "rb_mem34",
            "offset": "0x422",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem35",
            "name": "rb_mem35",
            "offset": "0x423",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem36",
            "name": "rb_mem36",
            "offset": "0x424",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem37",
            "name": "rb_mem37",
            "offset": "0x425",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem38",
            "name": "rb_mem38",
            "offset": "0x426",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem39",
            "name": "rb_mem39",
            "offset": "0x427",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem40",
            "name": "rb_mem40",
            "offset": "0x428",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem41",
            "name": "rb_mem41",
            "offset": "0x429",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem42",
            "name": "rb_mem42",
            "offset": "0x42a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem43",
            "name": "rb_mem43",
            "offset": "0x42b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem44",
            "name": "rb_mem44",
            "offset": "0x42c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem45",
            "name": "rb_mem45",
            "offset": "0x42d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem46",
            "name": "rb_mem46",
            "offset": "0x42e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem47",
            "name": "rb_mem47",
            "offset": "0x42f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem48",
            "name": "rb_mem48",
            "offset": "0x430",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem49",
            "name": "rb_mem49",
            "offset": "0x431",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem50",
            "name": "rb_mem50",
            "offset": "0x432",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem51",
            "name": "rb_mem51",
            "offset": "0x433",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem52",
            "name": "rb_mem52",
            "offset": "0x434",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem53",
            "name": "rb_mem53",
            "offset": "0x435",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem54",
            "name": "rb_mem54",
            "offset": "0x436",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem55",
            "name": "rb_mem55",
            "offset": "0x437",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem56",
            "name": "rb_mem56",
            "offset": "0x438",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem57",
            "name": "rb_mem57",
            "offset": "0x439",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem58",
            "name": "rb_mem58",
            "offset": "0x43a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem59",
            "name": "rb_mem59",
            "offset": "0x43b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem60",
            "name": "rb_mem60",
            "offset": "0x43c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem61",
            "name": "rb_mem61",
            "offset": "0x43d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem62",
            "name": "rb_mem62",
            "offset": "0x43e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem63",
            "name": "rb_mem63",
            "offset": "0x43f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem64": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem64",
            "name": "rb_mem64",
            "offset": "0x440",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem65": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem65",
            "name": "rb_mem65",
            "offset": "0x441",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem66": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem66",
            "name": "rb_mem66",
            "offset": "0x442",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem67": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem67",
            "name": "rb_mem67",
            "offset": "0x443",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem68": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem68",
            "name": "rb_mem68",
            "offset": "0x444",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem69": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem69",
            "name": "rb_mem69",
            "offset": "0x445",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem70": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem70",
            "name": "rb_mem70",
            "offset": "0x446",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem71": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem71",
            "name": "rb_mem71",
            "offset": "0x447",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem72": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem72",
            "name": "rb_mem72",
            "offset": "0x448",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem73": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem73",
            "name": "rb_mem73",
            "offset": "0x449",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem74": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem74",
            "name": "rb_mem74",
            "offset": "0x44a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem75": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem75",
            "name": "rb_mem75",
            "offset": "0x44b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem76": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem76",
            "name": "rb_mem76",
            "offset": "0x44c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem77": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem77",
            "name": "rb_mem77",
            "offset": "0x44d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem78": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem78",
            "name": "rb_mem78",
            "offset": "0x44e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem79": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem79",
            "name": "rb_mem79",
            "offset": "0x44f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem80": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem80",
            "name": "rb_mem80",
            "offset": "0x450",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem81": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem81",
            "name": "rb_mem81",
            "offset": "0x451",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem82": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem82",
            "name": "rb_mem82",
            "offset": "0x452",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem83": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem83",
            "name": "rb_mem83",
            "offset": "0x453",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem84": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem84",
            "name": "rb_mem84",
            "offset": "0x454",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem85": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem85",
            "name": "rb_mem85",
            "offset": "0x455",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem86": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem86",
            "name": "rb_mem86",
            "offset": "0x456",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem87": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem87",
            "name": "rb_mem87",
            "offset": "0x457",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem88": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem88",
            "name": "rb_mem88",
            "offset": "0x458",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem89": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem89",
            "name": "rb_mem89",
            "offset": "0x459",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem90": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem90",
            "name": "rb_mem90",
            "offset": "0x45a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem91": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem91",
            "name": "rb_mem91",
            "offset": "0x45b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem92": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem92",
            "name": "rb_mem92",
            "offset": "0x45c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem93": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem93",
            "name": "rb_mem93",
            "offset": "0x45d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem94": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem94",
            "name": "rb_mem94",
            "offset": "0x45e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem95": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem95",
            "name": "rb_mem95",
            "offset": "0x45f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem96": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem96",
            "name": "rb_mem96",
            "offset": "0x460",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem97": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem97",
            "name": "rb_mem97",
            "offset": "0x461",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem98": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem98",
            "name": "rb_mem98",
            "offset": "0x462",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem99": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem99",
            "name": "rb_mem99",
            "offset": "0x463",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem100": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem100",
            "name": "rb_mem100",
            "offset": "0x464",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem101": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem101",
            "name": "rb_mem101",
            "offset": "0x465",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem102": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem102",
            "name": "rb_mem102",
            "offset": "0x466",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem103": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem103",
            "name": "rb_mem103",
            "offset": "0x467",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem104": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem104",
            "name": "rb_mem104",
            "offset": "0x468",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem105": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem105",
            "name": "rb_mem105",
            "offset": "0x469",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem106": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem106",
            "name": "rb_mem106",
            "offset": "0x46a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem107": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem107",
            "name": "rb_mem107",
            "offset": "0x46b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem108": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem108",
            "name": "rb_mem108",
            "offset": "0x46c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem109": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem109",
            "name": "rb_mem109",
            "offset": "0x46d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem110": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem110",
            "name": "rb_mem110",
            "offset": "0x46e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem111": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem111",
            "name": "rb_mem111",
            "offset": "0x46f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem112": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem112",
            "name": "rb_mem112",
            "offset": "0x470",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem113": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem113",
            "name": "rb_mem113",
            "offset": "0x471",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem114": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem114",
            "name": "rb_mem114",
            "offset": "0x472",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem115": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem115",
            "name": "rb_mem115",
            "offset": "0x473",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem116": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem116",
            "name": "rb_mem116",
            "offset": "0x474",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem117": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem117",
            "name": "rb_mem117",
            "offset": "0x475",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem118": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem118",
            "name": "rb_mem118",
            "offset": "0x476",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem119": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem119",
            "name": "rb_mem119",
            "offset": "0x477",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem120": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem120",
            "name": "rb_mem120",
            "offset": "0x478",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem121": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem121",
            "name": "rb_mem121",
            "offset": "0x479",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem122": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem122",
            "name": "rb_mem122",
            "offset": "0x47a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem123": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem123",
            "name": "rb_mem123",
            "offset": "0x47b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem124": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem124",
            "name": "rb_mem124",
            "offset": "0x47c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem125": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem125",
            "name": "rb_mem125",
            "offset": "0x47d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem126": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem126",
            "name": "rb_mem126",
            "offset": "0x47e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem127": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem127",
            "name": "rb_mem127",
            "offset": "0x47f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem128": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem128",
            "name": "rb_mem128",
            "offset": "0x480",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem129": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem129",
            "name": "rb_mem129",
            "offset": "0x481",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem130": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem130",
            "name": "rb_mem130",
            "offset": "0x482",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem131": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem131",
            "name": "rb_mem131",
            "offset": "0x483",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem132": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem132",
            "name": "rb_mem132",
            "offset": "0x484",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem133": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem133",
            "name": "rb_mem133",
            "offset": "0x485",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem134": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem134",
            "name": "rb_mem134",
            "offset": "0x486",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem135": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem135",
            "name": "rb_mem135",
            "offset": "0x487",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem136": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem136",
            "name": "rb_mem136",
            "offset": "0x488",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem137": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem137",
            "name": "rb_mem137",
            "offset": "0x489",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem138": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem138",
            "name": "rb_mem138",
            "offset": "0x48a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem139": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem139",
            "name": "rb_mem139",
            "offset": "0x48b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem140": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem140",
            "name": "rb_mem140",
            "offset": "0x48c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem141": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem141",
            "name": "rb_mem141",
            "offset": "0x48d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem142": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem142",
            "name": "rb_mem142",
            "offset": "0x48e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem143": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem143",
            "name": "rb_mem143",
            "offset": "0x48f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem144": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem144",
            "name": "rb_mem144",
            "offset": "0x490",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem145": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem145",
            "name": "rb_mem145",
            "offset": "0x491",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem146": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem146",
            "name": "rb_mem146",
            "offset": "0x492",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem147": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem147",
            "name": "rb_mem147",
            "offset": "0x493",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem148": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem148",
            "name": "rb_mem148",
            "offset": "0x494",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem149": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem149",
            "name": "rb_mem149",
            "offset": "0x495",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem150": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem150",
            "name": "rb_mem150",
            "offset": "0x496",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem151": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem151",
            "name": "rb_mem151",
            "offset": "0x497",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem152": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem152",
            "name": "rb_mem152",
            "offset": "0x498",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem153": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem153",
            "name": "rb_mem153",
            "offset": "0x499",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem154": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem154",
            "name": "rb_mem154",
            "offset": "0x49a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem155": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem155",
            "name": "rb_mem155",
            "offset": "0x49b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem156": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem156",
            "name": "rb_mem156",
            "offset": "0x49c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem157": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem157",
            "name": "rb_mem157",
            "offset": "0x49d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem158": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem158",
            "name": "rb_mem158",
            "offset": "0x49e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem159": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem159",
            "name": "rb_mem159",
            "offset": "0x49f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem160": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem160",
            "name": "rb_mem160",
            "offset": "0x4a0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem161": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem161",
            "name": "rb_mem161",
            "offset": "0x4a1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem162": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem162",
            "name": "rb_mem162",
            "offset": "0x4a2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem163": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem163",
            "name": "rb_mem163",
            "offset": "0x4a3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem164": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem164",
            "name": "rb_mem164",
            "offset": "0x4a4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem165": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem165",
            "name": "rb_mem165",
            "offset": "0x4a5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem166": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem166",
            "name": "rb_mem166",
            "offset": "0x4a6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem167": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem167",
            "name": "rb_mem167",
            "offset": "0x4a7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem168": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem168",
            "name": "rb_mem168",
            "offset": "0x4a8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem169": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem169",
            "name": "rb_mem169",
            "offset": "0x4a9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem170": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem170",
            "name": "rb_mem170",
            "offset": "0x4aa",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem171": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem171",
            "name": "rb_mem171",
            "offset": "0x4ab",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem172": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem172",
            "name": "rb_mem172",
            "offset": "0x4ac",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem173": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem173",
            "name": "rb_mem173",
            "offset": "0x4ad",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem174": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem174",
            "name": "rb_mem174",
            "offset": "0x4ae",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem175": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem175",
            "name": "rb_mem175",
            "offset": "0x4af",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem176": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem176",
            "name": "rb_mem176",
            "offset": "0x4b0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem177": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem177",
            "name": "rb_mem177",
            "offset": "0x4b1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem178": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem178",
            "name": "rb_mem178",
            "offset": "0x4b2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem179": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem179",
            "name": "rb_mem179",
            "offset": "0x4b3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem180": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem180",
            "name": "rb_mem180",
            "offset": "0x4b4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem181": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem181",
            "name": "rb_mem181",
            "offset": "0x4b5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem182": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem182",
            "name": "rb_mem182",
            "offset": "0x4b6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem183": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem183",
            "name": "rb_mem183",
            "offset": "0x4b7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem184": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem184",
            "name": "rb_mem184",
            "offset": "0x4b8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem185": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem185",
            "name": "rb_mem185",
            "offset": "0x4b9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem186": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem186",
            "name": "rb_mem186",
            "offset": "0x4ba",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem187": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem187",
            "name": "rb_mem187",
            "offset": "0x4bb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem188": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem188",
            "name": "rb_mem188",
            "offset": "0x4bc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem189": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem189",
            "name": "rb_mem189",
            "offset": "0x4bd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem190": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem190",
            "name": "rb_mem190",
            "offset": "0x4be",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem191": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem191",
            "name": "rb_mem191",
            "offset": "0x4bf",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem192": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem192",
            "name": "rb_mem192",
            "offset": "0x4c0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem193": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem193",
            "name": "rb_mem193",
            "offset": "0x4c1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem194": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem194",
            "name": "rb_mem194",
            "offset": "0x4c2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem195": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem195",
            "name": "rb_mem195",
            "offset": "0x4c3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem196": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem196",
            "name": "rb_mem196",
            "offset": "0x4c4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem197": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem197",
            "name": "rb_mem197",
            "offset": "0x4c5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem198": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem198",
            "name": "rb_mem198",
            "offset": "0x4c6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem199": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem199",
            "name": "rb_mem199",
            "offset": "0x4c7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem200": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem200",
            "name": "rb_mem200",
            "offset": "0x4c8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem201": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem201",
            "name": "rb_mem201",
            "offset": "0x4c9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem202": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem202",
            "name": "rb_mem202",
            "offset": "0x4ca",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem203": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem203",
            "name": "rb_mem203",
            "offset": "0x4cb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem204": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem204",
            "name": "rb_mem204",
            "offset": "0x4cc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem205": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem205",
            "name": "rb_mem205",
            "offset": "0x4cd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem206": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem206",
            "name": "rb_mem206",
            "offset": "0x4ce",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem207": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem207",
            "name": "rb_mem207",
            "offset": "0x4cf",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem208": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem208",
            "name": "rb_mem208",
            "offset": "0x4d0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem209": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem209",
            "name": "rb_mem209",
            "offset": "0x4d1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem210": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem210",
            "name": "rb_mem210",
            "offset": "0x4d2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem211": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem211",
            "name": "rb_mem211",
            "offset": "0x4d3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem212": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem212",
            "name": "rb_mem212",
            "offset": "0x4d4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem213": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem213",
            "name": "rb_mem213",
            "offset": "0x4d5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem214": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem214",
            "name": "rb_mem214",
            "offset": "0x4d6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem215": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem215",
            "name": "rb_mem215",
            "offset": "0x4d7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem216": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem216",
            "name": "rb_mem216",
            "offset": "0x4d8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem217": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem217",
            "name": "rb_mem217",
            "offset": "0x4d9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem218": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem218",
            "name": "rb_mem218",
            "offset": "0x4da",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem219": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem219",
            "name": "rb_mem219",
            "offset": "0x4db",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem220": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem220",
            "name": "rb_mem220",
            "offset": "0x4dc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem221": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem221",
            "name": "rb_mem221",
            "offset": "0x4dd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem222": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem222",
            "name": "rb_mem222",
            "offset": "0x4de",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem223": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem223",
            "name": "rb_mem223",
            "offset": "0x4df",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem224": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem224",
            "name": "rb_mem224",
            "offset": "0x4e0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem225": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem225",
            "name": "rb_mem225",
            "offset": "0x4e1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem226": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem226",
            "name": "rb_mem226",
            "offset": "0x4e2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem227": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem227",
            "name": "rb_mem227",
            "offset": "0x4e3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem228": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem228",
            "name": "rb_mem228",
            "offset": "0x4e4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem229": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem229",
            "name": "rb_mem229",
            "offset": "0x4e5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem230": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem230",
            "name": "rb_mem230",
            "offset": "0x4e6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem231": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem231",
            "name": "rb_mem231",
            "offset": "0x4e7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem232": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem232",
            "name": "rb_mem232",
            "offset": "0x4e8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem233": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem233",
            "name": "rb_mem233",
            "offset": "0x4e9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem234": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem234",
            "name": "rb_mem234",
            "offset": "0x4ea",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem235": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem235",
            "name": "rb_mem235",
            "offset": "0x4eb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem236": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem236",
            "name": "rb_mem236",
            "offset": "0x4ec",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem237": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem237",
            "name": "rb_mem237",
            "offset": "0x4ed",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem238": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem238",
            "name": "rb_mem238",
            "offset": "0x4ee",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem239": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem239",
            "name": "rb_mem239",
            "offset": "0x4ef",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem240": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem240",
            "name": "rb_mem240",
            "offset": "0x4f0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem241": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem241",
            "name": "rb_mem241",
            "offset": "0x4f1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem242": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem242",
            "name": "rb_mem242",
            "offset": "0x4f2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem243": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem243",
            "name": "rb_mem243",
            "offset": "0x4f3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem244": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem244",
            "name": "rb_mem244",
            "offset": "0x4f4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem245": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem245",
            "name": "rb_mem245",
            "offset": "0x4f5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem246": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem246",
            "name": "rb_mem246",
            "offset": "0x4f6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem247": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem247",
            "name": "rb_mem247",
            "offset": "0x4f7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem248": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem248",
            "name": "rb_mem248",
            "offset": "0x4f8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem249": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem249",
            "name": "rb_mem249",
            "offset": "0x4f9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem250": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem250",
            "name": "rb_mem250",
            "offset": "0x4fa",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem251": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem251",
            "name": "rb_mem251",
            "offset": "0x4fb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem252": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem252",
            "name": "rb_mem252",
            "offset": "0x4fc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem253": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem253",
            "name": "rb_mem253",
            "offset": "0x4fd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem254": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem254",
            "name": "rb_mem254",
            "offset": "0x4fe",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem255": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem255",
            "name": "rb_mem255",
            "offset": "0x4ff",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem256": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem256",
            "name": "rb_mem256",
            "offset": "0x500",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem257": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem257",
            "name": "rb_mem257",
            "offset": "0x501",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem258": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem258",
            "name": "rb_mem258",
            "offset": "0x502",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem259": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem259",
            "name": "rb_mem259",
            "offset": "0x503",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem260": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem260",
            "name": "rb_mem260",
            "offset": "0x504",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem261": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem261",
            "name": "rb_mem261",
            "offset": "0x505",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem262": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem262",
            "name": "rb_mem262",
            "offset": "0x506",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem263": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem263",
            "name": "rb_mem263",
            "offset": "0x507",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem264": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem264",
            "name": "rb_mem264",
            "offset": "0x508",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem265": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem265",
            "name": "rb_mem265",
            "offset": "0x509",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem266": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem266",
            "name": "rb_mem266",
            "offset": "0x50a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem267": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem267",
            "name": "rb_mem267",
            "offset": "0x50b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem268": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem268",
            "name": "rb_mem268",
            "offset": "0x50c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem269": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem269",
            "name": "rb_mem269",
            "offset": "0x50d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem270": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem270",
            "name": "rb_mem270",
            "offset": "0x50e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem271": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem271",
            "name": "rb_mem271",
            "offset": "0x50f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem272": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem272",
            "name": "rb_mem272",
            "offset": "0x510",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem273": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem273",
            "name": "rb_mem273",
            "offset": "0x511",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem274": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem274",
            "name": "rb_mem274",
            "offset": "0x512",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem275": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem275",
            "name": "rb_mem275",
            "offset": "0x513",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem276": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem276",
            "name": "rb_mem276",
            "offset": "0x514",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem277": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem277",
            "name": "rb_mem277",
            "offset": "0x515",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem278": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem278",
            "name": "rb_mem278",
            "offset": "0x516",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem279": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem279",
            "name": "rb_mem279",
            "offset": "0x517",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem280": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem280",
            "name": "rb_mem280",
            "offset": "0x518",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem281": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem281",
            "name": "rb_mem281",
            "offset": "0x519",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem282": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem282",
            "name": "rb_mem282",
            "offset": "0x51a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem283": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem283",
            "name": "rb_mem283",
            "offset": "0x51b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem284": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem284",
            "name": "rb_mem284",
            "offset": "0x51c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem285": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem285",
            "name": "rb_mem285",
            "offset": "0x51d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem286": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem286",
            "name": "rb_mem286",
            "offset": "0x51e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem287": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem287",
            "name": "rb_mem287",
            "offset": "0x51f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem288": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem288",
            "name": "rb_mem288",
            "offset": "0x520",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem289": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem289",
            "name": "rb_mem289",
            "offset": "0x521",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem290": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem290",
            "name": "rb_mem290",
            "offset": "0x522",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem291": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem291",
            "name": "rb_mem291",
            "offset": "0x523",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem292": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem292",
            "name": "rb_mem292",
            "offset": "0x524",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem293": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem293",
            "name": "rb_mem293",
            "offset": "0x525",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem294": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem294",
            "name": "rb_mem294",
            "offset": "0x526",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem295": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem295",
            "name": "rb_mem295",
            "offset": "0x527",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem296": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem296",
            "name": "rb_mem296",
            "offset": "0x528",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem297": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem297",
            "name": "rb_mem297",
            "offset": "0x529",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem298": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem298",
            "name": "rb_mem298",
            "offset": "0x52a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem299": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem299",
            "name": "rb_mem299",
            "offset": "0x52b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem300": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem300",
            "name": "rb_mem300",
            "offset": "0x52c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem301": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem301",
            "name": "rb_mem301",
            "offset": "0x52d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem302": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem302",
            "name": "rb_mem302",
            "offset": "0x52e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem303": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem303",
            "name": "rb_mem303",
            "offset": "0x52f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem304": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem304",
            "name": "rb_mem304",
            "offset": "0x530",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem305": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem305",
            "name": "rb_mem305",
            "offset": "0x531",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem306": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem306",
            "name": "rb_mem306",
            "offset": "0x532",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem307": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem307",
            "name": "rb_mem307",
            "offset": "0x533",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem308": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem308",
            "name": "rb_mem308",
            "offset": "0x534",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem309": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem309",
            "name": "rb_mem309",
            "offset": "0x535",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem310": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem310",
            "name": "rb_mem310",
            "offset": "0x536",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem311": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem311",
            "name": "rb_mem311",
            "offset": "0x537",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem312": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem312",
            "name": "rb_mem312",
            "offset": "0x538",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem313": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem313",
            "name": "rb_mem313",
            "offset": "0x539",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem314": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem314",
            "name": "rb_mem314",
            "offset": "0x53a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem315": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem315",
            "name": "rb_mem315",
            "offset": "0x53b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem316": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem316",
            "name": "rb_mem316",
            "offset": "0x53c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem317": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem317",
            "name": "rb_mem317",
            "offset": "0x53d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem318": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem318",
            "name": "rb_mem318",
            "offset": "0x53e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem319": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem319",
            "name": "rb_mem319",
            "offset": "0x53f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem320": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem320",
            "name": "rb_mem320",
            "offset": "0x540",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem321": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem321",
            "name": "rb_mem321",
            "offset": "0x541",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem322": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem322",
            "name": "rb_mem322",
            "offset": "0x542",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem323": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem323",
            "name": "rb_mem323",
            "offset": "0x543",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem324": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem324",
            "name": "rb_mem324",
            "offset": "0x544",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem325": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem325",
            "name": "rb_mem325",
            "offset": "0x545",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem326": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem326",
            "name": "rb_mem326",
            "offset": "0x546",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem327": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem327",
            "name": "rb_mem327",
            "offset": "0x547",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem328": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem328",
            "name": "rb_mem328",
            "offset": "0x548",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem329": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem329",
            "name": "rb_mem329",
            "offset": "0x549",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem330": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem330",
            "name": "rb_mem330",
            "offset": "0x54a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem331": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem331",
            "name": "rb_mem331",
            "offset": "0x54b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem332": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem332",
            "name": "rb_mem332",
            "offset": "0x54c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem333": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem333",
            "name": "rb_mem333",
            "offset": "0x54d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem334": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem334",
            "name": "rb_mem334",
            "offset": "0x54e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem335": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem335",
            "name": "rb_mem335",
            "offset": "0x54f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem336": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem336",
            "name": "rb_mem336",
            "offset": "0x550",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem337": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem337",
            "name": "rb_mem337",
            "offset": "0x551",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem338": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem338",
            "name": "rb_mem338",
            "offset": "0x552",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem339": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem339",
            "name": "rb_mem339",
            "offset": "0x553",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem340": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem340",
            "name": "rb_mem340",
            "offset": "0x554",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem341": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem341",
            "name": "rb_mem341",
            "offset": "0x555",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem342": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem342",
            "name": "rb_mem342",
            "offset": "0x556",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem343": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem343",
            "name": "rb_mem343",
            "offset": "0x557",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem344": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem344",
            "name": "rb_mem344",
            "offset": "0x558",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem345": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem345",
            "name": "rb_mem345",
            "offset": "0x559",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem346": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem346",
            "name": "rb_mem346",
            "offset": "0x55a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem347": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem347",
            "name": "rb_mem347",
            "offset": "0x55b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem348": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem348",
            "name": "rb_mem348",
            "offset": "0x55c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem349": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem349",
            "name": "rb_mem349",
            "offset": "0x55d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem350": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem350",
            "name": "rb_mem350",
            "offset": "0x55e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem351": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem351",
            "name": "rb_mem351",
            "offset": "0x55f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem352": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem352",
            "name": "rb_mem352",
            "offset": "0x560",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem353": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem353",
            "name": "rb_mem353",
            "offset": "0x561",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem354": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem354",
            "name": "rb_mem354",
            "offset": "0x562",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem355": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem355",
            "name": "rb_mem355",
            "offset": "0x563",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem356": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem356",
            "name": "rb_mem356",
            "offset": "0x564",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem357": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem357",
            "name": "rb_mem357",
            "offset": "0x565",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem358": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem358",
            "name": "rb_mem358",
            "offset": "0x566",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem359": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem359",
            "name": "rb_mem359",
            "offset": "0x567",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem360": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem360",
            "name": "rb_mem360",
            "offset": "0x568",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem361": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem361",
            "name": "rb_mem361",
            "offset": "0x569",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem362": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem362",
            "name": "rb_mem362",
            "offset": "0x56a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem363": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem363",
            "name": "rb_mem363",
            "offset": "0x56b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem364": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem364",
            "name": "rb_mem364",
            "offset": "0x56c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem365": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem365",
            "name": "rb_mem365",
            "offset": "0x56d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem366": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem366",
            "name": "rb_mem366",
            "offset": "0x56e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem367": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem367",
            "name": "rb_mem367",
            "offset": "0x56f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem368": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem368",
            "name": "rb_mem368",
            "offset": "0x570",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem369": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem369",
            "name": "rb_mem369",
            "offset": "0x571",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem370": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem370",
            "name": "rb_mem370",
            "offset": "0x572",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem371": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem371",
            "name": "rb_mem371",
            "offset": "0x573",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem372": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem372",
            "name": "rb_mem372",
            "offset": "0x574",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem373": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem373",
            "name": "rb_mem373",
            "offset": "0x575",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem374": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem374",
            "name": "rb_mem374",
            "offset": "0x576",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem375": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem375",
            "name": "rb_mem375",
            "offset": "0x577",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem376": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem376",
            "name": "rb_mem376",
            "offset": "0x578",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem377": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem377",
            "name": "rb_mem377",
            "offset": "0x579",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem378": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem378",
            "name": "rb_mem378",
            "offset": "0x57a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem379": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem379",
            "name": "rb_mem379",
            "offset": "0x57b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem380": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem380",
            "name": "rb_mem380",
            "offset": "0x57c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem381": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem381",
            "name": "rb_mem381",
            "offset": "0x57d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem382": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem382",
            "name": "rb_mem382",
            "offset": "0x57e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem383": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem383",
            "name": "rb_mem383",
            "offset": "0x57f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem384": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem384",
            "name": "rb_mem384",
            "offset": "0x580",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem385": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem385",
            "name": "rb_mem385",
            "offset": "0x581",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem386": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem386",
            "name": "rb_mem386",
            "offset": "0x582",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem387": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem387",
            "name": "rb_mem387",
            "offset": "0x583",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem388": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem388",
            "name": "rb_mem388",
            "offset": "0x584",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem389": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem389",
            "name": "rb_mem389",
            "offset": "0x585",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem390": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem390",
            "name": "rb_mem390",
            "offset": "0x586",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem391": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem391",
            "name": "rb_mem391",
            "offset": "0x587",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem392": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem392",
            "name": "rb_mem392",
            "offset": "0x588",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem393": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem393",
            "name": "rb_mem393",
            "offset": "0x589",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem394": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem394",
            "name": "rb_mem394",
            "offset": "0x58a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem395": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem395",
            "name": "rb_mem395",
            "offset": "0x58b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem396": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem396",
            "name": "rb_mem396",
            "offset": "0x58c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem397": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem397",
            "name": "rb_mem397",
            "offset": "0x58d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem398": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem398",
            "name": "rb_mem398",
            "offset": "0x58e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem399": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem399",
            "name": "rb_mem399",
            "offset": "0x58f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem400": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem400",
            "name": "rb_mem400",
            "offset": "0x590",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem401": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem401",
            "name": "rb_mem401",
            "offset": "0x591",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem402": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem402",
            "name": "rb_mem402",
            "offset": "0x592",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem403": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem403",
            "name": "rb_mem403",
            "offset": "0x593",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem404": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem404",
            "name": "rb_mem404",
            "offset": "0x594",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem405": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem405",
            "name": "rb_mem405",
            "offset": "0x595",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem406": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem406",
            "name": "rb_mem406",
            "offset": "0x596",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem407": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem407",
            "name": "rb_mem407",
            "offset": "0x597",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem408": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem408",
            "name": "rb_mem408",
            "offset": "0x598",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem409": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem409",
            "name": "rb_mem409",
            "offset": "0x599",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem410": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem410",
            "name": "rb_mem410",
            "offset": "0x59a",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem411": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem411",
            "name": "rb_mem411",
            "offset": "0x59b",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem412": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem412",
            "name": "rb_mem412",
            "offset": "0x59c",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem413": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem413",
            "name": "rb_mem413",
            "offset": "0x59d",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem414": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem414",
            "name": "rb_mem414",
            "offset": "0x59e",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem415": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem415",
            "name": "rb_mem415",
            "offset": "0x59f",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem416": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem416",
            "name": "rb_mem416",
            "offset": "0x5a0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem417": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem417",
            "name": "rb_mem417",
            "offset": "0x5a1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem418": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem418",
            "name": "rb_mem418",
            "offset": "0x5a2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem419": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem419",
            "name": "rb_mem419",
            "offset": "0x5a3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem420": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem420",
            "name": "rb_mem420",
            "offset": "0x5a4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem421": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem421",
            "name": "rb_mem421",
            "offset": "0x5a5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem422": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem422",
            "name": "rb_mem422",
            "offset": "0x5a6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem423": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem423",
            "name": "rb_mem423",
            "offset": "0x5a7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem424": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem424",
            "name": "rb_mem424",
            "offset": "0x5a8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem425": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem425",
            "name": "rb_mem425",
            "offset": "0x5a9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem426": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem426",
            "name": "rb_mem426",
            "offset": "0x5aa",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem427": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem427",
            "name": "rb_mem427",
            "offset": "0x5ab",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem428": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem428",
            "name": "rb_mem428",
            "offset": "0x5ac",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem429": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem429",
            "name": "rb_mem429",
            "offset": "0x5ad",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem430": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem430",
            "name": "rb_mem430",
            "offset": "0x5ae",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem431": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem431",
            "name": "rb_mem431",
            "offset": "0x5af",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem432": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem432",
            "name": "rb_mem432",
            "offset": "0x5b0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem433": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem433",
            "name": "rb_mem433",
            "offset": "0x5b1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem434": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem434",
            "name": "rb_mem434",
            "offset": "0x5b2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem435": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem435",
            "name": "rb_mem435",
            "offset": "0x5b3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem436": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem436",
            "name": "rb_mem436",
            "offset": "0x5b4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem437": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem437",
            "name": "rb_mem437",
            "offset": "0x5b5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem438": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem438",
            "name": "rb_mem438",
            "offset": "0x5b6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem439": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem439",
            "name": "rb_mem439",
            "offset": "0x5b7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem440": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem440",
            "name": "rb_mem440",
            "offset": "0x5b8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem441": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem441",
            "name": "rb_mem441",
            "offset": "0x5b9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem442": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem442",
            "name": "rb_mem442",
            "offset": "0x5ba",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem443": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem443",
            "name": "rb_mem443",
            "offset": "0x5bb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem444": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem444",
            "name": "rb_mem444",
            "offset": "0x5bc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem445": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem445",
            "name": "rb_mem445",
            "offset": "0x5bd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem446": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem446",
            "name": "rb_mem446",
            "offset": "0x5be",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem447": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem447",
            "name": "rb_mem447",
            "offset": "0x5bf",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem448": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem448",
            "name": "rb_mem448",
            "offset": "0x5c0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem449": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem449",
            "name": "rb_mem449",
            "offset": "0x5c1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem450": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem450",
            "name": "rb_mem450",
            "offset": "0x5c2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem451": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem451",
            "name": "rb_mem451",
            "offset": "0x5c3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem452": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem452",
            "name": "rb_mem452",
            "offset": "0x5c4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem453": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem453",
            "name": "rb_mem453",
            "offset": "0x5c5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem454": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem454",
            "name": "rb_mem454",
            "offset": "0x5c6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem455": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem455",
            "name": "rb_mem455",
            "offset": "0x5c7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem456": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem456",
            "name": "rb_mem456",
            "offset": "0x5c8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem457": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem457",
            "name": "rb_mem457",
            "offset": "0x5c9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem458": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem458",
            "name": "rb_mem458",
            "offset": "0x5ca",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem459": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem459",
            "name": "rb_mem459",
            "offset": "0x5cb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem460": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem460",
            "name": "rb_mem460",
            "offset": "0x5cc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem461": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem461",
            "name": "rb_mem461",
            "offset": "0x5cd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem462": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem462",
            "name": "rb_mem462",
            "offset": "0x5ce",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem463": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem463",
            "name": "rb_mem463",
            "offset": "0x5cf",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem464": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem464",
            "name": "rb_mem464",
            "offset": "0x5d0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem465": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem465",
            "name": "rb_mem465",
            "offset": "0x5d1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem466": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem466",
            "name": "rb_mem466",
            "offset": "0x5d2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem467": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem467",
            "name": "rb_mem467",
            "offset": "0x5d3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem468": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem468",
            "name": "rb_mem468",
            "offset": "0x5d4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem469": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem469",
            "name": "rb_mem469",
            "offset": "0x5d5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem470": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem470",
            "name": "rb_mem470",
            "offset": "0x5d6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem471": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem471",
            "name": "rb_mem471",
            "offset": "0x5d7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem472": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem472",
            "name": "rb_mem472",
            "offset": "0x5d8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem473": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem473",
            "name": "rb_mem473",
            "offset": "0x5d9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem474": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem474",
            "name": "rb_mem474",
            "offset": "0x5da",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem475": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem475",
            "name": "rb_mem475",
            "offset": "0x5db",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem476": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem476",
            "name": "rb_mem476",
            "offset": "0x5dc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem477": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem477",
            "name": "rb_mem477",
            "offset": "0x5dd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem478": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem478",
            "name": "rb_mem478",
            "offset": "0x5de",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem479": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem479",
            "name": "rb_mem479",
            "offset": "0x5df",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem480": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem480",
            "name": "rb_mem480",
            "offset": "0x5e0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem481": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem481",
            "name": "rb_mem481",
            "offset": "0x5e1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem482": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem482",
            "name": "rb_mem482",
            "offset": "0x5e2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem483": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem483",
            "name": "rb_mem483",
            "offset": "0x5e3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem484": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem484",
            "name": "rb_mem484",
            "offset": "0x5e4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem485": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem485",
            "name": "rb_mem485",
            "offset": "0x5e5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem486": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem486",
            "name": "rb_mem486",
            "offset": "0x5e6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem487": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem487",
            "name": "rb_mem487",
            "offset": "0x5e7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem488": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem488",
            "name": "rb_mem488",
            "offset": "0x5e8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem489": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem489",
            "name": "rb_mem489",
            "offset": "0x5e9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem490": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem490",
            "name": "rb_mem490",
            "offset": "0x5ea",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem491": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem491",
            "name": "rb_mem491",
            "offset": "0x5eb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem492": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem492",
            "name": "rb_mem492",
            "offset": "0x5ec",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem493": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem493",
            "name": "rb_mem493",
            "offset": "0x5ed",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem494": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem494",
            "name": "rb_mem494",
            "offset": "0x5ee",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem495": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem495",
            "name": "rb_mem495",
            "offset": "0x5ef",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem496": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem496",
            "name": "rb_mem496",
            "offset": "0x5f0",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem497": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem497",
            "name": "rb_mem497",
            "offset": "0x5f1",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem498": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem498",
            "name": "rb_mem498",
            "offset": "0x5f2",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem499": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem499",
            "name": "rb_mem499",
            "offset": "0x5f3",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem500": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem500",
            "name": "rb_mem500",
            "offset": "0x5f4",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem501": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem501",
            "name": "rb_mem501",
            "offset": "0x5f5",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem502": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem502",
            "name": "rb_mem502",
            "offset": "0x5f6",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem503": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem503",
            "name": "rb_mem503",
            "offset": "0x5f7",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem504": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem504",
            "name": "rb_mem504",
            "offset": "0x5f8",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem505": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem505",
            "name": "rb_mem505",
            "offset": "0x5f9",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem506": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem506",
            "name": "rb_mem506",
            "offset": "0x5fa",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem507": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem507",
            "name": "rb_mem507",
            "offset": "0x5fb",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem508": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem508",
            "name": "rb_mem508",
            "offset": "0x5fc",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem509": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem509",
            "name": "rb_mem509",
            "offset": "0x5fd",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem510": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem510",
            "name": "rb_mem510",
            "offset": "0x5fe",
            "doc": "memory that stores Rb"
        },
        "ds.rb_mem511": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.rb_mem511",
            "name": "rb_mem511",
            "offset": "0x5ff",
            "doc": "memory that stores Rb"
        },
        "ds.box_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem0",
            "name": "box_mem0",
            "offset": "0x600",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem1",
            "name": "box_mem1",
            "offset": "0x601",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem2",
            "name": "box_mem2",
            "offset": "0x602",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem3",
            "name": "box_mem3",
            "offset": "0x603",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem4",
            "name": "box_mem4",
            "offset": "0x604",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem5",
            "name": "box_mem5",
            "offset": "0x605",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem6",
            "name": "box_mem6",
            "offset": "0x606",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem7",
            "name": "box_mem7",
            "offset": "0x607",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem8",
            "name": "box_mem8",
            "offset": "0x608",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem9",
            "name": "box_mem9",
            "offset": "0x609",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem10",
            "name": "box_mem10",
            "offset": "0x60a",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem11",
            "name": "box_mem11",
            "offset": "0x60b",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem12",
            "name": "box_mem12",
            "offset": "0x60c",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem13",
            "name": "box_mem13",
            "offset": "0x60d",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem14",
            "name": "box_mem14",
            "offset": "0x60e",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem15",
            "name": "box_mem15",
            "offset": "0x60f",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem16",
            "name": "box_mem16",
            "offset": "0x610",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem17",
            "name": "box_mem17",
            "offset": "0x611",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem18",
            "name": "box_mem18",
            "offset": "0x612",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem19",
            "name": "box_mem19",
            "offset": "0x613",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem20",
            "name": "box_mem20",
            "offset": "0x614",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem21",
            "name": "box_mem21",
            "offset": "0x615",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem22",
            "name": "box_mem22",
            "offset": "0x616",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem23",
            "name": "box_mem23",
            "offset": "0x617",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem24",
            "name": "box_mem24",
            "offset": "0x618",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem25",
            "name": "box_mem25",
            "offset": "0x619",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem26",
            "name": "box_mem26",
            "offset": "0x61a",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem27",
            "name": "box_mem27",
            "offset": "0x61b",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem28",
            "name": "box_mem28",
            "offset": "0x61c",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem29",
            "name": "box_mem29",
            "offset": "0x61d",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem30",
            "name": "box_mem30",
            "offset": "0x61e",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem31",
            "name": "box_mem31",
            "offset": "0x61f",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem32",
            "name": "box_mem32",
            "offset": "0x620",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem33",
            "name": "box_mem33",
            "offset": "0x621",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem34",
            "name": "box_mem34",
            "offset": "0x622",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem35",
            "name": "box_mem35",
            "offset": "0x623",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem36",
            "name": "box_mem36",
            "offset": "0x624",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem37",
            "name": "box_mem37",
            "offset": "0x625",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem38",
            "name": "box_mem38",
            "offset": "0x626",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem39",
            "name": "box_mem39",
            "offset": "0x627",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem40",
            "name": "box_mem40",
            "offset": "0x628",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem41",
            "name": "box_mem41",
            "offset": "0x629",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem42",
            "name": "box_mem42",
            "offset": "0x62a",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem43",
            "name": "box_mem43",
            "offset": "0x62b",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem44",
            "name": "box_mem44",
            "offset": "0x62c",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem45",
            "name": "box_mem45",
            "offset": "0x62d",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem46",
            "name": "box_mem46",
            "offset": "0x62e",
            "doc": "memory that stores BOX"
        },
        "ds.box_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.box_mem47",
            "name": "box_mem47",
            "offset": "0x62f",
            "doc": "memory that stores BOX"
        },
        "ds.x_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem0",
            "name": "x_mem0",
            "offset": "0x800",
            "doc": "memory that stores X"
        },
        "ds.x_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem1",
            "name": "x_mem1",
            "offset": "0x801",
            "doc": "memory that stores X"
        },
        "ds.x_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem2",
            "name": "x_mem2",
            "offset": "0x802",
            "doc": "memory that stores X"
        },
        "ds.x_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem3",
            "name": "x_mem3",
            "offset": "0x803",
            "doc": "memory that stores X"
        },
        "ds.x_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem4",
            "name": "x_mem4",
            "offset": "0x804",
            "doc": "memory that stores X"
        },
        "ds.x_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem5",
            "name": "x_mem5",
            "offset": "0x805",
            "doc": "memory that stores X"
        },
        "ds.x_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem6",
            "name": "x_mem6",
            "offset": "0x806",
            "doc": "memory that stores X"
        },
        "ds.x_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem7",
            "name": "x_mem7",
            "offset": "0x807",
            "doc": "memory that stores X"
        },
        "ds.x_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem8",
            "name": "x_mem8",
            "offset": "0x808",
            "doc": "memory that stores X"
        },
        "ds.x_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem9",
            "name": "x_mem9",
            "offset": "0x809",
            "doc": "memory that stores X"
        },
        "ds.x_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem10",
            "name": "x_mem10",
            "offset": "0x80a",
            "doc": "memory that stores X"
        },
        "ds.x_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem11",
            "name": "x_mem11",
            "offset": "0x80b",
            "doc": "memory that stores X"
        },
        "ds.x_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem12",
            "name": "x_mem12",
            "offset": "0x80c",
            "doc": "memory that stores X"
        },
        "ds.x_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem13",
            "name": "x_mem13",
            "offset": "0x80d",
            "doc": "memory that stores X"
        },
        "ds.x_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem14",
            "name": "x_mem14",
            "offset": "0x80e",
            "doc": "memory that stores X"
        },
        "ds.x_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem15",
            "name": "x_mem15",
            "offset": "0x80f",
            "doc": "memory that stores X"
        },
        "ds.x_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem16",
            "name": "x_mem16",
            "offset": "0x810",
            "doc": "memory that stores X"
        },
        "ds.x_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem17",
            "name": "x_mem17",
            "offset": "0x811",
            "doc": "memory that stores X"
        },
        "ds.x_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem18",
            "name": "x_mem18",
            "offset": "0x812",
            "doc": "memory that stores X"
        },
        "ds.x_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem19",
            "name": "x_mem19",
            "offset": "0x813",
            "doc": "memory that stores X"
        },
        "ds.x_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem20",
            "name": "x_mem20",
            "offset": "0x814",
            "doc": "memory that stores X"
        },
        "ds.x_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem21",
            "name": "x_mem21",
            "offset": "0x815",
            "doc": "memory that stores X"
        },
        "ds.x_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem22",
            "name": "x_mem22",
            "offset": "0x816",
            "doc": "memory that stores X"
        },
        "ds.x_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem23",
            "name": "x_mem23",
            "offset": "0x817",
            "doc": "memory that stores X"
        },
        "ds.x_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem24",
            "name": "x_mem24",
            "offset": "0x818",
            "doc": "memory that stores X"
        },
        "ds.x_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem25",
            "name": "x_mem25",
            "offset": "0x819",
            "doc": "memory that stores X"
        },
        "ds.x_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem26",
            "name": "x_mem26",
            "offset": "0x81a",
            "doc": "memory that stores X"
        },
        "ds.x_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem27",
            "name": "x_mem27",
            "offset": "0x81b",
            "doc": "memory that stores X"
        },
        "ds.x_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem28",
            "name": "x_mem28",
            "offset": "0x81c",
            "doc": "memory that stores X"
        },
        "ds.x_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem29",
            "name": "x_mem29",
            "offset": "0x81d",
            "doc": "memory that stores X"
        },
        "ds.x_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem30",
            "name": "x_mem30",
            "offset": "0x81e",
            "doc": "memory that stores X"
        },
        "ds.x_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem31",
            "name": "x_mem31",
            "offset": "0x81f",
            "doc": "memory that stores X"
        },
        "ds.x_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem32",
            "name": "x_mem32",
            "offset": "0x820",
            "doc": "memory that stores X"
        },
        "ds.x_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem33",
            "name": "x_mem33",
            "offset": "0x821",
            "doc": "memory that stores X"
        },
        "ds.x_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem34",
            "name": "x_mem34",
            "offset": "0x822",
            "doc": "memory that stores X"
        },
        "ds.x_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem35",
            "name": "x_mem35",
            "offset": "0x823",
            "doc": "memory that stores X"
        },
        "ds.x_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem36",
            "name": "x_mem36",
            "offset": "0x824",
            "doc": "memory that stores X"
        },
        "ds.x_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem37",
            "name": "x_mem37",
            "offset": "0x825",
            "doc": "memory that stores X"
        },
        "ds.x_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem38",
            "name": "x_mem38",
            "offset": "0x826",
            "doc": "memory that stores X"
        },
        "ds.x_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem39",
            "name": "x_mem39",
            "offset": "0x827",
            "doc": "memory that stores X"
        },
        "ds.x_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem40",
            "name": "x_mem40",
            "offset": "0x828",
            "doc": "memory that stores X"
        },
        "ds.x_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem41",
            "name": "x_mem41",
            "offset": "0x829",
            "doc": "memory that stores X"
        },
        "ds.x_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem42",
            "name": "x_mem42",
            "offset": "0x82a",
            "doc": "memory that stores X"
        },
        "ds.x_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem43",
            "name": "x_mem43",
            "offset": "0x82b",
            "doc": "memory that stores X"
        },
        "ds.x_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem44",
            "name": "x_mem44",
            "offset": "0x82c",
            "doc": "memory that stores X"
        },
        "ds.x_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem45",
            "name": "x_mem45",
            "offset": "0x82d",
            "doc": "memory that stores X"
        },
        "ds.x_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem46",
            "name": "x_mem46",
            "offset": "0x82e",
            "doc": "memory that stores X"
        },
        "ds.x_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem47",
            "name": "x_mem47",
            "offset": "0x82f",
            "doc": "memory that stores X"
        },
        "ds.x_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem48",
            "name": "x_mem48",
            "offset": "0x830",
            "doc": "memory that stores X"
        },
        "ds.x_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem49",
            "name": "x_mem49",
            "offset": "0x831",
            "doc": "memory that stores X"
        },
        "ds.x_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem50",
            "name": "x_mem50",
            "offset": "0x832",
            "doc": "memory that stores X"
        },
        "ds.x_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem51",
            "name": "x_mem51",
            "offset": "0x833",
            "doc": "memory that stores X"
        },
        "ds.x_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem52",
            "name": "x_mem52",
            "offset": "0x834",
            "doc": "memory that stores X"
        },
        "ds.x_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem53",
            "name": "x_mem53",
            "offset": "0x835",
            "doc": "memory that stores X"
        },
        "ds.x_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem54",
            "name": "x_mem54",
            "offset": "0x836",
            "doc": "memory that stores X"
        },
        "ds.x_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem55",
            "name": "x_mem55",
            "offset": "0x837",
            "doc": "memory that stores X"
        },
        "ds.x_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem56",
            "name": "x_mem56",
            "offset": "0x838",
            "doc": "memory that stores X"
        },
        "ds.x_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem57",
            "name": "x_mem57",
            "offset": "0x839",
            "doc": "memory that stores X"
        },
        "ds.x_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem58",
            "name": "x_mem58",
            "offset": "0x83a",
            "doc": "memory that stores X"
        },
        "ds.x_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem59",
            "name": "x_mem59",
            "offset": "0x83b",
            "doc": "memory that stores X"
        },
        "ds.x_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem60",
            "name": "x_mem60",
            "offset": "0x83c",
            "doc": "memory that stores X"
        },
        "ds.x_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem61",
            "name": "x_mem61",
            "offset": "0x83d",
            "doc": "memory that stores X"
        },
        "ds.x_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem62",
            "name": "x_mem62",
            "offset": "0x83e",
            "doc": "memory that stores X"
        },
        "ds.x_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem63",
            "name": "x_mem63",
            "offset": "0x83f",
            "doc": "memory that stores X"
        },
        "ds.x_mem64": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem64",
            "name": "x_mem64",
            "offset": "0x840",
            "doc": "memory that stores X"
        },
        "ds.x_mem65": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem65",
            "name": "x_mem65",
            "offset": "0x841",
            "doc": "memory that stores X"
        },
        "ds.x_mem66": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem66",
            "name": "x_mem66",
            "offset": "0x842",
            "doc": "memory that stores X"
        },
        "ds.x_mem67": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem67",
            "name": "x_mem67",
            "offset": "0x843",
            "doc": "memory that stores X"
        },
        "ds.x_mem68": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem68",
            "name": "x_mem68",
            "offset": "0x844",
            "doc": "memory that stores X"
        },
        "ds.x_mem69": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem69",
            "name": "x_mem69",
            "offset": "0x845",
            "doc": "memory that stores X"
        },
        "ds.x_mem70": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem70",
            "name": "x_mem70",
            "offset": "0x846",
            "doc": "memory that stores X"
        },
        "ds.x_mem71": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem71",
            "name": "x_mem71",
            "offset": "0x847",
            "doc": "memory that stores X"
        },
        "ds.x_mem72": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem72",
            "name": "x_mem72",
            "offset": "0x848",
            "doc": "memory that stores X"
        },
        "ds.x_mem73": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem73",
            "name": "x_mem73",
            "offset": "0x849",
            "doc": "memory that stores X"
        },
        "ds.x_mem74": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem74",
            "name": "x_mem74",
            "offset": "0x84a",
            "doc": "memory that stores X"
        },
        "ds.x_mem75": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem75",
            "name": "x_mem75",
            "offset": "0x84b",
            "doc": "memory that stores X"
        },
        "ds.x_mem76": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem76",
            "name": "x_mem76",
            "offset": "0x84c",
            "doc": "memory that stores X"
        },
        "ds.x_mem77": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem77",
            "name": "x_mem77",
            "offset": "0x84d",
            "doc": "memory that stores X"
        },
        "ds.x_mem78": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem78",
            "name": "x_mem78",
            "offset": "0x84e",
            "doc": "memory that stores X"
        },
        "ds.x_mem79": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem79",
            "name": "x_mem79",
            "offset": "0x84f",
            "doc": "memory that stores X"
        },
        "ds.x_mem80": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem80",
            "name": "x_mem80",
            "offset": "0x850",
            "doc": "memory that stores X"
        },
        "ds.x_mem81": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem81",
            "name": "x_mem81",
            "offset": "0x851",
            "doc": "memory that stores X"
        },
        "ds.x_mem82": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem82",
            "name": "x_mem82",
            "offset": "0x852",
            "doc": "memory that stores X"
        },
        "ds.x_mem83": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem83",
            "name": "x_mem83",
            "offset": "0x853",
            "doc": "memory that stores X"
        },
        "ds.x_mem84": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem84",
            "name": "x_mem84",
            "offset": "0x854",
            "doc": "memory that stores X"
        },
        "ds.x_mem85": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem85",
            "name": "x_mem85",
            "offset": "0x855",
            "doc": "memory that stores X"
        },
        "ds.x_mem86": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem86",
            "name": "x_mem86",
            "offset": "0x856",
            "doc": "memory that stores X"
        },
        "ds.x_mem87": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem87",
            "name": "x_mem87",
            "offset": "0x857",
            "doc": "memory that stores X"
        },
        "ds.x_mem88": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem88",
            "name": "x_mem88",
            "offset": "0x858",
            "doc": "memory that stores X"
        },
        "ds.x_mem89": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem89",
            "name": "x_mem89",
            "offset": "0x859",
            "doc": "memory that stores X"
        },
        "ds.x_mem90": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem90",
            "name": "x_mem90",
            "offset": "0x85a",
            "doc": "memory that stores X"
        },
        "ds.x_mem91": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem91",
            "name": "x_mem91",
            "offset": "0x85b",
            "doc": "memory that stores X"
        },
        "ds.x_mem92": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem92",
            "name": "x_mem92",
            "offset": "0x85c",
            "doc": "memory that stores X"
        },
        "ds.x_mem93": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem93",
            "name": "x_mem93",
            "offset": "0x85d",
            "doc": "memory that stores X"
        },
        "ds.x_mem94": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem94",
            "name": "x_mem94",
            "offset": "0x85e",
            "doc": "memory that stores X"
        },
        "ds.x_mem95": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem95",
            "name": "x_mem95",
            "offset": "0x85f",
            "doc": "memory that stores X"
        },
        "ds.x_mem96": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem96",
            "name": "x_mem96",
            "offset": "0x860",
            "doc": "memory that stores X"
        },
        "ds.x_mem97": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem97",
            "name": "x_mem97",
            "offset": "0x861",
            "doc": "memory that stores X"
        },
        "ds.x_mem98": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem98",
            "name": "x_mem98",
            "offset": "0x862",
            "doc": "memory that stores X"
        },
        "ds.x_mem99": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem99",
            "name": "x_mem99",
            "offset": "0x863",
            "doc": "memory that stores X"
        },
        "ds.x_mem100": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem100",
            "name": "x_mem100",
            "offset": "0x864",
            "doc": "memory that stores X"
        },
        "ds.x_mem101": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem101",
            "name": "x_mem101",
            "offset": "0x865",
            "doc": "memory that stores X"
        },
        "ds.x_mem102": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem102",
            "name": "x_mem102",
            "offset": "0x866",
            "doc": "memory that stores X"
        },
        "ds.x_mem103": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem103",
            "name": "x_mem103",
            "offset": "0x867",
            "doc": "memory that stores X"
        },
        "ds.x_mem104": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem104",
            "name": "x_mem104",
            "offset": "0x868",
            "doc": "memory that stores X"
        },
        "ds.x_mem105": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem105",
            "name": "x_mem105",
            "offset": "0x869",
            "doc": "memory that stores X"
        },
        "ds.x_mem106": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem106",
            "name": "x_mem106",
            "offset": "0x86a",
            "doc": "memory that stores X"
        },
        "ds.x_mem107": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem107",
            "name": "x_mem107",
            "offset": "0x86b",
            "doc": "memory that stores X"
        },
        "ds.x_mem108": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem108",
            "name": "x_mem108",
            "offset": "0x86c",
            "doc": "memory that stores X"
        },
        "ds.x_mem109": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem109",
            "name": "x_mem109",
            "offset": "0x86d",
            "doc": "memory that stores X"
        },
        "ds.x_mem110": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem110",
            "name": "x_mem110",
            "offset": "0x86e",
            "doc": "memory that stores X"
        },
        "ds.x_mem111": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem111",
            "name": "x_mem111",
            "offset": "0x86f",
            "doc": "memory that stores X"
        },
        "ds.x_mem112": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem112",
            "name": "x_mem112",
            "offset": "0x870",
            "doc": "memory that stores X"
        },
        "ds.x_mem113": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem113",
            "name": "x_mem113",
            "offset": "0x871",
            "doc": "memory that stores X"
        },
        "ds.x_mem114": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem114",
            "name": "x_mem114",
            "offset": "0x872",
            "doc": "memory that stores X"
        },
        "ds.x_mem115": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem115",
            "name": "x_mem115",
            "offset": "0x873",
            "doc": "memory that stores X"
        },
        "ds.x_mem116": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem116",
            "name": "x_mem116",
            "offset": "0x874",
            "doc": "memory that stores X"
        },
        "ds.x_mem117": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem117",
            "name": "x_mem117",
            "offset": "0x875",
            "doc": "memory that stores X"
        },
        "ds.x_mem118": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem118",
            "name": "x_mem118",
            "offset": "0x876",
            "doc": "memory that stores X"
        },
        "ds.x_mem119": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem119",
            "name": "x_mem119",
            "offset": "0x877",
            "doc": "memory that stores X"
        },
        "ds.x_mem120": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem120",
            "name": "x_mem120",
            "offset": "0x878",
            "doc": "memory that stores X"
        },
        "ds.x_mem121": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem121",
            "name": "x_mem121",
            "offset": "0x879",
            "doc": "memory that stores X"
        },
        "ds.x_mem122": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem122",
            "name": "x_mem122",
            "offset": "0x87a",
            "doc": "memory that stores X"
        },
        "ds.x_mem123": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem123",
            "name": "x_mem123",
            "offset": "0x87b",
            "doc": "memory that stores X"
        },
        "ds.x_mem124": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem124",
            "name": "x_mem124",
            "offset": "0x87c",
            "doc": "memory that stores X"
        },
        "ds.x_mem125": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem125",
            "name": "x_mem125",
            "offset": "0x87d",
            "doc": "memory that stores X"
        },
        "ds.x_mem126": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem126",
            "name": "x_mem126",
            "offset": "0x87e",
            "doc": "memory that stores X"
        },
        "ds.x_mem127": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem127",
            "name": "x_mem127",
            "offset": "0x87f",
            "doc": "memory that stores X"
        },
        "ds.x_mem128": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem128",
            "name": "x_mem128",
            "offset": "0x880",
            "doc": "memory that stores X"
        },
        "ds.x_mem129": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem129",
            "name": "x_mem129",
            "offset": "0x881",
            "doc": "memory that stores X"
        },
        "ds.x_mem130": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem130",
            "name": "x_mem130",
            "offset": "0x882",
            "doc": "memory that stores X"
        },
        "ds.x_mem131": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem131",
            "name": "x_mem131",
            "offset": "0x883",
            "doc": "memory that stores X"
        },
        "ds.x_mem132": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem132",
            "name": "x_mem132",
            "offset": "0x884",
            "doc": "memory that stores X"
        },
        "ds.x_mem133": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem133",
            "name": "x_mem133",
            "offset": "0x885",
            "doc": "memory that stores X"
        },
        "ds.x_mem134": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem134",
            "name": "x_mem134",
            "offset": "0x886",
            "doc": "memory that stores X"
        },
        "ds.x_mem135": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem135",
            "name": "x_mem135",
            "offset": "0x887",
            "doc": "memory that stores X"
        },
        "ds.x_mem136": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem136",
            "name": "x_mem136",
            "offset": "0x888",
            "doc": "memory that stores X"
        },
        "ds.x_mem137": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem137",
            "name": "x_mem137",
            "offset": "0x889",
            "doc": "memory that stores X"
        },
        "ds.x_mem138": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem138",
            "name": "x_mem138",
            "offset": "0x88a",
            "doc": "memory that stores X"
        },
        "ds.x_mem139": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem139",
            "name": "x_mem139",
            "offset": "0x88b",
            "doc": "memory that stores X"
        },
        "ds.x_mem140": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem140",
            "name": "x_mem140",
            "offset": "0x88c",
            "doc": "memory that stores X"
        },
        "ds.x_mem141": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem141",
            "name": "x_mem141",
            "offset": "0x88d",
            "doc": "memory that stores X"
        },
        "ds.x_mem142": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem142",
            "name": "x_mem142",
            "offset": "0x88e",
            "doc": "memory that stores X"
        },
        "ds.x_mem143": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem143",
            "name": "x_mem143",
            "offset": "0x88f",
            "doc": "memory that stores X"
        },
        "ds.x_mem144": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem144",
            "name": "x_mem144",
            "offset": "0x890",
            "doc": "memory that stores X"
        },
        "ds.x_mem145": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem145",
            "name": "x_mem145",
            "offset": "0x891",
            "doc": "memory that stores X"
        },
        "ds.x_mem146": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem146",
            "name": "x_mem146",
            "offset": "0x892",
            "doc": "memory that stores X"
        },
        "ds.x_mem147": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem147",
            "name": "x_mem147",
            "offset": "0x893",
            "doc": "memory that stores X"
        },
        "ds.x_mem148": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem148",
            "name": "x_mem148",
            "offset": "0x894",
            "doc": "memory that stores X"
        },
        "ds.x_mem149": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem149",
            "name": "x_mem149",
            "offset": "0x895",
            "doc": "memory that stores X"
        },
        "ds.x_mem150": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem150",
            "name": "x_mem150",
            "offset": "0x896",
            "doc": "memory that stores X"
        },
        "ds.x_mem151": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem151",
            "name": "x_mem151",
            "offset": "0x897",
            "doc": "memory that stores X"
        },
        "ds.x_mem152": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem152",
            "name": "x_mem152",
            "offset": "0x898",
            "doc": "memory that stores X"
        },
        "ds.x_mem153": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem153",
            "name": "x_mem153",
            "offset": "0x899",
            "doc": "memory that stores X"
        },
        "ds.x_mem154": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem154",
            "name": "x_mem154",
            "offset": "0x89a",
            "doc": "memory that stores X"
        },
        "ds.x_mem155": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem155",
            "name": "x_mem155",
            "offset": "0x89b",
            "doc": "memory that stores X"
        },
        "ds.x_mem156": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem156",
            "name": "x_mem156",
            "offset": "0x89c",
            "doc": "memory that stores X"
        },
        "ds.x_mem157": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem157",
            "name": "x_mem157",
            "offset": "0x89d",
            "doc": "memory that stores X"
        },
        "ds.x_mem158": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem158",
            "name": "x_mem158",
            "offset": "0x89e",
            "doc": "memory that stores X"
        },
        "ds.x_mem159": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem159",
            "name": "x_mem159",
            "offset": "0x89f",
            "doc": "memory that stores X"
        },
        "ds.x_mem160": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem160",
            "name": "x_mem160",
            "offset": "0x8a0",
            "doc": "memory that stores X"
        },
        "ds.x_mem161": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem161",
            "name": "x_mem161",
            "offset": "0x8a1",
            "doc": "memory that stores X"
        },
        "ds.x_mem162": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem162",
            "name": "x_mem162",
            "offset": "0x8a2",
            "doc": "memory that stores X"
        },
        "ds.x_mem163": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem163",
            "name": "x_mem163",
            "offset": "0x8a3",
            "doc": "memory that stores X"
        },
        "ds.x_mem164": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem164",
            "name": "x_mem164",
            "offset": "0x8a4",
            "doc": "memory that stores X"
        },
        "ds.x_mem165": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem165",
            "name": "x_mem165",
            "offset": "0x8a5",
            "doc": "memory that stores X"
        },
        "ds.x_mem166": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem166",
            "name": "x_mem166",
            "offset": "0x8a6",
            "doc": "memory that stores X"
        },
        "ds.x_mem167": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem167",
            "name": "x_mem167",
            "offset": "0x8a7",
            "doc": "memory that stores X"
        },
        "ds.x_mem168": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem168",
            "name": "x_mem168",
            "offset": "0x8a8",
            "doc": "memory that stores X"
        },
        "ds.x_mem169": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem169",
            "name": "x_mem169",
            "offset": "0x8a9",
            "doc": "memory that stores X"
        },
        "ds.x_mem170": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem170",
            "name": "x_mem170",
            "offset": "0x8aa",
            "doc": "memory that stores X"
        },
        "ds.x_mem171": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem171",
            "name": "x_mem171",
            "offset": "0x8ab",
            "doc": "memory that stores X"
        },
        "ds.x_mem172": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem172",
            "name": "x_mem172",
            "offset": "0x8ac",
            "doc": "memory that stores X"
        },
        "ds.x_mem173": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem173",
            "name": "x_mem173",
            "offset": "0x8ad",
            "doc": "memory that stores X"
        },
        "ds.x_mem174": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem174",
            "name": "x_mem174",
            "offset": "0x8ae",
            "doc": "memory that stores X"
        },
        "ds.x_mem175": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem175",
            "name": "x_mem175",
            "offset": "0x8af",
            "doc": "memory that stores X"
        },
        "ds.x_mem176": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem176",
            "name": "x_mem176",
            "offset": "0x8b0",
            "doc": "memory that stores X"
        },
        "ds.x_mem177": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem177",
            "name": "x_mem177",
            "offset": "0x8b1",
            "doc": "memory that stores X"
        },
        "ds.x_mem178": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem178",
            "name": "x_mem178",
            "offset": "0x8b2",
            "doc": "memory that stores X"
        },
        "ds.x_mem179": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem179",
            "name": "x_mem179",
            "offset": "0x8b3",
            "doc": "memory that stores X"
        },
        "ds.x_mem180": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem180",
            "name": "x_mem180",
            "offset": "0x8b4",
            "doc": "memory that stores X"
        },
        "ds.x_mem181": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem181",
            "name": "x_mem181",
            "offset": "0x8b5",
            "doc": "memory that stores X"
        },
        "ds.x_mem182": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem182",
            "name": "x_mem182",
            "offset": "0x8b6",
            "doc": "memory that stores X"
        },
        "ds.x_mem183": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem183",
            "name": "x_mem183",
            "offset": "0x8b7",
            "doc": "memory that stores X"
        },
        "ds.x_mem184": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem184",
            "name": "x_mem184",
            "offset": "0x8b8",
            "doc": "memory that stores X"
        },
        "ds.x_mem185": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem185",
            "name": "x_mem185",
            "offset": "0x8b9",
            "doc": "memory that stores X"
        },
        "ds.x_mem186": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem186",
            "name": "x_mem186",
            "offset": "0x8ba",
            "doc": "memory that stores X"
        },
        "ds.x_mem187": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem187",
            "name": "x_mem187",
            "offset": "0x8bb",
            "doc": "memory that stores X"
        },
        "ds.x_mem188": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem188",
            "name": "x_mem188",
            "offset": "0x8bc",
            "doc": "memory that stores X"
        },
        "ds.x_mem189": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem189",
            "name": "x_mem189",
            "offset": "0x8bd",
            "doc": "memory that stores X"
        },
        "ds.x_mem190": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem190",
            "name": "x_mem190",
            "offset": "0x8be",
            "doc": "memory that stores X"
        },
        "ds.x_mem191": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem191",
            "name": "x_mem191",
            "offset": "0x8bf",
            "doc": "memory that stores X"
        },
        "ds.x_mem192": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem192",
            "name": "x_mem192",
            "offset": "0x8c0",
            "doc": "memory that stores X"
        },
        "ds.x_mem193": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem193",
            "name": "x_mem193",
            "offset": "0x8c1",
            "doc": "memory that stores X"
        },
        "ds.x_mem194": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem194",
            "name": "x_mem194",
            "offset": "0x8c2",
            "doc": "memory that stores X"
        },
        "ds.x_mem195": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem195",
            "name": "x_mem195",
            "offset": "0x8c3",
            "doc": "memory that stores X"
        },
        "ds.x_mem196": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem196",
            "name": "x_mem196",
            "offset": "0x8c4",
            "doc": "memory that stores X"
        },
        "ds.x_mem197": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem197",
            "name": "x_mem197",
            "offset": "0x8c5",
            "doc": "memory that stores X"
        },
        "ds.x_mem198": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem198",
            "name": "x_mem198",
            "offset": "0x8c6",
            "doc": "memory that stores X"
        },
        "ds.x_mem199": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem199",
            "name": "x_mem199",
            "offset": "0x8c7",
            "doc": "memory that stores X"
        },
        "ds.x_mem200": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem200",
            "name": "x_mem200",
            "offset": "0x8c8",
            "doc": "memory that stores X"
        },
        "ds.x_mem201": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem201",
            "name": "x_mem201",
            "offset": "0x8c9",
            "doc": "memory that stores X"
        },
        "ds.x_mem202": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem202",
            "name": "x_mem202",
            "offset": "0x8ca",
            "doc": "memory that stores X"
        },
        "ds.x_mem203": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem203",
            "name": "x_mem203",
            "offset": "0x8cb",
            "doc": "memory that stores X"
        },
        "ds.x_mem204": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem204",
            "name": "x_mem204",
            "offset": "0x8cc",
            "doc": "memory that stores X"
        },
        "ds.x_mem205": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem205",
            "name": "x_mem205",
            "offset": "0x8cd",
            "doc": "memory that stores X"
        },
        "ds.x_mem206": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem206",
            "name": "x_mem206",
            "offset": "0x8ce",
            "doc": "memory that stores X"
        },
        "ds.x_mem207": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem207",
            "name": "x_mem207",
            "offset": "0x8cf",
            "doc": "memory that stores X"
        },
        "ds.x_mem208": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem208",
            "name": "x_mem208",
            "offset": "0x8d0",
            "doc": "memory that stores X"
        },
        "ds.x_mem209": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem209",
            "name": "x_mem209",
            "offset": "0x8d1",
            "doc": "memory that stores X"
        },
        "ds.x_mem210": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem210",
            "name": "x_mem210",
            "offset": "0x8d2",
            "doc": "memory that stores X"
        },
        "ds.x_mem211": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem211",
            "name": "x_mem211",
            "offset": "0x8d3",
            "doc": "memory that stores X"
        },
        "ds.x_mem212": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem212",
            "name": "x_mem212",
            "offset": "0x8d4",
            "doc": "memory that stores X"
        },
        "ds.x_mem213": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem213",
            "name": "x_mem213",
            "offset": "0x8d5",
            "doc": "memory that stores X"
        },
        "ds.x_mem214": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem214",
            "name": "x_mem214",
            "offset": "0x8d6",
            "doc": "memory that stores X"
        },
        "ds.x_mem215": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem215",
            "name": "x_mem215",
            "offset": "0x8d7",
            "doc": "memory that stores X"
        },
        "ds.x_mem216": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem216",
            "name": "x_mem216",
            "offset": "0x8d8",
            "doc": "memory that stores X"
        },
        "ds.x_mem217": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem217",
            "name": "x_mem217",
            "offset": "0x8d9",
            "doc": "memory that stores X"
        },
        "ds.x_mem218": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem218",
            "name": "x_mem218",
            "offset": "0x8da",
            "doc": "memory that stores X"
        },
        "ds.x_mem219": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem219",
            "name": "x_mem219",
            "offset": "0x8db",
            "doc": "memory that stores X"
        },
        "ds.x_mem220": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem220",
            "name": "x_mem220",
            "offset": "0x8dc",
            "doc": "memory that stores X"
        },
        "ds.x_mem221": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem221",
            "name": "x_mem221",
            "offset": "0x8dd",
            "doc": "memory that stores X"
        },
        "ds.x_mem222": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem222",
            "name": "x_mem222",
            "offset": "0x8de",
            "doc": "memory that stores X"
        },
        "ds.x_mem223": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem223",
            "name": "x_mem223",
            "offset": "0x8df",
            "doc": "memory that stores X"
        },
        "ds.x_mem224": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem224",
            "name": "x_mem224",
            "offset": "0x8e0",
            "doc": "memory that stores X"
        },
        "ds.x_mem225": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem225",
            "name": "x_mem225",
            "offset": "0x8e1",
            "doc": "memory that stores X"
        },
        "ds.x_mem226": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem226",
            "name": "x_mem226",
            "offset": "0x8e2",
            "doc": "memory that stores X"
        },
        "ds.x_mem227": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem227",
            "name": "x_mem227",
            "offset": "0x8e3",
            "doc": "memory that stores X"
        },
        "ds.x_mem228": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem228",
            "name": "x_mem228",
            "offset": "0x8e4",
            "doc": "memory that stores X"
        },
        "ds.x_mem229": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem229",
            "name": "x_mem229",
            "offset": "0x8e5",
            "doc": "memory that stores X"
        },
        "ds.x_mem230": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem230",
            "name": "x_mem230",
            "offset": "0x8e6",
            "doc": "memory that stores X"
        },
        "ds.x_mem231": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem231",
            "name": "x_mem231",
            "offset": "0x8e7",
            "doc": "memory that stores X"
        },
        "ds.x_mem232": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem232",
            "name": "x_mem232",
            "offset": "0x8e8",
            "doc": "memory that stores X"
        },
        "ds.x_mem233": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem233",
            "name": "x_mem233",
            "offset": "0x8e9",
            "doc": "memory that stores X"
        },
        "ds.x_mem234": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem234",
            "name": "x_mem234",
            "offset": "0x8ea",
            "doc": "memory that stores X"
        },
        "ds.x_mem235": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem235",
            "name": "x_mem235",
            "offset": "0x8eb",
            "doc": "memory that stores X"
        },
        "ds.x_mem236": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem236",
            "name": "x_mem236",
            "offset": "0x8ec",
            "doc": "memory that stores X"
        },
        "ds.x_mem237": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem237",
            "name": "x_mem237",
            "offset": "0x8ed",
            "doc": "memory that stores X"
        },
        "ds.x_mem238": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem238",
            "name": "x_mem238",
            "offset": "0x8ee",
            "doc": "memory that stores X"
        },
        "ds.x_mem239": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem239",
            "name": "x_mem239",
            "offset": "0x8ef",
            "doc": "memory that stores X"
        },
        "ds.x_mem240": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem240",
            "name": "x_mem240",
            "offset": "0x8f0",
            "doc": "memory that stores X"
        },
        "ds.x_mem241": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem241",
            "name": "x_mem241",
            "offset": "0x8f1",
            "doc": "memory that stores X"
        },
        "ds.x_mem242": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem242",
            "name": "x_mem242",
            "offset": "0x8f2",
            "doc": "memory that stores X"
        },
        "ds.x_mem243": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem243",
            "name": "x_mem243",
            "offset": "0x8f3",
            "doc": "memory that stores X"
        },
        "ds.x_mem244": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem244",
            "name": "x_mem244",
            "offset": "0x8f4",
            "doc": "memory that stores X"
        },
        "ds.x_mem245": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem245",
            "name": "x_mem245",
            "offset": "0x8f5",
            "doc": "memory that stores X"
        },
        "ds.x_mem246": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem246",
            "name": "x_mem246",
            "offset": "0x8f6",
            "doc": "memory that stores X"
        },
        "ds.x_mem247": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem247",
            "name": "x_mem247",
            "offset": "0x8f7",
            "doc": "memory that stores X"
        },
        "ds.x_mem248": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem248",
            "name": "x_mem248",
            "offset": "0x8f8",
            "doc": "memory that stores X"
        },
        "ds.x_mem249": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem249",
            "name": "x_mem249",
            "offset": "0x8f9",
            "doc": "memory that stores X"
        },
        "ds.x_mem250": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem250",
            "name": "x_mem250",
            "offset": "0x8fa",
            "doc": "memory that stores X"
        },
        "ds.x_mem251": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem251",
            "name": "x_mem251",
            "offset": "0x8fb",
            "doc": "memory that stores X"
        },
        "ds.x_mem252": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem252",
            "name": "x_mem252",
            "offset": "0x8fc",
            "doc": "memory that stores X"
        },
        "ds.x_mem253": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem253",
            "name": "x_mem253",
            "offset": "0x8fd",
            "doc": "memory that stores X"
        },
        "ds.x_mem254": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem254",
            "name": "x_mem254",
            "offset": "0x8fe",
            "doc": "memory that stores X"
        },
        "ds.x_mem255": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem255",
            "name": "x_mem255",
            "offset": "0x8ff",
            "doc": "memory that stores X"
        },
        "ds.x_mem256": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem256",
            "name": "x_mem256",
            "offset": "0x900",
            "doc": "memory that stores X"
        },
        "ds.x_mem257": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem257",
            "name": "x_mem257",
            "offset": "0x901",
            "doc": "memory that stores X"
        },
        "ds.x_mem258": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem258",
            "name": "x_mem258",
            "offset": "0x902",
            "doc": "memory that stores X"
        },
        "ds.x_mem259": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem259",
            "name": "x_mem259",
            "offset": "0x903",
            "doc": "memory that stores X"
        },
        "ds.x_mem260": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem260",
            "name": "x_mem260",
            "offset": "0x904",
            "doc": "memory that stores X"
        },
        "ds.x_mem261": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem261",
            "name": "x_mem261",
            "offset": "0x905",
            "doc": "memory that stores X"
        },
        "ds.x_mem262": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem262",
            "name": "x_mem262",
            "offset": "0x906",
            "doc": "memory that stores X"
        },
        "ds.x_mem263": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem263",
            "name": "x_mem263",
            "offset": "0x907",
            "doc": "memory that stores X"
        },
        "ds.x_mem264": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem264",
            "name": "x_mem264",
            "offset": "0x908",
            "doc": "memory that stores X"
        },
        "ds.x_mem265": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem265",
            "name": "x_mem265",
            "offset": "0x909",
            "doc": "memory that stores X"
        },
        "ds.x_mem266": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem266",
            "name": "x_mem266",
            "offset": "0x90a",
            "doc": "memory that stores X"
        },
        "ds.x_mem267": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem267",
            "name": "x_mem267",
            "offset": "0x90b",
            "doc": "memory that stores X"
        },
        "ds.x_mem268": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem268",
            "name": "x_mem268",
            "offset": "0x90c",
            "doc": "memory that stores X"
        },
        "ds.x_mem269": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem269",
            "name": "x_mem269",
            "offset": "0x90d",
            "doc": "memory that stores X"
        },
        "ds.x_mem270": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem270",
            "name": "x_mem270",
            "offset": "0x90e",
            "doc": "memory that stores X"
        },
        "ds.x_mem271": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem271",
            "name": "x_mem271",
            "offset": "0x90f",
            "doc": "memory that stores X"
        },
        "ds.x_mem272": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem272",
            "name": "x_mem272",
            "offset": "0x910",
            "doc": "memory that stores X"
        },
        "ds.x_mem273": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem273",
            "name": "x_mem273",
            "offset": "0x911",
            "doc": "memory that stores X"
        },
        "ds.x_mem274": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem274",
            "name": "x_mem274",
            "offset": "0x912",
            "doc": "memory that stores X"
        },
        "ds.x_mem275": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem275",
            "name": "x_mem275",
            "offset": "0x913",
            "doc": "memory that stores X"
        },
        "ds.x_mem276": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem276",
            "name": "x_mem276",
            "offset": "0x914",
            "doc": "memory that stores X"
        },
        "ds.x_mem277": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem277",
            "name": "x_mem277",
            "offset": "0x915",
            "doc": "memory that stores X"
        },
        "ds.x_mem278": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem278",
            "name": "x_mem278",
            "offset": "0x916",
            "doc": "memory that stores X"
        },
        "ds.x_mem279": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem279",
            "name": "x_mem279",
            "offset": "0x917",
            "doc": "memory that stores X"
        },
        "ds.x_mem280": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem280",
            "name": "x_mem280",
            "offset": "0x918",
            "doc": "memory that stores X"
        },
        "ds.x_mem281": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem281",
            "name": "x_mem281",
            "offset": "0x919",
            "doc": "memory that stores X"
        },
        "ds.x_mem282": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem282",
            "name": "x_mem282",
            "offset": "0x91a",
            "doc": "memory that stores X"
        },
        "ds.x_mem283": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem283",
            "name": "x_mem283",
            "offset": "0x91b",
            "doc": "memory that stores X"
        },
        "ds.x_mem284": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem284",
            "name": "x_mem284",
            "offset": "0x91c",
            "doc": "memory that stores X"
        },
        "ds.x_mem285": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem285",
            "name": "x_mem285",
            "offset": "0x91d",
            "doc": "memory that stores X"
        },
        "ds.x_mem286": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem286",
            "name": "x_mem286",
            "offset": "0x91e",
            "doc": "memory that stores X"
        },
        "ds.x_mem287": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem287",
            "name": "x_mem287",
            "offset": "0x91f",
            "doc": "memory that stores X"
        },
        "ds.x_mem288": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem288",
            "name": "x_mem288",
            "offset": "0x920",
            "doc": "memory that stores X"
        },
        "ds.x_mem289": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem289",
            "name": "x_mem289",
            "offset": "0x921",
            "doc": "memory that stores X"
        },
        "ds.x_mem290": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem290",
            "name": "x_mem290",
            "offset": "0x922",
            "doc": "memory that stores X"
        },
        "ds.x_mem291": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem291",
            "name": "x_mem291",
            "offset": "0x923",
            "doc": "memory that stores X"
        },
        "ds.x_mem292": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem292",
            "name": "x_mem292",
            "offset": "0x924",
            "doc": "memory that stores X"
        },
        "ds.x_mem293": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem293",
            "name": "x_mem293",
            "offset": "0x925",
            "doc": "memory that stores X"
        },
        "ds.x_mem294": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem294",
            "name": "x_mem294",
            "offset": "0x926",
            "doc": "memory that stores X"
        },
        "ds.x_mem295": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem295",
            "name": "x_mem295",
            "offset": "0x927",
            "doc": "memory that stores X"
        },
        "ds.x_mem296": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem296",
            "name": "x_mem296",
            "offset": "0x928",
            "doc": "memory that stores X"
        },
        "ds.x_mem297": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem297",
            "name": "x_mem297",
            "offset": "0x929",
            "doc": "memory that stores X"
        },
        "ds.x_mem298": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem298",
            "name": "x_mem298",
            "offset": "0x92a",
            "doc": "memory that stores X"
        },
        "ds.x_mem299": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem299",
            "name": "x_mem299",
            "offset": "0x92b",
            "doc": "memory that stores X"
        },
        "ds.x_mem300": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem300",
            "name": "x_mem300",
            "offset": "0x92c",
            "doc": "memory that stores X"
        },
        "ds.x_mem301": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem301",
            "name": "x_mem301",
            "offset": "0x92d",
            "doc": "memory that stores X"
        },
        "ds.x_mem302": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem302",
            "name": "x_mem302",
            "offset": "0x92e",
            "doc": "memory that stores X"
        },
        "ds.x_mem303": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem303",
            "name": "x_mem303",
            "offset": "0x92f",
            "doc": "memory that stores X"
        },
        "ds.x_mem304": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem304",
            "name": "x_mem304",
            "offset": "0x930",
            "doc": "memory that stores X"
        },
        "ds.x_mem305": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem305",
            "name": "x_mem305",
            "offset": "0x931",
            "doc": "memory that stores X"
        },
        "ds.x_mem306": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem306",
            "name": "x_mem306",
            "offset": "0x932",
            "doc": "memory that stores X"
        },
        "ds.x_mem307": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem307",
            "name": "x_mem307",
            "offset": "0x933",
            "doc": "memory that stores X"
        },
        "ds.x_mem308": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem308",
            "name": "x_mem308",
            "offset": "0x934",
            "doc": "memory that stores X"
        },
        "ds.x_mem309": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem309",
            "name": "x_mem309",
            "offset": "0x935",
            "doc": "memory that stores X"
        },
        "ds.x_mem310": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem310",
            "name": "x_mem310",
            "offset": "0x936",
            "doc": "memory that stores X"
        },
        "ds.x_mem311": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem311",
            "name": "x_mem311",
            "offset": "0x937",
            "doc": "memory that stores X"
        },
        "ds.x_mem312": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem312",
            "name": "x_mem312",
            "offset": "0x938",
            "doc": "memory that stores X"
        },
        "ds.x_mem313": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem313",
            "name": "x_mem313",
            "offset": "0x939",
            "doc": "memory that stores X"
        },
        "ds.x_mem314": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem314",
            "name": "x_mem314",
            "offset": "0x93a",
            "doc": "memory that stores X"
        },
        "ds.x_mem315": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem315",
            "name": "x_mem315",
            "offset": "0x93b",
            "doc": "memory that stores X"
        },
        "ds.x_mem316": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem316",
            "name": "x_mem316",
            "offset": "0x93c",
            "doc": "memory that stores X"
        },
        "ds.x_mem317": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem317",
            "name": "x_mem317",
            "offset": "0x93d",
            "doc": "memory that stores X"
        },
        "ds.x_mem318": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem318",
            "name": "x_mem318",
            "offset": "0x93e",
            "doc": "memory that stores X"
        },
        "ds.x_mem319": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem319",
            "name": "x_mem319",
            "offset": "0x93f",
            "doc": "memory that stores X"
        },
        "ds.x_mem320": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem320",
            "name": "x_mem320",
            "offset": "0x940",
            "doc": "memory that stores X"
        },
        "ds.x_mem321": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem321",
            "name": "x_mem321",
            "offset": "0x941",
            "doc": "memory that stores X"
        },
        "ds.x_mem322": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem322",
            "name": "x_mem322",
            "offset": "0x942",
            "doc": "memory that stores X"
        },
        "ds.x_mem323": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem323",
            "name": "x_mem323",
            "offset": "0x943",
            "doc": "memory that stores X"
        },
        "ds.x_mem324": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem324",
            "name": "x_mem324",
            "offset": "0x944",
            "doc": "memory that stores X"
        },
        "ds.x_mem325": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem325",
            "name": "x_mem325",
            "offset": "0x945",
            "doc": "memory that stores X"
        },
        "ds.x_mem326": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem326",
            "name": "x_mem326",
            "offset": "0x946",
            "doc": "memory that stores X"
        },
        "ds.x_mem327": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem327",
            "name": "x_mem327",
            "offset": "0x947",
            "doc": "memory that stores X"
        },
        "ds.x_mem328": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem328",
            "name": "x_mem328",
            "offset": "0x948",
            "doc": "memory that stores X"
        },
        "ds.x_mem329": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem329",
            "name": "x_mem329",
            "offset": "0x949",
            "doc": "memory that stores X"
        },
        "ds.x_mem330": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem330",
            "name": "x_mem330",
            "offset": "0x94a",
            "doc": "memory that stores X"
        },
        "ds.x_mem331": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem331",
            "name": "x_mem331",
            "offset": "0x94b",
            "doc": "memory that stores X"
        },
        "ds.x_mem332": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem332",
            "name": "x_mem332",
            "offset": "0x94c",
            "doc": "memory that stores X"
        },
        "ds.x_mem333": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem333",
            "name": "x_mem333",
            "offset": "0x94d",
            "doc": "memory that stores X"
        },
        "ds.x_mem334": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem334",
            "name": "x_mem334",
            "offset": "0x94e",
            "doc": "memory that stores X"
        },
        "ds.x_mem335": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem335",
            "name": "x_mem335",
            "offset": "0x94f",
            "doc": "memory that stores X"
        },
        "ds.x_mem336": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem336",
            "name": "x_mem336",
            "offset": "0x950",
            "doc": "memory that stores X"
        },
        "ds.x_mem337": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem337",
            "name": "x_mem337",
            "offset": "0x951",
            "doc": "memory that stores X"
        },
        "ds.x_mem338": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem338",
            "name": "x_mem338",
            "offset": "0x952",
            "doc": "memory that stores X"
        },
        "ds.x_mem339": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem339",
            "name": "x_mem339",
            "offset": "0x953",
            "doc": "memory that stores X"
        },
        "ds.x_mem340": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem340",
            "name": "x_mem340",
            "offset": "0x954",
            "doc": "memory that stores X"
        },
        "ds.x_mem341": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem341",
            "name": "x_mem341",
            "offset": "0x955",
            "doc": "memory that stores X"
        },
        "ds.x_mem342": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem342",
            "name": "x_mem342",
            "offset": "0x956",
            "doc": "memory that stores X"
        },
        "ds.x_mem343": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem343",
            "name": "x_mem343",
            "offset": "0x957",
            "doc": "memory that stores X"
        },
        "ds.x_mem344": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem344",
            "name": "x_mem344",
            "offset": "0x958",
            "doc": "memory that stores X"
        },
        "ds.x_mem345": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem345",
            "name": "x_mem345",
            "offset": "0x959",
            "doc": "memory that stores X"
        },
        "ds.x_mem346": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem346",
            "name": "x_mem346",
            "offset": "0x95a",
            "doc": "memory that stores X"
        },
        "ds.x_mem347": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem347",
            "name": "x_mem347",
            "offset": "0x95b",
            "doc": "memory that stores X"
        },
        "ds.x_mem348": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem348",
            "name": "x_mem348",
            "offset": "0x95c",
            "doc": "memory that stores X"
        },
        "ds.x_mem349": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem349",
            "name": "x_mem349",
            "offset": "0x95d",
            "doc": "memory that stores X"
        },
        "ds.x_mem350": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem350",
            "name": "x_mem350",
            "offset": "0x95e",
            "doc": "memory that stores X"
        },
        "ds.x_mem351": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem351",
            "name": "x_mem351",
            "offset": "0x95f",
            "doc": "memory that stores X"
        },
        "ds.x_mem352": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem352",
            "name": "x_mem352",
            "offset": "0x960",
            "doc": "memory that stores X"
        },
        "ds.x_mem353": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem353",
            "name": "x_mem353",
            "offset": "0x961",
            "doc": "memory that stores X"
        },
        "ds.x_mem354": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem354",
            "name": "x_mem354",
            "offset": "0x962",
            "doc": "memory that stores X"
        },
        "ds.x_mem355": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem355",
            "name": "x_mem355",
            "offset": "0x963",
            "doc": "memory that stores X"
        },
        "ds.x_mem356": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem356",
            "name": "x_mem356",
            "offset": "0x964",
            "doc": "memory that stores X"
        },
        "ds.x_mem357": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem357",
            "name": "x_mem357",
            "offset": "0x965",
            "doc": "memory that stores X"
        },
        "ds.x_mem358": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem358",
            "name": "x_mem358",
            "offset": "0x966",
            "doc": "memory that stores X"
        },
        "ds.x_mem359": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem359",
            "name": "x_mem359",
            "offset": "0x967",
            "doc": "memory that stores X"
        },
        "ds.x_mem360": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem360",
            "name": "x_mem360",
            "offset": "0x968",
            "doc": "memory that stores X"
        },
        "ds.x_mem361": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem361",
            "name": "x_mem361",
            "offset": "0x969",
            "doc": "memory that stores X"
        },
        "ds.x_mem362": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem362",
            "name": "x_mem362",
            "offset": "0x96a",
            "doc": "memory that stores X"
        },
        "ds.x_mem363": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem363",
            "name": "x_mem363",
            "offset": "0x96b",
            "doc": "memory that stores X"
        },
        "ds.x_mem364": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem364",
            "name": "x_mem364",
            "offset": "0x96c",
            "doc": "memory that stores X"
        },
        "ds.x_mem365": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem365",
            "name": "x_mem365",
            "offset": "0x96d",
            "doc": "memory that stores X"
        },
        "ds.x_mem366": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem366",
            "name": "x_mem366",
            "offset": "0x96e",
            "doc": "memory that stores X"
        },
        "ds.x_mem367": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem367",
            "name": "x_mem367",
            "offset": "0x96f",
            "doc": "memory that stores X"
        },
        "ds.x_mem368": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem368",
            "name": "x_mem368",
            "offset": "0x970",
            "doc": "memory that stores X"
        },
        "ds.x_mem369": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem369",
            "name": "x_mem369",
            "offset": "0x971",
            "doc": "memory that stores X"
        },
        "ds.x_mem370": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem370",
            "name": "x_mem370",
            "offset": "0x972",
            "doc": "memory that stores X"
        },
        "ds.x_mem371": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem371",
            "name": "x_mem371",
            "offset": "0x973",
            "doc": "memory that stores X"
        },
        "ds.x_mem372": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem372",
            "name": "x_mem372",
            "offset": "0x974",
            "doc": "memory that stores X"
        },
        "ds.x_mem373": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem373",
            "name": "x_mem373",
            "offset": "0x975",
            "doc": "memory that stores X"
        },
        "ds.x_mem374": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem374",
            "name": "x_mem374",
            "offset": "0x976",
            "doc": "memory that stores X"
        },
        "ds.x_mem375": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem375",
            "name": "x_mem375",
            "offset": "0x977",
            "doc": "memory that stores X"
        },
        "ds.x_mem376": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem376",
            "name": "x_mem376",
            "offset": "0x978",
            "doc": "memory that stores X"
        },
        "ds.x_mem377": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem377",
            "name": "x_mem377",
            "offset": "0x979",
            "doc": "memory that stores X"
        },
        "ds.x_mem378": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem378",
            "name": "x_mem378",
            "offset": "0x97a",
            "doc": "memory that stores X"
        },
        "ds.x_mem379": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem379",
            "name": "x_mem379",
            "offset": "0x97b",
            "doc": "memory that stores X"
        },
        "ds.x_mem380": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem380",
            "name": "x_mem380",
            "offset": "0x97c",
            "doc": "memory that stores X"
        },
        "ds.x_mem381": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem381",
            "name": "x_mem381",
            "offset": "0x97d",
            "doc": "memory that stores X"
        },
        "ds.x_mem382": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem382",
            "name": "x_mem382",
            "offset": "0x97e",
            "doc": "memory that stores X"
        },
        "ds.x_mem383": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem383",
            "name": "x_mem383",
            "offset": "0x97f",
            "doc": "memory that stores X"
        },
        "ds.x_mem384": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem384",
            "name": "x_mem384",
            "offset": "0x980",
            "doc": "memory that stores X"
        },
        "ds.x_mem385": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem385",
            "name": "x_mem385",
            "offset": "0x981",
            "doc": "memory that stores X"
        },
        "ds.x_mem386": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem386",
            "name": "x_mem386",
            "offset": "0x982",
            "doc": "memory that stores X"
        },
        "ds.x_mem387": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem387",
            "name": "x_mem387",
            "offset": "0x983",
            "doc": "memory that stores X"
        },
        "ds.x_mem388": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem388",
            "name": "x_mem388",
            "offset": "0x984",
            "doc": "memory that stores X"
        },
        "ds.x_mem389": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem389",
            "name": "x_mem389",
            "offset": "0x985",
            "doc": "memory that stores X"
        },
        "ds.x_mem390": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem390",
            "name": "x_mem390",
            "offset": "0x986",
            "doc": "memory that stores X"
        },
        "ds.x_mem391": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem391",
            "name": "x_mem391",
            "offset": "0x987",
            "doc": "memory that stores X"
        },
        "ds.x_mem392": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem392",
            "name": "x_mem392",
            "offset": "0x988",
            "doc": "memory that stores X"
        },
        "ds.x_mem393": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem393",
            "name": "x_mem393",
            "offset": "0x989",
            "doc": "memory that stores X"
        },
        "ds.x_mem394": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem394",
            "name": "x_mem394",
            "offset": "0x98a",
            "doc": "memory that stores X"
        },
        "ds.x_mem395": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem395",
            "name": "x_mem395",
            "offset": "0x98b",
            "doc": "memory that stores X"
        },
        "ds.x_mem396": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem396",
            "name": "x_mem396",
            "offset": "0x98c",
            "doc": "memory that stores X"
        },
        "ds.x_mem397": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem397",
            "name": "x_mem397",
            "offset": "0x98d",
            "doc": "memory that stores X"
        },
        "ds.x_mem398": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem398",
            "name": "x_mem398",
            "offset": "0x98e",
            "doc": "memory that stores X"
        },
        "ds.x_mem399": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem399",
            "name": "x_mem399",
            "offset": "0x98f",
            "doc": "memory that stores X"
        },
        "ds.x_mem400": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem400",
            "name": "x_mem400",
            "offset": "0x990",
            "doc": "memory that stores X"
        },
        "ds.x_mem401": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem401",
            "name": "x_mem401",
            "offset": "0x991",
            "doc": "memory that stores X"
        },
        "ds.x_mem402": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem402",
            "name": "x_mem402",
            "offset": "0x992",
            "doc": "memory that stores X"
        },
        "ds.x_mem403": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem403",
            "name": "x_mem403",
            "offset": "0x993",
            "doc": "memory that stores X"
        },
        "ds.x_mem404": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem404",
            "name": "x_mem404",
            "offset": "0x994",
            "doc": "memory that stores X"
        },
        "ds.x_mem405": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem405",
            "name": "x_mem405",
            "offset": "0x995",
            "doc": "memory that stores X"
        },
        "ds.x_mem406": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem406",
            "name": "x_mem406",
            "offset": "0x996",
            "doc": "memory that stores X"
        },
        "ds.x_mem407": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem407",
            "name": "x_mem407",
            "offset": "0x997",
            "doc": "memory that stores X"
        },
        "ds.x_mem408": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem408",
            "name": "x_mem408",
            "offset": "0x998",
            "doc": "memory that stores X"
        },
        "ds.x_mem409": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem409",
            "name": "x_mem409",
            "offset": "0x999",
            "doc": "memory that stores X"
        },
        "ds.x_mem410": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem410",
            "name": "x_mem410",
            "offset": "0x99a",
            "doc": "memory that stores X"
        },
        "ds.x_mem411": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem411",
            "name": "x_mem411",
            "offset": "0x99b",
            "doc": "memory that stores X"
        },
        "ds.x_mem412": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem412",
            "name": "x_mem412",
            "offset": "0x99c",
            "doc": "memory that stores X"
        },
        "ds.x_mem413": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem413",
            "name": "x_mem413",
            "offset": "0x99d",
            "doc": "memory that stores X"
        },
        "ds.x_mem414": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem414",
            "name": "x_mem414",
            "offset": "0x99e",
            "doc": "memory that stores X"
        },
        "ds.x_mem415": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem415",
            "name": "x_mem415",
            "offset": "0x99f",
            "doc": "memory that stores X"
        },
        "ds.x_mem416": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem416",
            "name": "x_mem416",
            "offset": "0x9a0",
            "doc": "memory that stores X"
        },
        "ds.x_mem417": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem417",
            "name": "x_mem417",
            "offset": "0x9a1",
            "doc": "memory that stores X"
        },
        "ds.x_mem418": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem418",
            "name": "x_mem418",
            "offset": "0x9a2",
            "doc": "memory that stores X"
        },
        "ds.x_mem419": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem419",
            "name": "x_mem419",
            "offset": "0x9a3",
            "doc": "memory that stores X"
        },
        "ds.x_mem420": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem420",
            "name": "x_mem420",
            "offset": "0x9a4",
            "doc": "memory that stores X"
        },
        "ds.x_mem421": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem421",
            "name": "x_mem421",
            "offset": "0x9a5",
            "doc": "memory that stores X"
        },
        "ds.x_mem422": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem422",
            "name": "x_mem422",
            "offset": "0x9a6",
            "doc": "memory that stores X"
        },
        "ds.x_mem423": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem423",
            "name": "x_mem423",
            "offset": "0x9a7",
            "doc": "memory that stores X"
        },
        "ds.x_mem424": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem424",
            "name": "x_mem424",
            "offset": "0x9a8",
            "doc": "memory that stores X"
        },
        "ds.x_mem425": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem425",
            "name": "x_mem425",
            "offset": "0x9a9",
            "doc": "memory that stores X"
        },
        "ds.x_mem426": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem426",
            "name": "x_mem426",
            "offset": "0x9aa",
            "doc": "memory that stores X"
        },
        "ds.x_mem427": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem427",
            "name": "x_mem427",
            "offset": "0x9ab",
            "doc": "memory that stores X"
        },
        "ds.x_mem428": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem428",
            "name": "x_mem428",
            "offset": "0x9ac",
            "doc": "memory that stores X"
        },
        "ds.x_mem429": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem429",
            "name": "x_mem429",
            "offset": "0x9ad",
            "doc": "memory that stores X"
        },
        "ds.x_mem430": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem430",
            "name": "x_mem430",
            "offset": "0x9ae",
            "doc": "memory that stores X"
        },
        "ds.x_mem431": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem431",
            "name": "x_mem431",
            "offset": "0x9af",
            "doc": "memory that stores X"
        },
        "ds.x_mem432": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem432",
            "name": "x_mem432",
            "offset": "0x9b0",
            "doc": "memory that stores X"
        },
        "ds.x_mem433": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem433",
            "name": "x_mem433",
            "offset": "0x9b1",
            "doc": "memory that stores X"
        },
        "ds.x_mem434": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem434",
            "name": "x_mem434",
            "offset": "0x9b2",
            "doc": "memory that stores X"
        },
        "ds.x_mem435": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem435",
            "name": "x_mem435",
            "offset": "0x9b3",
            "doc": "memory that stores X"
        },
        "ds.x_mem436": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem436",
            "name": "x_mem436",
            "offset": "0x9b4",
            "doc": "memory that stores X"
        },
        "ds.x_mem437": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem437",
            "name": "x_mem437",
            "offset": "0x9b5",
            "doc": "memory that stores X"
        },
        "ds.x_mem438": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem438",
            "name": "x_mem438",
            "offset": "0x9b6",
            "doc": "memory that stores X"
        },
        "ds.x_mem439": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem439",
            "name": "x_mem439",
            "offset": "0x9b7",
            "doc": "memory that stores X"
        },
        "ds.x_mem440": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem440",
            "name": "x_mem440",
            "offset": "0x9b8",
            "doc": "memory that stores X"
        },
        "ds.x_mem441": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem441",
            "name": "x_mem441",
            "offset": "0x9b9",
            "doc": "memory that stores X"
        },
        "ds.x_mem442": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem442",
            "name": "x_mem442",
            "offset": "0x9ba",
            "doc": "memory that stores X"
        },
        "ds.x_mem443": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem443",
            "name": "x_mem443",
            "offset": "0x9bb",
            "doc": "memory that stores X"
        },
        "ds.x_mem444": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem444",
            "name": "x_mem444",
            "offset": "0x9bc",
            "doc": "memory that stores X"
        },
        "ds.x_mem445": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem445",
            "name": "x_mem445",
            "offset": "0x9bd",
            "doc": "memory that stores X"
        },
        "ds.x_mem446": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem446",
            "name": "x_mem446",
            "offset": "0x9be",
            "doc": "memory that stores X"
        },
        "ds.x_mem447": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem447",
            "name": "x_mem447",
            "offset": "0x9bf",
            "doc": "memory that stores X"
        },
        "ds.x_mem448": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem448",
            "name": "x_mem448",
            "offset": "0x9c0",
            "doc": "memory that stores X"
        },
        "ds.x_mem449": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem449",
            "name": "x_mem449",
            "offset": "0x9c1",
            "doc": "memory that stores X"
        },
        "ds.x_mem450": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem450",
            "name": "x_mem450",
            "offset": "0x9c2",
            "doc": "memory that stores X"
        },
        "ds.x_mem451": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem451",
            "name": "x_mem451",
            "offset": "0x9c3",
            "doc": "memory that stores X"
        },
        "ds.x_mem452": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem452",
            "name": "x_mem452",
            "offset": "0x9c4",
            "doc": "memory that stores X"
        },
        "ds.x_mem453": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem453",
            "name": "x_mem453",
            "offset": "0x9c5",
            "doc": "memory that stores X"
        },
        "ds.x_mem454": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem454",
            "name": "x_mem454",
            "offset": "0x9c6",
            "doc": "memory that stores X"
        },
        "ds.x_mem455": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem455",
            "name": "x_mem455",
            "offset": "0x9c7",
            "doc": "memory that stores X"
        },
        "ds.x_mem456": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem456",
            "name": "x_mem456",
            "offset": "0x9c8",
            "doc": "memory that stores X"
        },
        "ds.x_mem457": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem457",
            "name": "x_mem457",
            "offset": "0x9c9",
            "doc": "memory that stores X"
        },
        "ds.x_mem458": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem458",
            "name": "x_mem458",
            "offset": "0x9ca",
            "doc": "memory that stores X"
        },
        "ds.x_mem459": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem459",
            "name": "x_mem459",
            "offset": "0x9cb",
            "doc": "memory that stores X"
        },
        "ds.x_mem460": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem460",
            "name": "x_mem460",
            "offset": "0x9cc",
            "doc": "memory that stores X"
        },
        "ds.x_mem461": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem461",
            "name": "x_mem461",
            "offset": "0x9cd",
            "doc": "memory that stores X"
        },
        "ds.x_mem462": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem462",
            "name": "x_mem462",
            "offset": "0x9ce",
            "doc": "memory that stores X"
        },
        "ds.x_mem463": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem463",
            "name": "x_mem463",
            "offset": "0x9cf",
            "doc": "memory that stores X"
        },
        "ds.x_mem464": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem464",
            "name": "x_mem464",
            "offset": "0x9d0",
            "doc": "memory that stores X"
        },
        "ds.x_mem465": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem465",
            "name": "x_mem465",
            "offset": "0x9d1",
            "doc": "memory that stores X"
        },
        "ds.x_mem466": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem466",
            "name": "x_mem466",
            "offset": "0x9d2",
            "doc": "memory that stores X"
        },
        "ds.x_mem467": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem467",
            "name": "x_mem467",
            "offset": "0x9d3",
            "doc": "memory that stores X"
        },
        "ds.x_mem468": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem468",
            "name": "x_mem468",
            "offset": "0x9d4",
            "doc": "memory that stores X"
        },
        "ds.x_mem469": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem469",
            "name": "x_mem469",
            "offset": "0x9d5",
            "doc": "memory that stores X"
        },
        "ds.x_mem470": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem470",
            "name": "x_mem470",
            "offset": "0x9d6",
            "doc": "memory that stores X"
        },
        "ds.x_mem471": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem471",
            "name": "x_mem471",
            "offset": "0x9d7",
            "doc": "memory that stores X"
        },
        "ds.x_mem472": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem472",
            "name": "x_mem472",
            "offset": "0x9d8",
            "doc": "memory that stores X"
        },
        "ds.x_mem473": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem473",
            "name": "x_mem473",
            "offset": "0x9d9",
            "doc": "memory that stores X"
        },
        "ds.x_mem474": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem474",
            "name": "x_mem474",
            "offset": "0x9da",
            "doc": "memory that stores X"
        },
        "ds.x_mem475": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem475",
            "name": "x_mem475",
            "offset": "0x9db",
            "doc": "memory that stores X"
        },
        "ds.x_mem476": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem476",
            "name": "x_mem476",
            "offset": "0x9dc",
            "doc": "memory that stores X"
        },
        "ds.x_mem477": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem477",
            "name": "x_mem477",
            "offset": "0x9dd",
            "doc": "memory that stores X"
        },
        "ds.x_mem478": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem478",
            "name": "x_mem478",
            "offset": "0x9de",
            "doc": "memory that stores X"
        },
        "ds.x_mem479": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem479",
            "name": "x_mem479",
            "offset": "0x9df",
            "doc": "memory that stores X"
        },
        "ds.x_mem480": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem480",
            "name": "x_mem480",
            "offset": "0x9e0",
            "doc": "memory that stores X"
        },
        "ds.x_mem481": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem481",
            "name": "x_mem481",
            "offset": "0x9e1",
            "doc": "memory that stores X"
        },
        "ds.x_mem482": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem482",
            "name": "x_mem482",
            "offset": "0x9e2",
            "doc": "memory that stores X"
        },
        "ds.x_mem483": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem483",
            "name": "x_mem483",
            "offset": "0x9e3",
            "doc": "memory that stores X"
        },
        "ds.x_mem484": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem484",
            "name": "x_mem484",
            "offset": "0x9e4",
            "doc": "memory that stores X"
        },
        "ds.x_mem485": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem485",
            "name": "x_mem485",
            "offset": "0x9e5",
            "doc": "memory that stores X"
        },
        "ds.x_mem486": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem486",
            "name": "x_mem486",
            "offset": "0x9e6",
            "doc": "memory that stores X"
        },
        "ds.x_mem487": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem487",
            "name": "x_mem487",
            "offset": "0x9e7",
            "doc": "memory that stores X"
        },
        "ds.x_mem488": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem488",
            "name": "x_mem488",
            "offset": "0x9e8",
            "doc": "memory that stores X"
        },
        "ds.x_mem489": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem489",
            "name": "x_mem489",
            "offset": "0x9e9",
            "doc": "memory that stores X"
        },
        "ds.x_mem490": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem490",
            "name": "x_mem490",
            "offset": "0x9ea",
            "doc": "memory that stores X"
        },
        "ds.x_mem491": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem491",
            "name": "x_mem491",
            "offset": "0x9eb",
            "doc": "memory that stores X"
        },
        "ds.x_mem492": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem492",
            "name": "x_mem492",
            "offset": "0x9ec",
            "doc": "memory that stores X"
        },
        "ds.x_mem493": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem493",
            "name": "x_mem493",
            "offset": "0x9ed",
            "doc": "memory that stores X"
        },
        "ds.x_mem494": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem494",
            "name": "x_mem494",
            "offset": "0x9ee",
            "doc": "memory that stores X"
        },
        "ds.x_mem495": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem495",
            "name": "x_mem495",
            "offset": "0x9ef",
            "doc": "memory that stores X"
        },
        "ds.x_mem496": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem496",
            "name": "x_mem496",
            "offset": "0x9f0",
            "doc": "memory that stores X"
        },
        "ds.x_mem497": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem497",
            "name": "x_mem497",
            "offset": "0x9f1",
            "doc": "memory that stores X"
        },
        "ds.x_mem498": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem498",
            "name": "x_mem498",
            "offset": "0x9f2",
            "doc": "memory that stores X"
        },
        "ds.x_mem499": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem499",
            "name": "x_mem499",
            "offset": "0x9f3",
            "doc": "memory that stores X"
        },
        "ds.x_mem500": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem500",
            "name": "x_mem500",
            "offset": "0x9f4",
            "doc": "memory that stores X"
        },
        "ds.x_mem501": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem501",
            "name": "x_mem501",
            "offset": "0x9f5",
            "doc": "memory that stores X"
        },
        "ds.x_mem502": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem502",
            "name": "x_mem502",
            "offset": "0x9f6",
            "doc": "memory that stores X"
        },
        "ds.x_mem503": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem503",
            "name": "x_mem503",
            "offset": "0x9f7",
            "doc": "memory that stores X"
        },
        "ds.x_mem504": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem504",
            "name": "x_mem504",
            "offset": "0x9f8",
            "doc": "memory that stores X"
        },
        "ds.x_mem505": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem505",
            "name": "x_mem505",
            "offset": "0x9f9",
            "doc": "memory that stores X"
        },
        "ds.x_mem506": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem506",
            "name": "x_mem506",
            "offset": "0x9fa",
            "doc": "memory that stores X"
        },
        "ds.x_mem507": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem507",
            "name": "x_mem507",
            "offset": "0x9fb",
            "doc": "memory that stores X"
        },
        "ds.x_mem508": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem508",
            "name": "x_mem508",
            "offset": "0x9fc",
            "doc": "memory that stores X"
        },
        "ds.x_mem509": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem509",
            "name": "x_mem509",
            "offset": "0x9fd",
            "doc": "memory that stores X"
        },
        "ds.x_mem510": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem510",
            "name": "x_mem510",
            "offset": "0x9fe",
            "doc": "memory that stores X"
        },
        "ds.x_mem511": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.x_mem511",
            "name": "x_mem511",
            "offset": "0x9ff",
            "doc": "memory that stores X"
        },
        "ds.z_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem0",
            "name": "z_mem0",
            "offset": "0xa00",
            "doc": "memory that stores Z"
        },
        "ds.z_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem1",
            "name": "z_mem1",
            "offset": "0xa01",
            "doc": "memory that stores Z"
        },
        "ds.z_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem2",
            "name": "z_mem2",
            "offset": "0xa02",
            "doc": "memory that stores Z"
        },
        "ds.z_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem3",
            "name": "z_mem3",
            "offset": "0xa03",
            "doc": "memory that stores Z"
        },
        "ds.z_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem4",
            "name": "z_mem4",
            "offset": "0xa04",
            "doc": "memory that stores Z"
        },
        "ds.z_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem5",
            "name": "z_mem5",
            "offset": "0xa05",
            "doc": "memory that stores Z"
        },
        "ds.z_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem6",
            "name": "z_mem6",
            "offset": "0xa06",
            "doc": "memory that stores Z"
        },
        "ds.z_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem7",
            "name": "z_mem7",
            "offset": "0xa07",
            "doc": "memory that stores Z"
        },
        "ds.z_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem8",
            "name": "z_mem8",
            "offset": "0xa08",
            "doc": "memory that stores Z"
        },
        "ds.z_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem9",
            "name": "z_mem9",
            "offset": "0xa09",
            "doc": "memory that stores Z"
        },
        "ds.z_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem10",
            "name": "z_mem10",
            "offset": "0xa0a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem11",
            "name": "z_mem11",
            "offset": "0xa0b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem12",
            "name": "z_mem12",
            "offset": "0xa0c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem13",
            "name": "z_mem13",
            "offset": "0xa0d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem14",
            "name": "z_mem14",
            "offset": "0xa0e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem15",
            "name": "z_mem15",
            "offset": "0xa0f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem16",
            "name": "z_mem16",
            "offset": "0xa10",
            "doc": "memory that stores Z"
        },
        "ds.z_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem17",
            "name": "z_mem17",
            "offset": "0xa11",
            "doc": "memory that stores Z"
        },
        "ds.z_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem18",
            "name": "z_mem18",
            "offset": "0xa12",
            "doc": "memory that stores Z"
        },
        "ds.z_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem19",
            "name": "z_mem19",
            "offset": "0xa13",
            "doc": "memory that stores Z"
        },
        "ds.z_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem20",
            "name": "z_mem20",
            "offset": "0xa14",
            "doc": "memory that stores Z"
        },
        "ds.z_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem21",
            "name": "z_mem21",
            "offset": "0xa15",
            "doc": "memory that stores Z"
        },
        "ds.z_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem22",
            "name": "z_mem22",
            "offset": "0xa16",
            "doc": "memory that stores Z"
        },
        "ds.z_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem23",
            "name": "z_mem23",
            "offset": "0xa17",
            "doc": "memory that stores Z"
        },
        "ds.z_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem24",
            "name": "z_mem24",
            "offset": "0xa18",
            "doc": "memory that stores Z"
        },
        "ds.z_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem25",
            "name": "z_mem25",
            "offset": "0xa19",
            "doc": "memory that stores Z"
        },
        "ds.z_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem26",
            "name": "z_mem26",
            "offset": "0xa1a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem27",
            "name": "z_mem27",
            "offset": "0xa1b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem28",
            "name": "z_mem28",
            "offset": "0xa1c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem29",
            "name": "z_mem29",
            "offset": "0xa1d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem30",
            "name": "z_mem30",
            "offset": "0xa1e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem31",
            "name": "z_mem31",
            "offset": "0xa1f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem32",
            "name": "z_mem32",
            "offset": "0xa20",
            "doc": "memory that stores Z"
        },
        "ds.z_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem33",
            "name": "z_mem33",
            "offset": "0xa21",
            "doc": "memory that stores Z"
        },
        "ds.z_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem34",
            "name": "z_mem34",
            "offset": "0xa22",
            "doc": "memory that stores Z"
        },
        "ds.z_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem35",
            "name": "z_mem35",
            "offset": "0xa23",
            "doc": "memory that stores Z"
        },
        "ds.z_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem36",
            "name": "z_mem36",
            "offset": "0xa24",
            "doc": "memory that stores Z"
        },
        "ds.z_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem37",
            "name": "z_mem37",
            "offset": "0xa25",
            "doc": "memory that stores Z"
        },
        "ds.z_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem38",
            "name": "z_mem38",
            "offset": "0xa26",
            "doc": "memory that stores Z"
        },
        "ds.z_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem39",
            "name": "z_mem39",
            "offset": "0xa27",
            "doc": "memory that stores Z"
        },
        "ds.z_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem40",
            "name": "z_mem40",
            "offset": "0xa28",
            "doc": "memory that stores Z"
        },
        "ds.z_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem41",
            "name": "z_mem41",
            "offset": "0xa29",
            "doc": "memory that stores Z"
        },
        "ds.z_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem42",
            "name": "z_mem42",
            "offset": "0xa2a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem43",
            "name": "z_mem43",
            "offset": "0xa2b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem44",
            "name": "z_mem44",
            "offset": "0xa2c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem45",
            "name": "z_mem45",
            "offset": "0xa2d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem46",
            "name": "z_mem46",
            "offset": "0xa2e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem47",
            "name": "z_mem47",
            "offset": "0xa2f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem48",
            "name": "z_mem48",
            "offset": "0xa30",
            "doc": "memory that stores Z"
        },
        "ds.z_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem49",
            "name": "z_mem49",
            "offset": "0xa31",
            "doc": "memory that stores Z"
        },
        "ds.z_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem50",
            "name": "z_mem50",
            "offset": "0xa32",
            "doc": "memory that stores Z"
        },
        "ds.z_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem51",
            "name": "z_mem51",
            "offset": "0xa33",
            "doc": "memory that stores Z"
        },
        "ds.z_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem52",
            "name": "z_mem52",
            "offset": "0xa34",
            "doc": "memory that stores Z"
        },
        "ds.z_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem53",
            "name": "z_mem53",
            "offset": "0xa35",
            "doc": "memory that stores Z"
        },
        "ds.z_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem54",
            "name": "z_mem54",
            "offset": "0xa36",
            "doc": "memory that stores Z"
        },
        "ds.z_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem55",
            "name": "z_mem55",
            "offset": "0xa37",
            "doc": "memory that stores Z"
        },
        "ds.z_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem56",
            "name": "z_mem56",
            "offset": "0xa38",
            "doc": "memory that stores Z"
        },
        "ds.z_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem57",
            "name": "z_mem57",
            "offset": "0xa39",
            "doc": "memory that stores Z"
        },
        "ds.z_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem58",
            "name": "z_mem58",
            "offset": "0xa3a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem59",
            "name": "z_mem59",
            "offset": "0xa3b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem60",
            "name": "z_mem60",
            "offset": "0xa3c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem61",
            "name": "z_mem61",
            "offset": "0xa3d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem62",
            "name": "z_mem62",
            "offset": "0xa3e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem63",
            "name": "z_mem63",
            "offset": "0xa3f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem64": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem64",
            "name": "z_mem64",
            "offset": "0xa40",
            "doc": "memory that stores Z"
        },
        "ds.z_mem65": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem65",
            "name": "z_mem65",
            "offset": "0xa41",
            "doc": "memory that stores Z"
        },
        "ds.z_mem66": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem66",
            "name": "z_mem66",
            "offset": "0xa42",
            "doc": "memory that stores Z"
        },
        "ds.z_mem67": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem67",
            "name": "z_mem67",
            "offset": "0xa43",
            "doc": "memory that stores Z"
        },
        "ds.z_mem68": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem68",
            "name": "z_mem68",
            "offset": "0xa44",
            "doc": "memory that stores Z"
        },
        "ds.z_mem69": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem69",
            "name": "z_mem69",
            "offset": "0xa45",
            "doc": "memory that stores Z"
        },
        "ds.z_mem70": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem70",
            "name": "z_mem70",
            "offset": "0xa46",
            "doc": "memory that stores Z"
        },
        "ds.z_mem71": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem71",
            "name": "z_mem71",
            "offset": "0xa47",
            "doc": "memory that stores Z"
        },
        "ds.z_mem72": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem72",
            "name": "z_mem72",
            "offset": "0xa48",
            "doc": "memory that stores Z"
        },
        "ds.z_mem73": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem73",
            "name": "z_mem73",
            "offset": "0xa49",
            "doc": "memory that stores Z"
        },
        "ds.z_mem74": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem74",
            "name": "z_mem74",
            "offset": "0xa4a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem75": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem75",
            "name": "z_mem75",
            "offset": "0xa4b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem76": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem76",
            "name": "z_mem76",
            "offset": "0xa4c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem77": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem77",
            "name": "z_mem77",
            "offset": "0xa4d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem78": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem78",
            "name": "z_mem78",
            "offset": "0xa4e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem79": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem79",
            "name": "z_mem79",
            "offset": "0xa4f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem80": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem80",
            "name": "z_mem80",
            "offset": "0xa50",
            "doc": "memory that stores Z"
        },
        "ds.z_mem81": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem81",
            "name": "z_mem81",
            "offset": "0xa51",
            "doc": "memory that stores Z"
        },
        "ds.z_mem82": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem82",
            "name": "z_mem82",
            "offset": "0xa52",
            "doc": "memory that stores Z"
        },
        "ds.z_mem83": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem83",
            "name": "z_mem83",
            "offset": "0xa53",
            "doc": "memory that stores Z"
        },
        "ds.z_mem84": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem84",
            "name": "z_mem84",
            "offset": "0xa54",
            "doc": "memory that stores Z"
        },
        "ds.z_mem85": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem85",
            "name": "z_mem85",
            "offset": "0xa55",
            "doc": "memory that stores Z"
        },
        "ds.z_mem86": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem86",
            "name": "z_mem86",
            "offset": "0xa56",
            "doc": "memory that stores Z"
        },
        "ds.z_mem87": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem87",
            "name": "z_mem87",
            "offset": "0xa57",
            "doc": "memory that stores Z"
        },
        "ds.z_mem88": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem88",
            "name": "z_mem88",
            "offset": "0xa58",
            "doc": "memory that stores Z"
        },
        "ds.z_mem89": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem89",
            "name": "z_mem89",
            "offset": "0xa59",
            "doc": "memory that stores Z"
        },
        "ds.z_mem90": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem90",
            "name": "z_mem90",
            "offset": "0xa5a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem91": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem91",
            "name": "z_mem91",
            "offset": "0xa5b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem92": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem92",
            "name": "z_mem92",
            "offset": "0xa5c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem93": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem93",
            "name": "z_mem93",
            "offset": "0xa5d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem94": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem94",
            "name": "z_mem94",
            "offset": "0xa5e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem95": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem95",
            "name": "z_mem95",
            "offset": "0xa5f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem96": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem96",
            "name": "z_mem96",
            "offset": "0xa60",
            "doc": "memory that stores Z"
        },
        "ds.z_mem97": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem97",
            "name": "z_mem97",
            "offset": "0xa61",
            "doc": "memory that stores Z"
        },
        "ds.z_mem98": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem98",
            "name": "z_mem98",
            "offset": "0xa62",
            "doc": "memory that stores Z"
        },
        "ds.z_mem99": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem99",
            "name": "z_mem99",
            "offset": "0xa63",
            "doc": "memory that stores Z"
        },
        "ds.z_mem100": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem100",
            "name": "z_mem100",
            "offset": "0xa64",
            "doc": "memory that stores Z"
        },
        "ds.z_mem101": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem101",
            "name": "z_mem101",
            "offset": "0xa65",
            "doc": "memory that stores Z"
        },
        "ds.z_mem102": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem102",
            "name": "z_mem102",
            "offset": "0xa66",
            "doc": "memory that stores Z"
        },
        "ds.z_mem103": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem103",
            "name": "z_mem103",
            "offset": "0xa67",
            "doc": "memory that stores Z"
        },
        "ds.z_mem104": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem104",
            "name": "z_mem104",
            "offset": "0xa68",
            "doc": "memory that stores Z"
        },
        "ds.z_mem105": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem105",
            "name": "z_mem105",
            "offset": "0xa69",
            "doc": "memory that stores Z"
        },
        "ds.z_mem106": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem106",
            "name": "z_mem106",
            "offset": "0xa6a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem107": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem107",
            "name": "z_mem107",
            "offset": "0xa6b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem108": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem108",
            "name": "z_mem108",
            "offset": "0xa6c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem109": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem109",
            "name": "z_mem109",
            "offset": "0xa6d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem110": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem110",
            "name": "z_mem110",
            "offset": "0xa6e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem111": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem111",
            "name": "z_mem111",
            "offset": "0xa6f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem112": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem112",
            "name": "z_mem112",
            "offset": "0xa70",
            "doc": "memory that stores Z"
        },
        "ds.z_mem113": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem113",
            "name": "z_mem113",
            "offset": "0xa71",
            "doc": "memory that stores Z"
        },
        "ds.z_mem114": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem114",
            "name": "z_mem114",
            "offset": "0xa72",
            "doc": "memory that stores Z"
        },
        "ds.z_mem115": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem115",
            "name": "z_mem115",
            "offset": "0xa73",
            "doc": "memory that stores Z"
        },
        "ds.z_mem116": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem116",
            "name": "z_mem116",
            "offset": "0xa74",
            "doc": "memory that stores Z"
        },
        "ds.z_mem117": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem117",
            "name": "z_mem117",
            "offset": "0xa75",
            "doc": "memory that stores Z"
        },
        "ds.z_mem118": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem118",
            "name": "z_mem118",
            "offset": "0xa76",
            "doc": "memory that stores Z"
        },
        "ds.z_mem119": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem119",
            "name": "z_mem119",
            "offset": "0xa77",
            "doc": "memory that stores Z"
        },
        "ds.z_mem120": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem120",
            "name": "z_mem120",
            "offset": "0xa78",
            "doc": "memory that stores Z"
        },
        "ds.z_mem121": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem121",
            "name": "z_mem121",
            "offset": "0xa79",
            "doc": "memory that stores Z"
        },
        "ds.z_mem122": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem122",
            "name": "z_mem122",
            "offset": "0xa7a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem123": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem123",
            "name": "z_mem123",
            "offset": "0xa7b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem124": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem124",
            "name": "z_mem124",
            "offset": "0xa7c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem125": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem125",
            "name": "z_mem125",
            "offset": "0xa7d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem126": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem126",
            "name": "z_mem126",
            "offset": "0xa7e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem127": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem127",
            "name": "z_mem127",
            "offset": "0xa7f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem128": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem128",
            "name": "z_mem128",
            "offset": "0xa80",
            "doc": "memory that stores Z"
        },
        "ds.z_mem129": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem129",
            "name": "z_mem129",
            "offset": "0xa81",
            "doc": "memory that stores Z"
        },
        "ds.z_mem130": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem130",
            "name": "z_mem130",
            "offset": "0xa82",
            "doc": "memory that stores Z"
        },
        "ds.z_mem131": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem131",
            "name": "z_mem131",
            "offset": "0xa83",
            "doc": "memory that stores Z"
        },
        "ds.z_mem132": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem132",
            "name": "z_mem132",
            "offset": "0xa84",
            "doc": "memory that stores Z"
        },
        "ds.z_mem133": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem133",
            "name": "z_mem133",
            "offset": "0xa85",
            "doc": "memory that stores Z"
        },
        "ds.z_mem134": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem134",
            "name": "z_mem134",
            "offset": "0xa86",
            "doc": "memory that stores Z"
        },
        "ds.z_mem135": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem135",
            "name": "z_mem135",
            "offset": "0xa87",
            "doc": "memory that stores Z"
        },
        "ds.z_mem136": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem136",
            "name": "z_mem136",
            "offset": "0xa88",
            "doc": "memory that stores Z"
        },
        "ds.z_mem137": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem137",
            "name": "z_mem137",
            "offset": "0xa89",
            "doc": "memory that stores Z"
        },
        "ds.z_mem138": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem138",
            "name": "z_mem138",
            "offset": "0xa8a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem139": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem139",
            "name": "z_mem139",
            "offset": "0xa8b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem140": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem140",
            "name": "z_mem140",
            "offset": "0xa8c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem141": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem141",
            "name": "z_mem141",
            "offset": "0xa8d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem142": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem142",
            "name": "z_mem142",
            "offset": "0xa8e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem143": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem143",
            "name": "z_mem143",
            "offset": "0xa8f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem144": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem144",
            "name": "z_mem144",
            "offset": "0xa90",
            "doc": "memory that stores Z"
        },
        "ds.z_mem145": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem145",
            "name": "z_mem145",
            "offset": "0xa91",
            "doc": "memory that stores Z"
        },
        "ds.z_mem146": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem146",
            "name": "z_mem146",
            "offset": "0xa92",
            "doc": "memory that stores Z"
        },
        "ds.z_mem147": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem147",
            "name": "z_mem147",
            "offset": "0xa93",
            "doc": "memory that stores Z"
        },
        "ds.z_mem148": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem148",
            "name": "z_mem148",
            "offset": "0xa94",
            "doc": "memory that stores Z"
        },
        "ds.z_mem149": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem149",
            "name": "z_mem149",
            "offset": "0xa95",
            "doc": "memory that stores Z"
        },
        "ds.z_mem150": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem150",
            "name": "z_mem150",
            "offset": "0xa96",
            "doc": "memory that stores Z"
        },
        "ds.z_mem151": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem151",
            "name": "z_mem151",
            "offset": "0xa97",
            "doc": "memory that stores Z"
        },
        "ds.z_mem152": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem152",
            "name": "z_mem152",
            "offset": "0xa98",
            "doc": "memory that stores Z"
        },
        "ds.z_mem153": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem153",
            "name": "z_mem153",
            "offset": "0xa99",
            "doc": "memory that stores Z"
        },
        "ds.z_mem154": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem154",
            "name": "z_mem154",
            "offset": "0xa9a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem155": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem155",
            "name": "z_mem155",
            "offset": "0xa9b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem156": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem156",
            "name": "z_mem156",
            "offset": "0xa9c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem157": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem157",
            "name": "z_mem157",
            "offset": "0xa9d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem158": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem158",
            "name": "z_mem158",
            "offset": "0xa9e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem159": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem159",
            "name": "z_mem159",
            "offset": "0xa9f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem160": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem160",
            "name": "z_mem160",
            "offset": "0xaa0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem161": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem161",
            "name": "z_mem161",
            "offset": "0xaa1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem162": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem162",
            "name": "z_mem162",
            "offset": "0xaa2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem163": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem163",
            "name": "z_mem163",
            "offset": "0xaa3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem164": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem164",
            "name": "z_mem164",
            "offset": "0xaa4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem165": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem165",
            "name": "z_mem165",
            "offset": "0xaa5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem166": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem166",
            "name": "z_mem166",
            "offset": "0xaa6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem167": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem167",
            "name": "z_mem167",
            "offset": "0xaa7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem168": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem168",
            "name": "z_mem168",
            "offset": "0xaa8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem169": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem169",
            "name": "z_mem169",
            "offset": "0xaa9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem170": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem170",
            "name": "z_mem170",
            "offset": "0xaaa",
            "doc": "memory that stores Z"
        },
        "ds.z_mem171": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem171",
            "name": "z_mem171",
            "offset": "0xaab",
            "doc": "memory that stores Z"
        },
        "ds.z_mem172": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem172",
            "name": "z_mem172",
            "offset": "0xaac",
            "doc": "memory that stores Z"
        },
        "ds.z_mem173": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem173",
            "name": "z_mem173",
            "offset": "0xaad",
            "doc": "memory that stores Z"
        },
        "ds.z_mem174": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem174",
            "name": "z_mem174",
            "offset": "0xaae",
            "doc": "memory that stores Z"
        },
        "ds.z_mem175": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem175",
            "name": "z_mem175",
            "offset": "0xaaf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem176": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem176",
            "name": "z_mem176",
            "offset": "0xab0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem177": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem177",
            "name": "z_mem177",
            "offset": "0xab1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem178": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem178",
            "name": "z_mem178",
            "offset": "0xab2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem179": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem179",
            "name": "z_mem179",
            "offset": "0xab3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem180": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem180",
            "name": "z_mem180",
            "offset": "0xab4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem181": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem181",
            "name": "z_mem181",
            "offset": "0xab5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem182": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem182",
            "name": "z_mem182",
            "offset": "0xab6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem183": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem183",
            "name": "z_mem183",
            "offset": "0xab7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem184": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem184",
            "name": "z_mem184",
            "offset": "0xab8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem185": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem185",
            "name": "z_mem185",
            "offset": "0xab9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem186": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem186",
            "name": "z_mem186",
            "offset": "0xaba",
            "doc": "memory that stores Z"
        },
        "ds.z_mem187": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem187",
            "name": "z_mem187",
            "offset": "0xabb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem188": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem188",
            "name": "z_mem188",
            "offset": "0xabc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem189": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem189",
            "name": "z_mem189",
            "offset": "0xabd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem190": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem190",
            "name": "z_mem190",
            "offset": "0xabe",
            "doc": "memory that stores Z"
        },
        "ds.z_mem191": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem191",
            "name": "z_mem191",
            "offset": "0xabf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem192": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem192",
            "name": "z_mem192",
            "offset": "0xac0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem193": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem193",
            "name": "z_mem193",
            "offset": "0xac1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem194": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem194",
            "name": "z_mem194",
            "offset": "0xac2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem195": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem195",
            "name": "z_mem195",
            "offset": "0xac3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem196": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem196",
            "name": "z_mem196",
            "offset": "0xac4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem197": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem197",
            "name": "z_mem197",
            "offset": "0xac5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem198": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem198",
            "name": "z_mem198",
            "offset": "0xac6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem199": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem199",
            "name": "z_mem199",
            "offset": "0xac7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem200": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem200",
            "name": "z_mem200",
            "offset": "0xac8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem201": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem201",
            "name": "z_mem201",
            "offset": "0xac9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem202": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem202",
            "name": "z_mem202",
            "offset": "0xaca",
            "doc": "memory that stores Z"
        },
        "ds.z_mem203": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem203",
            "name": "z_mem203",
            "offset": "0xacb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem204": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem204",
            "name": "z_mem204",
            "offset": "0xacc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem205": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem205",
            "name": "z_mem205",
            "offset": "0xacd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem206": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem206",
            "name": "z_mem206",
            "offset": "0xace",
            "doc": "memory that stores Z"
        },
        "ds.z_mem207": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem207",
            "name": "z_mem207",
            "offset": "0xacf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem208": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem208",
            "name": "z_mem208",
            "offset": "0xad0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem209": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem209",
            "name": "z_mem209",
            "offset": "0xad1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem210": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem210",
            "name": "z_mem210",
            "offset": "0xad2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem211": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem211",
            "name": "z_mem211",
            "offset": "0xad3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem212": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem212",
            "name": "z_mem212",
            "offset": "0xad4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem213": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem213",
            "name": "z_mem213",
            "offset": "0xad5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem214": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem214",
            "name": "z_mem214",
            "offset": "0xad6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem215": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem215",
            "name": "z_mem215",
            "offset": "0xad7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem216": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem216",
            "name": "z_mem216",
            "offset": "0xad8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem217": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem217",
            "name": "z_mem217",
            "offset": "0xad9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem218": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem218",
            "name": "z_mem218",
            "offset": "0xada",
            "doc": "memory that stores Z"
        },
        "ds.z_mem219": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem219",
            "name": "z_mem219",
            "offset": "0xadb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem220": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem220",
            "name": "z_mem220",
            "offset": "0xadc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem221": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem221",
            "name": "z_mem221",
            "offset": "0xadd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem222": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem222",
            "name": "z_mem222",
            "offset": "0xade",
            "doc": "memory that stores Z"
        },
        "ds.z_mem223": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem223",
            "name": "z_mem223",
            "offset": "0xadf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem224": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem224",
            "name": "z_mem224",
            "offset": "0xae0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem225": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem225",
            "name": "z_mem225",
            "offset": "0xae1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem226": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem226",
            "name": "z_mem226",
            "offset": "0xae2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem227": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem227",
            "name": "z_mem227",
            "offset": "0xae3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem228": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem228",
            "name": "z_mem228",
            "offset": "0xae4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem229": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem229",
            "name": "z_mem229",
            "offset": "0xae5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem230": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem230",
            "name": "z_mem230",
            "offset": "0xae6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem231": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem231",
            "name": "z_mem231",
            "offset": "0xae7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem232": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem232",
            "name": "z_mem232",
            "offset": "0xae8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem233": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem233",
            "name": "z_mem233",
            "offset": "0xae9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem234": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem234",
            "name": "z_mem234",
            "offset": "0xaea",
            "doc": "memory that stores Z"
        },
        "ds.z_mem235": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem235",
            "name": "z_mem235",
            "offset": "0xaeb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem236": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem236",
            "name": "z_mem236",
            "offset": "0xaec",
            "doc": "memory that stores Z"
        },
        "ds.z_mem237": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem237",
            "name": "z_mem237",
            "offset": "0xaed",
            "doc": "memory that stores Z"
        },
        "ds.z_mem238": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem238",
            "name": "z_mem238",
            "offset": "0xaee",
            "doc": "memory that stores Z"
        },
        "ds.z_mem239": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem239",
            "name": "z_mem239",
            "offset": "0xaef",
            "doc": "memory that stores Z"
        },
        "ds.z_mem240": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem240",
            "name": "z_mem240",
            "offset": "0xaf0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem241": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem241",
            "name": "z_mem241",
            "offset": "0xaf1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem242": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem242",
            "name": "z_mem242",
            "offset": "0xaf2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem243": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem243",
            "name": "z_mem243",
            "offset": "0xaf3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem244": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem244",
            "name": "z_mem244",
            "offset": "0xaf4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem245": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem245",
            "name": "z_mem245",
            "offset": "0xaf5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem246": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem246",
            "name": "z_mem246",
            "offset": "0xaf6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem247": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem247",
            "name": "z_mem247",
            "offset": "0xaf7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem248": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem248",
            "name": "z_mem248",
            "offset": "0xaf8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem249": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem249",
            "name": "z_mem249",
            "offset": "0xaf9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem250": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem250",
            "name": "z_mem250",
            "offset": "0xafa",
            "doc": "memory that stores Z"
        },
        "ds.z_mem251": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem251",
            "name": "z_mem251",
            "offset": "0xafb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem252": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem252",
            "name": "z_mem252",
            "offset": "0xafc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem253": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem253",
            "name": "z_mem253",
            "offset": "0xafd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem254": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem254",
            "name": "z_mem254",
            "offset": "0xafe",
            "doc": "memory that stores Z"
        },
        "ds.z_mem255": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem255",
            "name": "z_mem255",
            "offset": "0xaff",
            "doc": "memory that stores Z"
        },
        "ds.z_mem256": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem256",
            "name": "z_mem256",
            "offset": "0xb00",
            "doc": "memory that stores Z"
        },
        "ds.z_mem257": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem257",
            "name": "z_mem257",
            "offset": "0xb01",
            "doc": "memory that stores Z"
        },
        "ds.z_mem258": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem258",
            "name": "z_mem258",
            "offset": "0xb02",
            "doc": "memory that stores Z"
        },
        "ds.z_mem259": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem259",
            "name": "z_mem259",
            "offset": "0xb03",
            "doc": "memory that stores Z"
        },
        "ds.z_mem260": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem260",
            "name": "z_mem260",
            "offset": "0xb04",
            "doc": "memory that stores Z"
        },
        "ds.z_mem261": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem261",
            "name": "z_mem261",
            "offset": "0xb05",
            "doc": "memory that stores Z"
        },
        "ds.z_mem262": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem262",
            "name": "z_mem262",
            "offset": "0xb06",
            "doc": "memory that stores Z"
        },
        "ds.z_mem263": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem263",
            "name": "z_mem263",
            "offset": "0xb07",
            "doc": "memory that stores Z"
        },
        "ds.z_mem264": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem264",
            "name": "z_mem264",
            "offset": "0xb08",
            "doc": "memory that stores Z"
        },
        "ds.z_mem265": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem265",
            "name": "z_mem265",
            "offset": "0xb09",
            "doc": "memory that stores Z"
        },
        "ds.z_mem266": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem266",
            "name": "z_mem266",
            "offset": "0xb0a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem267": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem267",
            "name": "z_mem267",
            "offset": "0xb0b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem268": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem268",
            "name": "z_mem268",
            "offset": "0xb0c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem269": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem269",
            "name": "z_mem269",
            "offset": "0xb0d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem270": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem270",
            "name": "z_mem270",
            "offset": "0xb0e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem271": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem271",
            "name": "z_mem271",
            "offset": "0xb0f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem272": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem272",
            "name": "z_mem272",
            "offset": "0xb10",
            "doc": "memory that stores Z"
        },
        "ds.z_mem273": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem273",
            "name": "z_mem273",
            "offset": "0xb11",
            "doc": "memory that stores Z"
        },
        "ds.z_mem274": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem274",
            "name": "z_mem274",
            "offset": "0xb12",
            "doc": "memory that stores Z"
        },
        "ds.z_mem275": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem275",
            "name": "z_mem275",
            "offset": "0xb13",
            "doc": "memory that stores Z"
        },
        "ds.z_mem276": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem276",
            "name": "z_mem276",
            "offset": "0xb14",
            "doc": "memory that stores Z"
        },
        "ds.z_mem277": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem277",
            "name": "z_mem277",
            "offset": "0xb15",
            "doc": "memory that stores Z"
        },
        "ds.z_mem278": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem278",
            "name": "z_mem278",
            "offset": "0xb16",
            "doc": "memory that stores Z"
        },
        "ds.z_mem279": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem279",
            "name": "z_mem279",
            "offset": "0xb17",
            "doc": "memory that stores Z"
        },
        "ds.z_mem280": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem280",
            "name": "z_mem280",
            "offset": "0xb18",
            "doc": "memory that stores Z"
        },
        "ds.z_mem281": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem281",
            "name": "z_mem281",
            "offset": "0xb19",
            "doc": "memory that stores Z"
        },
        "ds.z_mem282": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem282",
            "name": "z_mem282",
            "offset": "0xb1a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem283": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem283",
            "name": "z_mem283",
            "offset": "0xb1b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem284": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem284",
            "name": "z_mem284",
            "offset": "0xb1c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem285": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem285",
            "name": "z_mem285",
            "offset": "0xb1d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem286": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem286",
            "name": "z_mem286",
            "offset": "0xb1e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem287": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem287",
            "name": "z_mem287",
            "offset": "0xb1f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem288": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem288",
            "name": "z_mem288",
            "offset": "0xb20",
            "doc": "memory that stores Z"
        },
        "ds.z_mem289": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem289",
            "name": "z_mem289",
            "offset": "0xb21",
            "doc": "memory that stores Z"
        },
        "ds.z_mem290": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem290",
            "name": "z_mem290",
            "offset": "0xb22",
            "doc": "memory that stores Z"
        },
        "ds.z_mem291": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem291",
            "name": "z_mem291",
            "offset": "0xb23",
            "doc": "memory that stores Z"
        },
        "ds.z_mem292": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem292",
            "name": "z_mem292",
            "offset": "0xb24",
            "doc": "memory that stores Z"
        },
        "ds.z_mem293": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem293",
            "name": "z_mem293",
            "offset": "0xb25",
            "doc": "memory that stores Z"
        },
        "ds.z_mem294": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem294",
            "name": "z_mem294",
            "offset": "0xb26",
            "doc": "memory that stores Z"
        },
        "ds.z_mem295": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem295",
            "name": "z_mem295",
            "offset": "0xb27",
            "doc": "memory that stores Z"
        },
        "ds.z_mem296": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem296",
            "name": "z_mem296",
            "offset": "0xb28",
            "doc": "memory that stores Z"
        },
        "ds.z_mem297": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem297",
            "name": "z_mem297",
            "offset": "0xb29",
            "doc": "memory that stores Z"
        },
        "ds.z_mem298": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem298",
            "name": "z_mem298",
            "offset": "0xb2a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem299": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem299",
            "name": "z_mem299",
            "offset": "0xb2b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem300": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem300",
            "name": "z_mem300",
            "offset": "0xb2c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem301": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem301",
            "name": "z_mem301",
            "offset": "0xb2d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem302": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem302",
            "name": "z_mem302",
            "offset": "0xb2e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem303": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem303",
            "name": "z_mem303",
            "offset": "0xb2f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem304": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem304",
            "name": "z_mem304",
            "offset": "0xb30",
            "doc": "memory that stores Z"
        },
        "ds.z_mem305": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem305",
            "name": "z_mem305",
            "offset": "0xb31",
            "doc": "memory that stores Z"
        },
        "ds.z_mem306": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem306",
            "name": "z_mem306",
            "offset": "0xb32",
            "doc": "memory that stores Z"
        },
        "ds.z_mem307": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem307",
            "name": "z_mem307",
            "offset": "0xb33",
            "doc": "memory that stores Z"
        },
        "ds.z_mem308": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem308",
            "name": "z_mem308",
            "offset": "0xb34",
            "doc": "memory that stores Z"
        },
        "ds.z_mem309": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem309",
            "name": "z_mem309",
            "offset": "0xb35",
            "doc": "memory that stores Z"
        },
        "ds.z_mem310": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem310",
            "name": "z_mem310",
            "offset": "0xb36",
            "doc": "memory that stores Z"
        },
        "ds.z_mem311": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem311",
            "name": "z_mem311",
            "offset": "0xb37",
            "doc": "memory that stores Z"
        },
        "ds.z_mem312": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem312",
            "name": "z_mem312",
            "offset": "0xb38",
            "doc": "memory that stores Z"
        },
        "ds.z_mem313": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem313",
            "name": "z_mem313",
            "offset": "0xb39",
            "doc": "memory that stores Z"
        },
        "ds.z_mem314": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem314",
            "name": "z_mem314",
            "offset": "0xb3a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem315": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem315",
            "name": "z_mem315",
            "offset": "0xb3b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem316": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem316",
            "name": "z_mem316",
            "offset": "0xb3c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem317": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem317",
            "name": "z_mem317",
            "offset": "0xb3d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem318": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem318",
            "name": "z_mem318",
            "offset": "0xb3e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem319": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem319",
            "name": "z_mem319",
            "offset": "0xb3f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem320": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem320",
            "name": "z_mem320",
            "offset": "0xb40",
            "doc": "memory that stores Z"
        },
        "ds.z_mem321": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem321",
            "name": "z_mem321",
            "offset": "0xb41",
            "doc": "memory that stores Z"
        },
        "ds.z_mem322": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem322",
            "name": "z_mem322",
            "offset": "0xb42",
            "doc": "memory that stores Z"
        },
        "ds.z_mem323": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem323",
            "name": "z_mem323",
            "offset": "0xb43",
            "doc": "memory that stores Z"
        },
        "ds.z_mem324": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem324",
            "name": "z_mem324",
            "offset": "0xb44",
            "doc": "memory that stores Z"
        },
        "ds.z_mem325": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem325",
            "name": "z_mem325",
            "offset": "0xb45",
            "doc": "memory that stores Z"
        },
        "ds.z_mem326": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem326",
            "name": "z_mem326",
            "offset": "0xb46",
            "doc": "memory that stores Z"
        },
        "ds.z_mem327": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem327",
            "name": "z_mem327",
            "offset": "0xb47",
            "doc": "memory that stores Z"
        },
        "ds.z_mem328": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem328",
            "name": "z_mem328",
            "offset": "0xb48",
            "doc": "memory that stores Z"
        },
        "ds.z_mem329": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem329",
            "name": "z_mem329",
            "offset": "0xb49",
            "doc": "memory that stores Z"
        },
        "ds.z_mem330": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem330",
            "name": "z_mem330",
            "offset": "0xb4a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem331": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem331",
            "name": "z_mem331",
            "offset": "0xb4b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem332": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem332",
            "name": "z_mem332",
            "offset": "0xb4c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem333": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem333",
            "name": "z_mem333",
            "offset": "0xb4d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem334": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem334",
            "name": "z_mem334",
            "offset": "0xb4e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem335": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem335",
            "name": "z_mem335",
            "offset": "0xb4f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem336": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem336",
            "name": "z_mem336",
            "offset": "0xb50",
            "doc": "memory that stores Z"
        },
        "ds.z_mem337": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem337",
            "name": "z_mem337",
            "offset": "0xb51",
            "doc": "memory that stores Z"
        },
        "ds.z_mem338": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem338",
            "name": "z_mem338",
            "offset": "0xb52",
            "doc": "memory that stores Z"
        },
        "ds.z_mem339": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem339",
            "name": "z_mem339",
            "offset": "0xb53",
            "doc": "memory that stores Z"
        },
        "ds.z_mem340": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem340",
            "name": "z_mem340",
            "offset": "0xb54",
            "doc": "memory that stores Z"
        },
        "ds.z_mem341": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem341",
            "name": "z_mem341",
            "offset": "0xb55",
            "doc": "memory that stores Z"
        },
        "ds.z_mem342": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem342",
            "name": "z_mem342",
            "offset": "0xb56",
            "doc": "memory that stores Z"
        },
        "ds.z_mem343": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem343",
            "name": "z_mem343",
            "offset": "0xb57",
            "doc": "memory that stores Z"
        },
        "ds.z_mem344": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem344",
            "name": "z_mem344",
            "offset": "0xb58",
            "doc": "memory that stores Z"
        },
        "ds.z_mem345": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem345",
            "name": "z_mem345",
            "offset": "0xb59",
            "doc": "memory that stores Z"
        },
        "ds.z_mem346": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem346",
            "name": "z_mem346",
            "offset": "0xb5a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem347": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem347",
            "name": "z_mem347",
            "offset": "0xb5b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem348": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem348",
            "name": "z_mem348",
            "offset": "0xb5c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem349": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem349",
            "name": "z_mem349",
            "offset": "0xb5d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem350": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem350",
            "name": "z_mem350",
            "offset": "0xb5e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem351": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem351",
            "name": "z_mem351",
            "offset": "0xb5f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem352": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem352",
            "name": "z_mem352",
            "offset": "0xb60",
            "doc": "memory that stores Z"
        },
        "ds.z_mem353": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem353",
            "name": "z_mem353",
            "offset": "0xb61",
            "doc": "memory that stores Z"
        },
        "ds.z_mem354": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem354",
            "name": "z_mem354",
            "offset": "0xb62",
            "doc": "memory that stores Z"
        },
        "ds.z_mem355": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem355",
            "name": "z_mem355",
            "offset": "0xb63",
            "doc": "memory that stores Z"
        },
        "ds.z_mem356": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem356",
            "name": "z_mem356",
            "offset": "0xb64",
            "doc": "memory that stores Z"
        },
        "ds.z_mem357": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem357",
            "name": "z_mem357",
            "offset": "0xb65",
            "doc": "memory that stores Z"
        },
        "ds.z_mem358": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem358",
            "name": "z_mem358",
            "offset": "0xb66",
            "doc": "memory that stores Z"
        },
        "ds.z_mem359": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem359",
            "name": "z_mem359",
            "offset": "0xb67",
            "doc": "memory that stores Z"
        },
        "ds.z_mem360": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem360",
            "name": "z_mem360",
            "offset": "0xb68",
            "doc": "memory that stores Z"
        },
        "ds.z_mem361": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem361",
            "name": "z_mem361",
            "offset": "0xb69",
            "doc": "memory that stores Z"
        },
        "ds.z_mem362": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem362",
            "name": "z_mem362",
            "offset": "0xb6a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem363": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem363",
            "name": "z_mem363",
            "offset": "0xb6b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem364": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem364",
            "name": "z_mem364",
            "offset": "0xb6c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem365": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem365",
            "name": "z_mem365",
            "offset": "0xb6d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem366": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem366",
            "name": "z_mem366",
            "offset": "0xb6e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem367": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem367",
            "name": "z_mem367",
            "offset": "0xb6f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem368": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem368",
            "name": "z_mem368",
            "offset": "0xb70",
            "doc": "memory that stores Z"
        },
        "ds.z_mem369": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem369",
            "name": "z_mem369",
            "offset": "0xb71",
            "doc": "memory that stores Z"
        },
        "ds.z_mem370": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem370",
            "name": "z_mem370",
            "offset": "0xb72",
            "doc": "memory that stores Z"
        },
        "ds.z_mem371": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem371",
            "name": "z_mem371",
            "offset": "0xb73",
            "doc": "memory that stores Z"
        },
        "ds.z_mem372": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem372",
            "name": "z_mem372",
            "offset": "0xb74",
            "doc": "memory that stores Z"
        },
        "ds.z_mem373": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem373",
            "name": "z_mem373",
            "offset": "0xb75",
            "doc": "memory that stores Z"
        },
        "ds.z_mem374": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem374",
            "name": "z_mem374",
            "offset": "0xb76",
            "doc": "memory that stores Z"
        },
        "ds.z_mem375": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem375",
            "name": "z_mem375",
            "offset": "0xb77",
            "doc": "memory that stores Z"
        },
        "ds.z_mem376": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem376",
            "name": "z_mem376",
            "offset": "0xb78",
            "doc": "memory that stores Z"
        },
        "ds.z_mem377": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem377",
            "name": "z_mem377",
            "offset": "0xb79",
            "doc": "memory that stores Z"
        },
        "ds.z_mem378": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem378",
            "name": "z_mem378",
            "offset": "0xb7a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem379": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem379",
            "name": "z_mem379",
            "offset": "0xb7b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem380": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem380",
            "name": "z_mem380",
            "offset": "0xb7c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem381": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem381",
            "name": "z_mem381",
            "offset": "0xb7d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem382": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem382",
            "name": "z_mem382",
            "offset": "0xb7e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem383": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem383",
            "name": "z_mem383",
            "offset": "0xb7f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem384": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem384",
            "name": "z_mem384",
            "offset": "0xb80",
            "doc": "memory that stores Z"
        },
        "ds.z_mem385": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem385",
            "name": "z_mem385",
            "offset": "0xb81",
            "doc": "memory that stores Z"
        },
        "ds.z_mem386": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem386",
            "name": "z_mem386",
            "offset": "0xb82",
            "doc": "memory that stores Z"
        },
        "ds.z_mem387": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem387",
            "name": "z_mem387",
            "offset": "0xb83",
            "doc": "memory that stores Z"
        },
        "ds.z_mem388": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem388",
            "name": "z_mem388",
            "offset": "0xb84",
            "doc": "memory that stores Z"
        },
        "ds.z_mem389": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem389",
            "name": "z_mem389",
            "offset": "0xb85",
            "doc": "memory that stores Z"
        },
        "ds.z_mem390": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem390",
            "name": "z_mem390",
            "offset": "0xb86",
            "doc": "memory that stores Z"
        },
        "ds.z_mem391": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem391",
            "name": "z_mem391",
            "offset": "0xb87",
            "doc": "memory that stores Z"
        },
        "ds.z_mem392": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem392",
            "name": "z_mem392",
            "offset": "0xb88",
            "doc": "memory that stores Z"
        },
        "ds.z_mem393": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem393",
            "name": "z_mem393",
            "offset": "0xb89",
            "doc": "memory that stores Z"
        },
        "ds.z_mem394": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem394",
            "name": "z_mem394",
            "offset": "0xb8a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem395": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem395",
            "name": "z_mem395",
            "offset": "0xb8b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem396": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem396",
            "name": "z_mem396",
            "offset": "0xb8c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem397": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem397",
            "name": "z_mem397",
            "offset": "0xb8d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem398": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem398",
            "name": "z_mem398",
            "offset": "0xb8e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem399": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem399",
            "name": "z_mem399",
            "offset": "0xb8f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem400": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem400",
            "name": "z_mem400",
            "offset": "0xb90",
            "doc": "memory that stores Z"
        },
        "ds.z_mem401": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem401",
            "name": "z_mem401",
            "offset": "0xb91",
            "doc": "memory that stores Z"
        },
        "ds.z_mem402": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem402",
            "name": "z_mem402",
            "offset": "0xb92",
            "doc": "memory that stores Z"
        },
        "ds.z_mem403": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem403",
            "name": "z_mem403",
            "offset": "0xb93",
            "doc": "memory that stores Z"
        },
        "ds.z_mem404": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem404",
            "name": "z_mem404",
            "offset": "0xb94",
            "doc": "memory that stores Z"
        },
        "ds.z_mem405": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem405",
            "name": "z_mem405",
            "offset": "0xb95",
            "doc": "memory that stores Z"
        },
        "ds.z_mem406": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem406",
            "name": "z_mem406",
            "offset": "0xb96",
            "doc": "memory that stores Z"
        },
        "ds.z_mem407": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem407",
            "name": "z_mem407",
            "offset": "0xb97",
            "doc": "memory that stores Z"
        },
        "ds.z_mem408": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem408",
            "name": "z_mem408",
            "offset": "0xb98",
            "doc": "memory that stores Z"
        },
        "ds.z_mem409": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem409",
            "name": "z_mem409",
            "offset": "0xb99",
            "doc": "memory that stores Z"
        },
        "ds.z_mem410": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem410",
            "name": "z_mem410",
            "offset": "0xb9a",
            "doc": "memory that stores Z"
        },
        "ds.z_mem411": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem411",
            "name": "z_mem411",
            "offset": "0xb9b",
            "doc": "memory that stores Z"
        },
        "ds.z_mem412": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem412",
            "name": "z_mem412",
            "offset": "0xb9c",
            "doc": "memory that stores Z"
        },
        "ds.z_mem413": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem413",
            "name": "z_mem413",
            "offset": "0xb9d",
            "doc": "memory that stores Z"
        },
        "ds.z_mem414": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem414",
            "name": "z_mem414",
            "offset": "0xb9e",
            "doc": "memory that stores Z"
        },
        "ds.z_mem415": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem415",
            "name": "z_mem415",
            "offset": "0xb9f",
            "doc": "memory that stores Z"
        },
        "ds.z_mem416": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem416",
            "name": "z_mem416",
            "offset": "0xba0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem417": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem417",
            "name": "z_mem417",
            "offset": "0xba1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem418": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem418",
            "name": "z_mem418",
            "offset": "0xba2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem419": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem419",
            "name": "z_mem419",
            "offset": "0xba3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem420": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem420",
            "name": "z_mem420",
            "offset": "0xba4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem421": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem421",
            "name": "z_mem421",
            "offset": "0xba5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem422": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem422",
            "name": "z_mem422",
            "offset": "0xba6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem423": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem423",
            "name": "z_mem423",
            "offset": "0xba7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem424": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem424",
            "name": "z_mem424",
            "offset": "0xba8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem425": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem425",
            "name": "z_mem425",
            "offset": "0xba9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem426": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem426",
            "name": "z_mem426",
            "offset": "0xbaa",
            "doc": "memory that stores Z"
        },
        "ds.z_mem427": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem427",
            "name": "z_mem427",
            "offset": "0xbab",
            "doc": "memory that stores Z"
        },
        "ds.z_mem428": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem428",
            "name": "z_mem428",
            "offset": "0xbac",
            "doc": "memory that stores Z"
        },
        "ds.z_mem429": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem429",
            "name": "z_mem429",
            "offset": "0xbad",
            "doc": "memory that stores Z"
        },
        "ds.z_mem430": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem430",
            "name": "z_mem430",
            "offset": "0xbae",
            "doc": "memory that stores Z"
        },
        "ds.z_mem431": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem431",
            "name": "z_mem431",
            "offset": "0xbaf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem432": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem432",
            "name": "z_mem432",
            "offset": "0xbb0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem433": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem433",
            "name": "z_mem433",
            "offset": "0xbb1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem434": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem434",
            "name": "z_mem434",
            "offset": "0xbb2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem435": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem435",
            "name": "z_mem435",
            "offset": "0xbb3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem436": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem436",
            "name": "z_mem436",
            "offset": "0xbb4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem437": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem437",
            "name": "z_mem437",
            "offset": "0xbb5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem438": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem438",
            "name": "z_mem438",
            "offset": "0xbb6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem439": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem439",
            "name": "z_mem439",
            "offset": "0xbb7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem440": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem440",
            "name": "z_mem440",
            "offset": "0xbb8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem441": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem441",
            "name": "z_mem441",
            "offset": "0xbb9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem442": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem442",
            "name": "z_mem442",
            "offset": "0xbba",
            "doc": "memory that stores Z"
        },
        "ds.z_mem443": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem443",
            "name": "z_mem443",
            "offset": "0xbbb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem444": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem444",
            "name": "z_mem444",
            "offset": "0xbbc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem445": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem445",
            "name": "z_mem445",
            "offset": "0xbbd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem446": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem446",
            "name": "z_mem446",
            "offset": "0xbbe",
            "doc": "memory that stores Z"
        },
        "ds.z_mem447": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem447",
            "name": "z_mem447",
            "offset": "0xbbf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem448": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem448",
            "name": "z_mem448",
            "offset": "0xbc0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem449": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem449",
            "name": "z_mem449",
            "offset": "0xbc1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem450": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem450",
            "name": "z_mem450",
            "offset": "0xbc2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem451": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem451",
            "name": "z_mem451",
            "offset": "0xbc3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem452": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem452",
            "name": "z_mem452",
            "offset": "0xbc4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem453": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem453",
            "name": "z_mem453",
            "offset": "0xbc5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem454": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem454",
            "name": "z_mem454",
            "offset": "0xbc6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem455": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem455",
            "name": "z_mem455",
            "offset": "0xbc7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem456": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem456",
            "name": "z_mem456",
            "offset": "0xbc8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem457": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem457",
            "name": "z_mem457",
            "offset": "0xbc9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem458": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem458",
            "name": "z_mem458",
            "offset": "0xbca",
            "doc": "memory that stores Z"
        },
        "ds.z_mem459": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem459",
            "name": "z_mem459",
            "offset": "0xbcb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem460": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem460",
            "name": "z_mem460",
            "offset": "0xbcc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem461": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem461",
            "name": "z_mem461",
            "offset": "0xbcd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem462": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem462",
            "name": "z_mem462",
            "offset": "0xbce",
            "doc": "memory that stores Z"
        },
        "ds.z_mem463": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem463",
            "name": "z_mem463",
            "offset": "0xbcf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem464": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem464",
            "name": "z_mem464",
            "offset": "0xbd0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem465": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem465",
            "name": "z_mem465",
            "offset": "0xbd1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem466": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem466",
            "name": "z_mem466",
            "offset": "0xbd2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem467": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem467",
            "name": "z_mem467",
            "offset": "0xbd3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem468": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem468",
            "name": "z_mem468",
            "offset": "0xbd4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem469": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem469",
            "name": "z_mem469",
            "offset": "0xbd5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem470": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem470",
            "name": "z_mem470",
            "offset": "0xbd6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem471": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem471",
            "name": "z_mem471",
            "offset": "0xbd7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem472": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem472",
            "name": "z_mem472",
            "offset": "0xbd8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem473": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem473",
            "name": "z_mem473",
            "offset": "0xbd9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem474": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem474",
            "name": "z_mem474",
            "offset": "0xbda",
            "doc": "memory that stores Z"
        },
        "ds.z_mem475": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem475",
            "name": "z_mem475",
            "offset": "0xbdb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem476": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem476",
            "name": "z_mem476",
            "offset": "0xbdc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem477": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem477",
            "name": "z_mem477",
            "offset": "0xbdd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem478": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem478",
            "name": "z_mem478",
            "offset": "0xbde",
            "doc": "memory that stores Z"
        },
        "ds.z_mem479": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem479",
            "name": "z_mem479",
            "offset": "0xbdf",
            "doc": "memory that stores Z"
        },
        "ds.z_mem480": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem480",
            "name": "z_mem480",
            "offset": "0xbe0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem481": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem481",
            "name": "z_mem481",
            "offset": "0xbe1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem482": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem482",
            "name": "z_mem482",
            "offset": "0xbe2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem483": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem483",
            "name": "z_mem483",
            "offset": "0xbe3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem484": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem484",
            "name": "z_mem484",
            "offset": "0xbe4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem485": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem485",
            "name": "z_mem485",
            "offset": "0xbe5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem486": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem486",
            "name": "z_mem486",
            "offset": "0xbe6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem487": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem487",
            "name": "z_mem487",
            "offset": "0xbe7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem488": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem488",
            "name": "z_mem488",
            "offset": "0xbe8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem489": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem489",
            "name": "z_mem489",
            "offset": "0xbe9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem490": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem490",
            "name": "z_mem490",
            "offset": "0xbea",
            "doc": "memory that stores Z"
        },
        "ds.z_mem491": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem491",
            "name": "z_mem491",
            "offset": "0xbeb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem492": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem492",
            "name": "z_mem492",
            "offset": "0xbec",
            "doc": "memory that stores Z"
        },
        "ds.z_mem493": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem493",
            "name": "z_mem493",
            "offset": "0xbed",
            "doc": "memory that stores Z"
        },
        "ds.z_mem494": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem494",
            "name": "z_mem494",
            "offset": "0xbee",
            "doc": "memory that stores Z"
        },
        "ds.z_mem495": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem495",
            "name": "z_mem495",
            "offset": "0xbef",
            "doc": "memory that stores Z"
        },
        "ds.z_mem496": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem496",
            "name": "z_mem496",
            "offset": "0xbf0",
            "doc": "memory that stores Z"
        },
        "ds.z_mem497": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem497",
            "name": "z_mem497",
            "offset": "0xbf1",
            "doc": "memory that stores Z"
        },
        "ds.z_mem498": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem498",
            "name": "z_mem498",
            "offset": "0xbf2",
            "doc": "memory that stores Z"
        },
        "ds.z_mem499": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem499",
            "name": "z_mem499",
            "offset": "0xbf3",
            "doc": "memory that stores Z"
        },
        "ds.z_mem500": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem500",
            "name": "z_mem500",
            "offset": "0xbf4",
            "doc": "memory that stores Z"
        },
        "ds.z_mem501": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem501",
            "name": "z_mem501",
            "offset": "0xbf5",
            "doc": "memory that stores Z"
        },
        "ds.z_mem502": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem502",
            "name": "z_mem502",
            "offset": "0xbf6",
            "doc": "memory that stores Z"
        },
        "ds.z_mem503": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem503",
            "name": "z_mem503",
            "offset": "0xbf7",
            "doc": "memory that stores Z"
        },
        "ds.z_mem504": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem504",
            "name": "z_mem504",
            "offset": "0xbf8",
            "doc": "memory that stores Z"
        },
        "ds.z_mem505": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem505",
            "name": "z_mem505",
            "offset": "0xbf9",
            "doc": "memory that stores Z"
        },
        "ds.z_mem506": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem506",
            "name": "z_mem506",
            "offset": "0xbfa",
            "doc": "memory that stores Z"
        },
        "ds.z_mem507": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem507",
            "name": "z_mem507",
            "offset": "0xbfb",
            "doc": "memory that stores Z"
        },
        "ds.z_mem508": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem508",
            "name": "z_mem508",
            "offset": "0xbfc",
            "doc": "memory that stores Z"
        },
        "ds.z_mem509": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem509",
            "name": "z_mem509",
            "offset": "0xbfd",
            "doc": "memory that stores Z"
        },
        "ds.z_mem510": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem510",
            "name": "z_mem510",
            "offset": "0xbfe",
            "doc": "memory that stores Z"
        },
        "ds.z_mem511": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "ds.z_mem511",
            "name": "z_mem511",
            "offset": "0xbff",
            "doc": "memory that stores Z"
        },
        "ds.set_start": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_start",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "set this bit to start DS operation."
                }
            ],
            "id": "ds.set_start",
            "name": "set_start",
            "offset": "0xe00",
            "doc": "DS start control register"
        },
        "ds.set_continue": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_continue",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "set this bit to continue DS operation."
                }
            ],
            "id": "ds.set_continue",
            "name": "set_continue",
            "offset": "0xe04",
            "doc": "DS continue control register"
        },
        "ds.set_finish": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_finish",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to finish DS process."
                }
            ],
            "id": "ds.set_finish",
            "name": "set_finish",
            "offset": "0xe08",
            "doc": "DS finish control register"
        },
        "ds.query_busy": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "query_busy",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "digital signature state. 1'b0: idle, 1'b1: busy"
                }
            ],
            "id": "ds.query_busy",
            "name": "query_busy",
            "offset": "0xe0c",
            "doc": "DS query busy register"
        },
        "ds.query_key_wrong": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "query_key_wrong",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "digital signature key wrong counter"
                }
            ],
            "id": "ds.query_key_wrong",
            "name": "query_key_wrong",
            "offset": "0xe10",
            "doc": "DS query key-wrong counter register"
        },
        "ds.query_check": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "padding_bad",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "padding checkout result. 1'b0: a good padding, 1'b1: a bad padding"
                },
                {
                    "name": "md_error",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "MD checkout result. 1'b0: MD check pass, 1'b1: MD check fail"
                }
            ],
            "id": "ds.query_check",
            "name": "query_check",
            "offset": "0xe14",
            "doc": "DS query check result register"
        },
        "ds.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "538969624",
                    "doc": "ds version information"
                }
            ],
            "id": "ds.date",
            "name": "date",
            "offset": "0xe20",
            "doc": "DS version control register"
        },
        "efuse": {
            "type": "blk",
            "children": [
                "efuse.pgm_data0",
                "efuse.pgm_data1",
                "efuse.pgm_data2",
                "efuse.pgm_data3",
                "efuse.pgm_data4",
                "efuse.pgm_data5",
                "efuse.pgm_data6",
                "efuse.pgm_data7",
                "efuse.pgm_check_value0",
                "efuse.pgm_check_value1",
                "efuse.pgm_check_value2",
                "efuse.rd_wr_dis",
                "efuse.rd_repeat_data0",
                "efuse.rd_repeat_data1",
                "efuse.rd_repeat_data2",
                "efuse.rd_repeat_data3",
                "efuse.rd_repeat_data4",
                "efuse.rd_mac_spi_sys_0",
                "efuse.rd_mac_spi_sys_1",
                "efuse.rd_mac_spi_sys_2",
                "efuse.rd_mac_spi_sys_3",
                "efuse.rd_mac_spi_sys_4",
                "efuse.rd_mac_spi_sys_5",
                "efuse.rd_sys_part1_data0",
                "efuse.rd_sys_part1_data1",
                "efuse.rd_sys_part1_data2",
                "efuse.rd_sys_part1_data3",
                "efuse.rd_sys_part1_data4",
                "efuse.rd_sys_part1_data5",
                "efuse.rd_sys_part1_data6",
                "efuse.rd_sys_part1_data7",
                "efuse.rd_usr_data0",
                "efuse.rd_usr_data1",
                "efuse.rd_usr_data2",
                "efuse.rd_usr_data3",
                "efuse.rd_usr_data4",
                "efuse.rd_usr_data5",
                "efuse.rd_usr_data6",
                "efuse.rd_usr_data7",
                "efuse.rd_key0_data0",
                "efuse.rd_key0_data1",
                "efuse.rd_key0_data2",
                "efuse.rd_key0_data3",
                "efuse.rd_key0_data4",
                "efuse.rd_key0_data5",
                "efuse.rd_key0_data6",
                "efuse.rd_key0_data7",
                "efuse.rd_key1_data0",
                "efuse.rd_key1_data1",
                "efuse.rd_key1_data2",
                "efuse.rd_key1_data3",
                "efuse.rd_key1_data4",
                "efuse.rd_key1_data5",
                "efuse.rd_key1_data6",
                "efuse.rd_key1_data7",
                "efuse.rd_key2_data0",
                "efuse.rd_key2_data1",
                "efuse.rd_key2_data2",
                "efuse.rd_key2_data3",
                "efuse.rd_key2_data4",
                "efuse.rd_key2_data5",
                "efuse.rd_key2_data6",
                "efuse.rd_key2_data7",
                "efuse.rd_key3_data0",
                "efuse.rd_key3_data1",
                "efuse.rd_key3_data2",
                "efuse.rd_key3_data3",
                "efuse.rd_key3_data4",
                "efuse.rd_key3_data5",
                "efuse.rd_key3_data6",
                "efuse.rd_key3_data7",
                "efuse.rd_key4_data0",
                "efuse.rd_key4_data1",
                "efuse.rd_key4_data2",
                "efuse.rd_key4_data3",
                "efuse.rd_key4_data4",
                "efuse.rd_key4_data5",
                "efuse.rd_key4_data6",
                "efuse.rd_key4_data7",
                "efuse.rd_key5_data0",
                "efuse.rd_key5_data1",
                "efuse.rd_key5_data2",
                "efuse.rd_key5_data3",
                "efuse.rd_key5_data4",
                "efuse.rd_key5_data5",
                "efuse.rd_key5_data6",
                "efuse.rd_key5_data7",
                "efuse.rd_sys_part2_data0",
                "efuse.rd_sys_part2_data1",
                "efuse.rd_sys_part2_data2",
                "efuse.rd_sys_part2_data3",
                "efuse.rd_sys_part2_data4",
                "efuse.rd_sys_part2_data5",
                "efuse.rd_sys_part2_data6",
                "efuse.rd_sys_part2_data7",
                "efuse.rd_repeat_err0",
                "efuse.rd_repeat_err1",
                "efuse.rd_repeat_err2",
                "efuse.rd_repeat_err3",
                "efuse.rd_repeat_err4",
                "efuse.rd_rs_err0",
                "efuse.rd_rs_err1",
                "efuse.clk",
                "efuse.conf",
                "efuse.status",
                "efuse.cmd",
                "efuse.int_raw",
                "efuse.int_st",
                "efuse.int_ena",
                "efuse.int_clr",
                "efuse.dac_conf",
                "efuse.rd_tim_conf",
                "efuse.wr_tim_conf1",
                "efuse.wr_tim_conf2",
                "efuse.date"
            ],
            "id": "efuse",
            "name": "efuse",
            "offset": "0x60008800",
            "doc": "eFuse Controller"
        },
        "efuse.pgm_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 0th 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data0",
            "name": "pgm_data0",
            "offset": "0x0",
            "doc": "Register 0 that stores data to be programmed."
        },
        "efuse.pgm_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 1st 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data1",
            "name": "pgm_data1",
            "offset": "0x4",
            "doc": "Register 1 that stores data to be programmed."
        },
        "efuse.pgm_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 2nd 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data2",
            "name": "pgm_data2",
            "offset": "0x8",
            "doc": "Register 2 that stores data to be programmed."
        },
        "efuse.pgm_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 3rd 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data3",
            "name": "pgm_data3",
            "offset": "0xc",
            "doc": "Register 3 that stores data to be programmed."
        },
        "efuse.pgm_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 4th 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data4",
            "name": "pgm_data4",
            "offset": "0x10",
            "doc": "Register 4 that stores data to be programmed."
        },
        "efuse.pgm_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 5th 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data5",
            "name": "pgm_data5",
            "offset": "0x14",
            "doc": "Register 5 that stores data to be programmed."
        },
        "efuse.pgm_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 6th 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data6",
            "name": "pgm_data6",
            "offset": "0x18",
            "doc": "Register 6 that stores data to be programmed."
        },
        "efuse.pgm_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_data_7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 7th 32-bit data to be programmed."
                }
            ],
            "id": "efuse.pgm_data7",
            "name": "pgm_data7",
            "offset": "0x1c",
            "doc": "Register 7 that stores data to be programmed."
        },
        "efuse.pgm_check_value0": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_rs_data_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 0th 32-bit RS code to be programmed."
                }
            ],
            "id": "efuse.pgm_check_value0",
            "name": "pgm_check_value0",
            "offset": "0x20",
            "doc": "Register 0 that stores the RS code to be programmed."
        },
        "efuse.pgm_check_value1": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_rs_data_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 1st 32-bit RS code to be programmed."
                }
            ],
            "id": "efuse.pgm_check_value1",
            "name": "pgm_check_value1",
            "offset": "0x24",
            "doc": "Register 1 that stores the RS code to be programmed."
        },
        "efuse.pgm_check_value2": {
            "type": "reg",
            "fields": [
                {
                    "name": "pgm_rs_data_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The content of the 2nd 32-bit RS code to be programmed."
                }
            ],
            "id": "efuse.pgm_check_value2",
            "name": "pgm_check_value2",
            "offset": "0x28",
            "doc": "Register 2 that stores the RS code to be programmed."
        },
        "efuse.rd_wr_dis": {
            "type": "reg",
            "fields": [
                {
                    "name": "wr_dis",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Disable programming of individual eFuses."
                }
            ],
            "id": "efuse.rd_wr_dis",
            "name": "rd_wr_dis",
            "offset": "0x2c",
            "doc": "BLOCK0 data register 0."
        },
        "efuse.rd_repeat_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "power_glitch_dsense",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Sample delay configuration of power glitch."
                },
                {
                    "name": "powerglitch_en",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable power glitch function."
                },
                {
                    "name": "btlc_gpio_enable",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Enable btlc gpio."
                },
                {
                    "name": "vdd_spi_as_gpio",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to vdd spi pin function as gpio."
                },
                {
                    "name": "usb_exchg_pins",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to exchange USB D+ and D- pins."
                },
                {
                    "name": "usb_drefl",
                    "lsb": 23,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Controls single-end input threshold vrefl, 0.8 V to 1.04 V with step of 80 mV, stored in eFuse."
                },
                {
                    "name": "usb_drefh",
                    "lsb": 21,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Controls single-end input threshold vrefh, 1.76 V to 2 V with step of 80 mV, stored in eFuse."
                },
                {
                    "name": "dis_download_manual_encrypt",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable flash encryption when in download boot modes."
                },
                {
                    "name": "dis_pad_jtag",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable JTAG in the hard way. JTAG is disabled permanently."
                },
                {
                    "name": "soft_dis_jtag",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set these bits to disable JTAG in the soft way (odd number 1 means disable ). JTAG can be enabled in HMAC module."
                },
                {
                    "name": "jtag_sel_enable",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable selection between usb_to_jtag and pad_to_jtag through strapping gpio10 when both reg_dis_usb_jtag and reg_dis_pad_jtag are equal to 0."
                },
                {
                    "name": "dis_can",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable CAN function."
                },
                {
                    "name": "rpt4_reserved6",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                },
                {
                    "name": "dis_force_download",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable the function that forces chip into download mode."
                },
                {
                    "name": "dis_usb_device",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable usb device."
                },
                {
                    "name": "dis_download_icache",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable Icache in download mode (boot_mode[3:0] is 0, 1, 2, 3, 6, 7)."
                },
                {
                    "name": "dis_usb_jtag",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable function of usb switch to jtag in module of usb device."
                },
                {
                    "name": "dis_icache",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable Icache."
                },
                {
                    "name": "dis_rtc_ram_boot",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable boot from RTC RAM."
                },
                {
                    "name": "rd_dis",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable reading from BlOCK4-10."
                }
            ],
            "id": "efuse.rd_repeat_data0",
            "name": "rd_repeat_data0",
            "offset": "0x30",
            "doc": "BLOCK0 data register 1."
        },
        "efuse.rd_repeat_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_purpose_1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key1."
                },
                {
                    "name": "key_purpose_0",
                    "lsb": 24,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key0."
                },
                {
                    "name": "secure_boot_key_revoke2",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable revoking third secure boot key."
                },
                {
                    "name": "secure_boot_key_revoke1",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable revoking second secure boot key."
                },
                {
                    "name": "secure_boot_key_revoke0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable revoking first secure boot key."
                },
                {
                    "name": "spi_boot_crypt_cnt",
                    "lsb": 18,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable SPI boot encrypt/decrypt. Odd number of 1: enable. even number of 1: disable."
                },
                {
                    "name": "wdt_delay_sel",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Selects RTC watchdog timeout threshold, in unit of slow clock cycle. 0: 40000. 1: 80000. 2: 160000. 3:320000."
                },
                {
                    "name": "rpt4_reserved2",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                }
            ],
            "id": "efuse.rd_repeat_data1",
            "name": "rd_repeat_data1",
            "offset": "0x34",
            "doc": "BLOCK0 data register 2."
        },
        "efuse.rd_repeat_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "flash_tpuw",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Configures flash waiting time after power-up, in unit of ms. If the value is less than 15, the waiting time is the configurable value; Otherwise, the waiting time is twice the configurable value."
                },
                {
                    "name": "rpt4_reserved0",
                    "lsb": 22,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                },
                {
                    "name": "secure_boot_aggressive_revoke",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable revoking aggressive secure boot."
                },
                {
                    "name": "secure_boot_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable secure boot."
                },
                {
                    "name": "rpt4_reserved3",
                    "lsb": 16,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                },
                {
                    "name": "key_purpose_5",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key5."
                },
                {
                    "name": "key_purpose_4",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key4."
                },
                {
                    "name": "key_purpose_3",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key3."
                },
                {
                    "name": "key_purpose_2",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Purpose of Key2."
                }
            ],
            "id": "efuse.rd_repeat_data2",
            "name": "rd_repeat_data2",
            "offset": "0x38",
            "doc": "BLOCK0 data register 3."
        },
        "efuse.rd_repeat_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rpt4_reserved1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                },
                {
                    "name": "secure_version",
                    "lsb": 14,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Secure version (used by ESP-IDF anti-rollback feature)."
                },
                {
                    "name": "force_send_resume",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to force ROM code to send a resume command during SPI boot."
                },
                {
                    "name": "flash_ecc_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set 1 to enable ECC for flash boot."
                },
                {
                    "name": "flash_page_size",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set Flash page size."
                },
                {
                    "name": "flash_type",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set the maximum lines of SPI flash. 0: four lines. 1: eight lines."
                },
                {
                    "name": "pin_power_selection",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO33-GPIO37 power supply selection in ROM code. 0: VDD3P3_CPU. 1: VDD_SPI."
                },
                {
                    "name": "uart_print_control",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set the default UARTboot message output mode. 00: Enabled. 01: Enabled when GPIO8 is low at reset. 10: Enabled when GPIO8 is high at reset. 11:disabled."
                },
                {
                    "name": "enable_security_download",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to enable secure UART download mode."
                },
                {
                    "name": "dis_usb_download_mode",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable UART download mode through USB."
                },
                {
                    "name": "flash_ecc_mode",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set ECC mode in ROM, 0: ROM would Enable Flash ECC 16to18 byte mode. 1:ROM would use 16to17 byte mode."
                },
                {
                    "name": "uart_print_channel",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Selectes the default UART print channel. 0: UART0. 1: UART1."
                },
                {
                    "name": "dis_legacy_spi_boot",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable Legacy SPI boot mode (boot_mode[3:0] = 4)."
                },
                {
                    "name": "dis_download_mode",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Set this bit to disable download mode (boot_mode[3:0] = 0, 1, 2, 3, 6, 7)."
                }
            ],
            "id": "efuse.rd_repeat_data3",
            "name": "rd_repeat_data3",
            "offset": "0x3c",
            "doc": "BLOCK0 data register 4."
        },
        "efuse.rd_repeat_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rpt4_reserved4",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved (used for four backups method)."
                }
            ],
            "id": "efuse.rd_repeat_data4",
            "name": "rd_repeat_data4",
            "offset": "0x40",
            "doc": "BLOCK0 data register 5."
        },
        "efuse.rd_mac_spi_sys_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "mac_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the low 32 bits of MAC address."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_0",
            "name": "rd_mac_spi_sys_0",
            "offset": "0x44",
            "doc": "BLOCK1 data register 0."
        },
        "efuse.rd_mac_spi_sys_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi_pad_conf_0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth part of SPI_PAD_CONF."
                },
                {
                    "name": "mac_1",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the high 16 bits of MAC address."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_1",
            "name": "rd_mac_spi_sys_1",
            "offset": "0x48",
            "doc": "BLOCK1 data register 1."
        },
        "efuse.rd_mac_spi_sys_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi_pad_conf_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first part of SPI_PAD_CONF."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_2",
            "name": "rd_mac_spi_sys_2",
            "offset": "0x4c",
            "doc": "BLOCK1 data register 2."
        },
        "efuse.rd_mac_spi_sys_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part0_0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fist 14 bits of the zeroth part of system data."
                },
                {
                    "name": "spi_pad_conf_2",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second part of SPI_PAD_CONF."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_3",
            "name": "rd_mac_spi_sys_3",
            "offset": "0x50",
            "doc": "BLOCK1 data register 3."
        },
        "efuse.rd_mac_spi_sys_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part0_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fist 32 bits of the zeroth part of system data."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_4",
            "name": "rd_mac_spi_sys_4",
            "offset": "0x54",
            "doc": "BLOCK1 data register 4."
        },
        "efuse.rd_mac_spi_sys_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part0_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of the zeroth part of system data."
                }
            ],
            "id": "efuse.rd_mac_spi_sys_5",
            "name": "rd_mac_spi_sys_5",
            "offset": "0x58",
            "doc": "BLOCK1 data register 5."
        },
        "efuse.rd_sys_part1_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data0",
            "name": "rd_sys_part1_data0",
            "offset": "0x5c",
            "doc": "Register 0 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data1",
            "name": "rd_sys_part1_data1",
            "offset": "0x60",
            "doc": "Register 1 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data2",
            "name": "rd_sys_part1_data2",
            "offset": "0x64",
            "doc": "Register 2 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data3",
            "name": "rd_sys_part1_data3",
            "offset": "0x68",
            "doc": "Register 3 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data4",
            "name": "rd_sys_part1_data4",
            "offset": "0x6c",
            "doc": "Register 4 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data5",
            "name": "rd_sys_part1_data5",
            "offset": "0x70",
            "doc": "Register 5 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data6",
            "name": "rd_sys_part1_data6",
            "offset": "0x74",
            "doc": "Register 6 of BLOCK2 (system)."
        },
        "efuse.rd_sys_part1_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part1_7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of the first part of system data."
                }
            ],
            "id": "efuse.rd_sys_part1_data7",
            "name": "rd_sys_part1_data7",
            "offset": "0x78",
            "doc": "Register 7 of BLOCK2 (system)."
        },
        "efuse.rd_usr_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data0",
            "name": "rd_usr_data0",
            "offset": "0x7c",
            "doc": "Register 0 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data1",
            "name": "rd_usr_data1",
            "offset": "0x80",
            "doc": "Register 1 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data2",
            "name": "rd_usr_data2",
            "offset": "0x84",
            "doc": "Register 2 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data3",
            "name": "rd_usr_data3",
            "offset": "0x88",
            "doc": "Register 3 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data4",
            "name": "rd_usr_data4",
            "offset": "0x8c",
            "doc": "Register 4 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data5",
            "name": "rd_usr_data5",
            "offset": "0x90",
            "doc": "Register 5 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data6",
            "name": "rd_usr_data6",
            "offset": "0x94",
            "doc": "Register 6 of BLOCK3 (user)."
        },
        "efuse.rd_usr_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of BLOCK3 (user)."
                }
            ],
            "id": "efuse.rd_usr_data7",
            "name": "rd_usr_data7",
            "offset": "0x98",
            "doc": "Register 7 of BLOCK3 (user)."
        },
        "efuse.rd_key0_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data0",
            "name": "rd_key0_data0",
            "offset": "0x9c",
            "doc": "Register 0 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data1",
            "name": "rd_key0_data1",
            "offset": "0xa0",
            "doc": "Register 1 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data2",
            "name": "rd_key0_data2",
            "offset": "0xa4",
            "doc": "Register 2 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data3",
            "name": "rd_key0_data3",
            "offset": "0xa8",
            "doc": "Register 3 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data4",
            "name": "rd_key0_data4",
            "offset": "0xac",
            "doc": "Register 4 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data5",
            "name": "rd_key0_data5",
            "offset": "0xb0",
            "doc": "Register 5 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data6",
            "name": "rd_key0_data6",
            "offset": "0xb4",
            "doc": "Register 6 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key0_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key0_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY0."
                }
            ],
            "id": "efuse.rd_key0_data7",
            "name": "rd_key0_data7",
            "offset": "0xb8",
            "doc": "Register 7 of BLOCK4 (KEY0)."
        },
        "efuse.rd_key1_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data0",
            "name": "rd_key1_data0",
            "offset": "0xbc",
            "doc": "Register 0 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data1",
            "name": "rd_key1_data1",
            "offset": "0xc0",
            "doc": "Register 1 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data2",
            "name": "rd_key1_data2",
            "offset": "0xc4",
            "doc": "Register 2 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data3",
            "name": "rd_key1_data3",
            "offset": "0xc8",
            "doc": "Register 3 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data4",
            "name": "rd_key1_data4",
            "offset": "0xcc",
            "doc": "Register 4 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data5",
            "name": "rd_key1_data5",
            "offset": "0xd0",
            "doc": "Register 5 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data6",
            "name": "rd_key1_data6",
            "offset": "0xd4",
            "doc": "Register 6 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key1_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key1_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY1."
                }
            ],
            "id": "efuse.rd_key1_data7",
            "name": "rd_key1_data7",
            "offset": "0xd8",
            "doc": "Register 7 of BLOCK5 (KEY1)."
        },
        "efuse.rd_key2_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data0",
            "name": "rd_key2_data0",
            "offset": "0xdc",
            "doc": "Register 0 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data1",
            "name": "rd_key2_data1",
            "offset": "0xe0",
            "doc": "Register 1 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data2",
            "name": "rd_key2_data2",
            "offset": "0xe4",
            "doc": "Register 2 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data3",
            "name": "rd_key2_data3",
            "offset": "0xe8",
            "doc": "Register 3 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data4",
            "name": "rd_key2_data4",
            "offset": "0xec",
            "doc": "Register 4 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data5",
            "name": "rd_key2_data5",
            "offset": "0xf0",
            "doc": "Register 5 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data6",
            "name": "rd_key2_data6",
            "offset": "0xf4",
            "doc": "Register 6 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key2_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key2_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY2."
                }
            ],
            "id": "efuse.rd_key2_data7",
            "name": "rd_key2_data7",
            "offset": "0xf8",
            "doc": "Register 7 of BLOCK6 (KEY2)."
        },
        "efuse.rd_key3_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data0",
            "name": "rd_key3_data0",
            "offset": "0xfc",
            "doc": "Register 0 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data1",
            "name": "rd_key3_data1",
            "offset": "0x100",
            "doc": "Register 1 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data2",
            "name": "rd_key3_data2",
            "offset": "0x104",
            "doc": "Register 2 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data3",
            "name": "rd_key3_data3",
            "offset": "0x108",
            "doc": "Register 3 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data4",
            "name": "rd_key3_data4",
            "offset": "0x10c",
            "doc": "Register 4 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data5",
            "name": "rd_key3_data5",
            "offset": "0x110",
            "doc": "Register 5 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data6",
            "name": "rd_key3_data6",
            "offset": "0x114",
            "doc": "Register 6 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key3_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key3_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY3."
                }
            ],
            "id": "efuse.rd_key3_data7",
            "name": "rd_key3_data7",
            "offset": "0x118",
            "doc": "Register 7 of BLOCK7 (KEY3)."
        },
        "efuse.rd_key4_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data0",
            "name": "rd_key4_data0",
            "offset": "0x11c",
            "doc": "Register 0 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data1",
            "name": "rd_key4_data1",
            "offset": "0x120",
            "doc": "Register 1 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data2",
            "name": "rd_key4_data2",
            "offset": "0x124",
            "doc": "Register 2 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data3",
            "name": "rd_key4_data3",
            "offset": "0x128",
            "doc": "Register 3 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data4",
            "name": "rd_key4_data4",
            "offset": "0x12c",
            "doc": "Register 4 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data5",
            "name": "rd_key4_data5",
            "offset": "0x130",
            "doc": "Register 5 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data6",
            "name": "rd_key4_data6",
            "offset": "0x134",
            "doc": "Register 6 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key4_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY4."
                }
            ],
            "id": "efuse.rd_key4_data7",
            "name": "rd_key4_data7",
            "offset": "0x138",
            "doc": "Register 7 of BLOCK8 (KEY4)."
        },
        "efuse.rd_key5_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the zeroth 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data0",
            "name": "rd_key5_data0",
            "offset": "0x13c",
            "doc": "Register 0 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the first 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data1",
            "name": "rd_key5_data1",
            "offset": "0x140",
            "doc": "Register 1 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the second 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data2",
            "name": "rd_key5_data2",
            "offset": "0x144",
            "doc": "Register 2 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the third 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data3",
            "name": "rd_key5_data3",
            "offset": "0x148",
            "doc": "Register 3 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fourth 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data4",
            "name": "rd_key5_data4",
            "offset": "0x14c",
            "doc": "Register 4 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the fifth 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data5",
            "name": "rd_key5_data5",
            "offset": "0x150",
            "doc": "Register 5 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the sixth 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data6",
            "name": "rd_key5_data6",
            "offset": "0x154",
            "doc": "Register 6 of BLOCK9 (KEY5)."
        },
        "efuse.rd_key5_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "key5_data7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the seventh 32 bits of KEY5."
                }
            ],
            "id": "efuse.rd_key5_data7",
            "name": "rd_key5_data7",
            "offset": "0x158",
            "doc": "Register 7 of BLOCK9 (KEY5)."
        },
        "efuse.rd_sys_part2_data0": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 0th 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data0",
            "name": "rd_sys_part2_data0",
            "offset": "0x15c",
            "doc": "Register 0 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data1": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 1st 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data1",
            "name": "rd_sys_part2_data1",
            "offset": "0x160",
            "doc": "Register 1 of BLOCK9 (KEY5)."
        },
        "efuse.rd_sys_part2_data2": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 2nd 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data2",
            "name": "rd_sys_part2_data2",
            "offset": "0x164",
            "doc": "Register 2 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data3": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 3rd 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data3",
            "name": "rd_sys_part2_data3",
            "offset": "0x168",
            "doc": "Register 3 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data4": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 4th 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data4",
            "name": "rd_sys_part2_data4",
            "offset": "0x16c",
            "doc": "Register 4 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data5": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 5th 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data5",
            "name": "rd_sys_part2_data5",
            "offset": "0x170",
            "doc": "Register 5 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data6": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 6th 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data6",
            "name": "rd_sys_part2_data6",
            "offset": "0x174",
            "doc": "Register 6 of BLOCK10 (system)."
        },
        "efuse.rd_sys_part2_data7": {
            "type": "reg",
            "fields": [
                {
                    "name": "sys_data_part2_7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the 7th 32 bits of the 2nd part of system data."
                }
            ],
            "id": "efuse.rd_sys_part2_data7",
            "name": "rd_sys_part2_data7",
            "offset": "0x178",
            "doc": "Register 7 of BLOCK10 (system)."
        },
        "efuse.rd_repeat_err0": {
            "type": "reg",
            "fields": [
                {
                    "name": "power_glitch_dsense_err",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in POWER_GLITCH_DSENSE is 1, then it indicates a programming error."
                },
                {
                    "name": "powerglitch_en_err",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If POWERGLITCH_EN is 1, then it indicates a programming error."
                },
                {
                    "name": "btlc_gpio_enable_err",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in BTLC_GPIO_ENABLE is 1, then it indicates a programming error."
                },
                {
                    "name": "vdd_spi_as_gpio_err",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If VDD_SPI_AS_GPIO is 1, then it indicates a programming error."
                },
                {
                    "name": "usb_exchg_pins_err",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If USB_EXCHG_PINS is 1, then it indicates a programming error."
                },
                {
                    "name": "usb_drefl_err",
                    "lsb": 23,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in USB_DREFL is 1, then it indicates a programming error."
                },
                {
                    "name": "usb_drefh_err",
                    "lsb": 21,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in USB_DREFH is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_download_manual_encrypt_err",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_DOWNLOAD_MANUAL_ENCRYPT is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_pad_jtag_err",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_PAD_JTAG is 1, then it indicates a programming error."
                },
                {
                    "name": "soft_dis_jtag_err",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SOFT_DIS_JTAG is 1, then it indicates a programming error."
                },
                {
                    "name": "jtag_sel_enable_err",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If JTAG_SEL_ENABLE is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_can_err",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_CAN is 1, then it indicates a programming error."
                },
                {
                    "name": "rpt4_reserved6_err",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "dis_force_download_err",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_FORCE_DOWNLOAD is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_usb_device_err",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_USB_DEVICE is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_download_icache_err",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_DOWNLOAD_ICACHE is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_usb_jtag_err",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_USB_JTAG is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_icache_err",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_ICACHE is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_rtc_ram_boot_err",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_RTC_RAM_BOOT is 1, then it indicates a programming error."
                },
                {
                    "name": "rd_dis_err",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in RD_DIS is 1, then it indicates a programming error."
                }
            ],
            "id": "efuse.rd_repeat_err0",
            "name": "rd_repeat_err0",
            "offset": "0x17c",
            "doc": "Programming error record register 0 of BLOCK0."
        },
        "efuse.rd_repeat_err1": {
            "type": "reg",
            "fields": [
                {
                    "name": "key_purpose_1_err",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_1 is 1, then it indicates a programming error."
                },
                {
                    "name": "key_purpose_0_err",
                    "lsb": 24,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_0 is 1, then it indicates a programming error."
                },
                {
                    "name": "secure_boot_key_revoke2_err",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SECURE_BOOT_KEY_REVOKE2 is 1, then it indicates a programming error."
                },
                {
                    "name": "secure_boot_key_revoke1_err",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SECURE_BOOT_KEY_REVOKE1 is 1, then it indicates a programming error."
                },
                {
                    "name": "secure_boot_key_revoke0_err",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SECURE_BOOT_KEY_REVOKE0 is 1, then it indicates a programming error."
                },
                {
                    "name": "spi_boot_crypt_cnt_err",
                    "lsb": 18,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in SPI_BOOT_CRYPT_CNT is 1, then it indicates a programming error."
                },
                {
                    "name": "wdt_delay_sel_err",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in WDT_DELAY_SEL is 1, then it indicates a programming error."
                },
                {
                    "name": "rpt4_reserved2_err",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "efuse.rd_repeat_err1",
            "name": "rd_repeat_err1",
            "offset": "0x180",
            "doc": "Programming error record register 1 of BLOCK0."
        },
        "efuse.rd_repeat_err2": {
            "type": "reg",
            "fields": [
                {
                    "name": "flash_tpuw_err",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in FLASH_TPUM is 1, then it indicates a programming error."
                },
                {
                    "name": "rpt4_reserved0_err",
                    "lsb": 22,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "secure_boot_aggressive_revoke_err",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SECURE_BOOT_AGGRESSIVE_REVOKE is 1, then it indicates a programming error."
                },
                {
                    "name": "secure_boot_en_err",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If SECURE_BOOT_EN is 1, then it indicates a programming error."
                },
                {
                    "name": "rpt4_reserved3_err",
                    "lsb": 16,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "key_purpose_5_err",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_5 is 1, then it indicates a programming error."
                },
                {
                    "name": "key_purpose_4_err",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_4 is 1, then it indicates a programming error."
                },
                {
                    "name": "key_purpose_3_err",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_3 is 1, then it indicates a programming error."
                },
                {
                    "name": "key_purpose_2_err",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in KEY_PURPOSE_2 is 1, then it indicates a programming error."
                }
            ],
            "id": "efuse.rd_repeat_err2",
            "name": "rd_repeat_err2",
            "offset": "0x184",
            "doc": "Programming error record register 2 of BLOCK0."
        },
        "efuse.rd_repeat_err3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rpt4_reserved1_err",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "secure_version_err",
                    "lsb": 14,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in SECURE_VERSION is 1, then it indicates a programming error."
                },
                {
                    "name": "force_send_resume_err",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If FORCE_SEND_RESUME is 1, then it indicates a programming error."
                },
                {
                    "name": "flash_ecc_en_err",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If FLASH_ECC_EN_ERR is 1, then it indicates a programming error."
                },
                {
                    "name": "flash_page_size_err",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bits in FLASH_PAGE_SIZE is 1, then it indicates a programming error."
                },
                {
                    "name": "flash_type_err",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If FLASH_TYPE is 1, then it indicates a programming error."
                },
                {
                    "name": "pin_power_selection_err",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If PIN_POWER_SELECTION is 1, then it indicates a programming error."
                },
                {
                    "name": "uart_print_control_err",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If any bit in UART_PRINT_CONTROL is 1, then it indicates a programming error."
                },
                {
                    "name": "enable_security_download_err",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If ENABLE_SECURITY_DOWNLOAD is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_usb_download_mode_err",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_USB_DOWNLOAD_MODE is 1, then it indicates a programming error."
                },
                {
                    "name": "flash_ecc_mode_err",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If FLASH_ECC_MODE is 1, then it indicates a programming error."
                },
                {
                    "name": "uart_print_channel_err",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If UART_PRINT_CHANNEL is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_legacy_spi_boot_err",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_LEGACY_SPI_BOOT is 1, then it indicates a programming error."
                },
                {
                    "name": "dis_download_mode_err",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "If DIS_DOWNLOAD_MODE is 1, then it indicates a programming error."
                }
            ],
            "id": "efuse.rd_repeat_err3",
            "name": "rd_repeat_err3",
            "offset": "0x188",
            "doc": "Programming error record register 3 of BLOCK0."
        },
        "efuse.rd_repeat_err4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rpt4_reserved4_err",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "efuse.rd_repeat_err4",
            "name": "rd_repeat_err4",
            "offset": "0x190",
            "doc": "Programming error record register 4 of BLOCK0."
        },
        "efuse.rd_rs_err0": {
            "type": "reg",
            "fields": [
                {
                    "name": "key4_fail",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of key4 is reliable 1: Means that programming key4 failed and the number of error bytes is over 6."
                },
                {
                    "name": "key4_err_num",
                    "lsb": 28,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "key3_fail",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of key3 is reliable 1: Means that programming key3 failed and the number of error bytes is over 6."
                },
                {
                    "name": "key3_err_num",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "key2_fail",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of key2 is reliable 1: Means that programming key2 failed and the number of error bytes is over 6."
                },
                {
                    "name": "key2_err_num",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "key1_fail",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of key1 is reliable 1: Means that programming key1 failed and the number of error bytes is over 6."
                },
                {
                    "name": "key1_err_num",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "key0_fail",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of key0 is reliable 1: Means that programming key0 failed and the number of error bytes is over 6."
                },
                {
                    "name": "key0_err_num",
                    "lsb": 12,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "usr_data_fail",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the user data is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
                },
                {
                    "name": "usr_data_err_num",
                    "lsb": 8,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "sys_part1_fail",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of system part1 is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
                },
                {
                    "name": "sys_part1_num",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "mac_spi_8m_fail",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of MAC_SPI_8M is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
                },
                {
                    "name": "mac_spi_8m_err_num",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                }
            ],
            "id": "efuse.rd_rs_err0",
            "name": "rd_rs_err0",
            "offset": "0x1c0",
            "doc": "Programming error record register 0 of BLOCK1-10."
        },
        "efuse.rd_rs_err1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sys_part2_fail",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of system part2 is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
                },
                {
                    "name": "sys_part2_err_num",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                },
                {
                    "name": "key5_fail",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "0: Means no failure and that the data of KEY5 is reliable 1: Means that programming user data failed and the number of error bytes is over 6."
                },
                {
                    "name": "key5_err_num",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of this signal means the number of error bytes."
                }
            ],
            "id": "efuse.rd_rs_err1",
            "name": "rd_rs_err1",
            "offset": "0x1c4",
            "doc": "Programming error record register 1 of BLOCK1-10."
        },
        "efuse.clk": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit and force to enable clock signal of eFuse memory."
                },
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "efuse_mem_force_pu",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to force eFuse SRAM into working mode."
                },
                {
                    "name": "mem_clk_force_on",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit and force to activate clock signal of eFuse SRAM."
                },
                {
                    "name": "efuse_mem_force_pd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to force eFuse SRAM into power-saving mode."
                }
            ],
            "id": "efuse.clk",
            "name": "clk",
            "offset": "0x1c8",
            "doc": "eFuse clcok configuration register."
        },
        "efuse.conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "op_code",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0x5A5A: Operate programming command 0x5AA5: Operate read command."
                }
            ],
            "id": "efuse.conf",
            "name": "conf",
            "offset": "0x1cc",
            "doc": "eFuse operation mode configuraiton register;"
        },
        "efuse.status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "repeat_err_cnt",
                    "lsb": 10,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Indicates the number of error bits during programming BLOCK0."
                },
                {
                    "name": "otp_vddq_is_sw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_VDDQ_IS_SW."
                },
                {
                    "name": "otp_pgenb_sw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_PGENB_SW."
                },
                {
                    "name": "otp_csb_sw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_CSB_SW."
                },
                {
                    "name": "otp_strobe_sw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_STROBE_SW."
                },
                {
                    "name": "otp_vddq_c_sync2",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_VDDQ_C_SYNC2."
                },
                {
                    "name": "otp_load_sw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The value of OTP_LOAD_SW."
                },
                {
                    "name": "state",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Indicates the state of the eFuse state machine."
                }
            ],
            "id": "efuse.status",
            "name": "status",
            "offset": "0x1d0",
            "doc": "eFuse status register."
        },
        "efuse.cmd": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "blk_num",
                    "lsb": 2,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The serial number of the block to be programmed. Value 0-10 corresponds to block number 0-10, respectively."
                },
                {
                    "name": "pgm_cmd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to send programming command."
                },
                {
                    "name": "read_cmd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to send read command."
                }
            ],
            "id": "efuse.cmd",
            "name": "cmd",
            "offset": "0x1d4",
            "doc": "eFuse command register."
        },
        "efuse.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pgm_done_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit signal for pgm_done interrupt."
                },
                {
                    "name": "read_done_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit signal for read_done interrupt."
                }
            ],
            "id": "efuse.int_raw",
            "name": "int_raw",
            "offset": "0x1d8",
            "doc": "eFuse raw interrupt register."
        },
        "efuse.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pgm_done_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status signal for pgm_done interrupt."
                },
                {
                    "name": "read_done_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status signal for read_done interrupt."
                }
            ],
            "id": "efuse.int_st",
            "name": "int_st",
            "offset": "0x1dc",
            "doc": "eFuse interrupt status register."
        },
        "efuse.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pgm_done_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable signal for pgm_done interrupt."
                },
                {
                    "name": "read_done_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable signal for read_done interrupt."
                }
            ],
            "id": "efuse.int_ena",
            "name": "int_ena",
            "offset": "0x1e0",
            "doc": "eFuse interrupt enable register."
        },
        "efuse.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pgm_done_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear signal for pgm_done interrupt."
                },
                {
                    "name": "read_done_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear signal for read_done interrupt."
                }
            ],
            "id": "efuse.int_clr",
            "name": "int_clr",
            "offset": "0x1e4",
            "doc": "eFuse interrupt clear register."
        },
        "efuse.dac_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "oe_clr",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Reduces the power supply of the programming voltage."
                },
                {
                    "name": "dac_num",
                    "lsb": 9,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "Controls the rising period of the programming voltage."
                },
                {
                    "name": "dac_clk_pad_sel",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Don't care."
                },
                {
                    "name": "dac_clk_div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "28",
                    "doc": "Controls the division factor of the rising clock of the programming voltage."
                }
            ],
            "id": "efuse.dac_conf",
            "name": "dac_conf",
            "offset": "0x1e8",
            "doc": "Controls the eFuse programming voltage."
        },
        "efuse.rd_tim_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "read_init_num",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "18",
                    "doc": "Configures the initial read time of eFuse."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "efuse.rd_tim_conf",
            "name": "rd_tim_conf",
            "offset": "0x1ec",
            "doc": "Configures read timing parameters."
        },
        "efuse.wr_tim_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pwr_on_num",
                    "lsb": 8,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "10368",
                    "doc": "Configures the power up time for VDDQ."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "efuse.wr_tim_conf1",
            "name": "wr_tim_conf1",
            "offset": "0x1f0",
            "doc": "Configurarion register 1 of eFuse programming timing parameters."
        },
        "efuse.wr_tim_conf2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pwr_off_num",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "400",
                    "doc": "Configures the power outage time for VDDQ."
                }
            ],
            "id": "efuse.wr_tim_conf2",
            "name": "wr_tim_conf2",
            "offset": "0x1f4",
            "doc": "Configurarion register 2 of eFuse programming timing parameters."
        },
        "efuse.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583616",
                    "doc": "Stores eFuse version."
                }
            ],
            "id": "efuse.date",
            "name": "date",
            "offset": "0x1fc",
            "doc": "eFuse version register."
        },
        "extmem": {
            "type": "blk",
            "children": [
                "extmem.icache_ctrl",
                "extmem.icache_ctrl1",
                "extmem.icache_tag_power_ctrl",
                "extmem.icache_prelock_ctrl",
                "extmem.icache_prelock_sct0_addr",
                "extmem.icache_prelock_sct1_addr",
                "extmem.icache_prelock_sct_size",
                "extmem.icache_lock_ctrl",
                "extmem.icache_lock_addr",
                "extmem.icache_lock_size",
                "extmem.icache_sync_ctrl",
                "extmem.icache_sync_addr",
                "extmem.icache_sync_size",
                "extmem.icache_preload_ctrl",
                "extmem.icache_preload_addr",
                "extmem.icache_preload_size",
                "extmem.icache_autoload_ctrl",
                "extmem.icache_autoload_sct0_addr",
                "extmem.icache_autoload_sct0_size",
                "extmem.icache_autoload_sct1_addr",
                "extmem.icache_autoload_sct1_size",
                "extmem.ibus_to_flash_start_vaddr",
                "extmem.ibus_to_flash_end_vaddr",
                "extmem.dbus_to_flash_start_vaddr",
                "extmem.dbus_to_flash_end_vaddr",
                "extmem.cache_acs_cnt_clr",
                "extmem.ibus_acs_miss_cnt",
                "extmem.ibus_acs_cnt",
                "extmem.dbus_acs_flash_miss_cnt",
                "extmem.dbus_acs_cnt",
                "extmem.cache_ilg_int_ena",
                "extmem.cache_ilg_int_clr",
                "extmem.cache_ilg_int_st",
                "extmem.core0_acs_cache_int_ena",
                "extmem.core0_acs_cache_int_clr",
                "extmem.core0_acs_cache_int_st",
                "extmem.core0_dbus_reject_st",
                "extmem.core0_dbus_reject_vaddr",
                "extmem.core0_ibus_reject_st",
                "extmem.core0_ibus_reject_vaddr",
                "extmem.cache_mmu_fault_content",
                "extmem.cache_mmu_fault_vaddr",
                "extmem.cache_wrap_around_ctrl",
                "extmem.cache_mmu_power_ctrl",
                "extmem.cache_state",
                "extmem.cache_encrypt_decrypt_record_disable",
                "extmem.cache_encrypt_decrypt_clk_force_on",
                "extmem.cache_preload_int_ctrl",
                "extmem.cache_sync_int_ctrl",
                "extmem.cache_mmu_owner",
                "extmem.cache_conf_misc",
                "extmem.icache_freeze",
                "extmem.icache_atomic_operate_ena",
                "extmem.cache_request",
                "extmem.ibus_pms_tbl_lock",
                "extmem.ibus_pms_tbl_boundary0",
                "extmem.ibus_pms_tbl_boundary1",
                "extmem.ibus_pms_tbl_boundary2",
                "extmem.ibus_pms_tbl_attr",
                "extmem.dbus_pms_tbl_lock",
                "extmem.dbus_pms_tbl_boundary0",
                "extmem.dbus_pms_tbl_boundary1",
                "extmem.dbus_pms_tbl_boundary2",
                "extmem.dbus_pms_tbl_attr",
                "extmem.clock_gate",
                "extmem.reg_date"
            ],
            "id": "extmem",
            "name": "extmem",
            "offset": "0x600c4000",
            "doc": "External Memory"
        },
        "extmem.icache_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_enable",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to activate the data cache. 0: disable, 1: enable"
                }
            ],
            "id": "extmem.icache_ctrl",
            "name": "icache_ctrl",
            "offset": "0x0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_ctrl1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_shut_dbus",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to disable core1 ibus, 0: enable, 1: disable"
                },
                {
                    "name": "icache_shut_ibus",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to disable core0 ibus, 0: enable, 1: disable"
                }
            ],
            "id": "extmem.icache_ctrl1",
            "name": "icache_ctrl1",
            "offset": "0x4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_tag_power_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_tag_mem_force_pu",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to power  icache tag memory up, 0: follow rtc_lslp, 1: power up"
                },
                {
                    "name": "icache_tag_mem_force_pd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to power  icache tag memory down, 0: follow rtc_lslp, 1: power down"
                },
                {
                    "name": "icache_tag_mem_force_on",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to close clock gating of  icache tag memory. 1: close gating, 0: open clock gating."
                }
            ],
            "id": "extmem.icache_tag_power_ctrl",
            "name": "icache_tag_power_ctrl",
            "offset": "0x8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_prelock_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_prelock_sct1_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the second section of prelock function."
                },
                {
                    "name": "icache_prelock_sct0_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the first section of prelock function."
                }
            ],
            "id": "extmem.icache_prelock_ctrl",
            "name": "icache_prelock_ctrl",
            "offset": "0xc",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_prelock_sct0_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_prelock_sct0_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the first start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT0_SIZE_REG"
                }
            ],
            "id": "extmem.icache_prelock_sct0_addr",
            "name": "icache_prelock_sct0_addr",
            "offset": "0x10",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_prelock_sct1_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_prelock_sct1_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the second start virtual address of data prelock, which is combined with ICACHE_PRELOCK_SCT1_SIZE_REG"
                }
            ],
            "id": "extmem.icache_prelock_sct1_addr",
            "name": "icache_prelock_sct1_addr",
            "offset": "0x14",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_prelock_sct_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_prelock_sct0_size",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the first length of data locking, which is combined with ICACHE_PRELOCK_SCT0_ADDR_REG"
                },
                {
                    "name": "icache_prelock_sct1_size",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the second length of data locking, which is combined with ICACHE_PRELOCK_SCT1_ADDR_REG"
                }
            ],
            "id": "extmem.icache_prelock_sct_size",
            "name": "icache_prelock_sct_size",
            "offset": "0x18",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_lock_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_lock_done",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "The bit is used to indicate unlock/lock operation is finished."
                },
                {
                    "name": "icache_unlock_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable unlock operation. It will be cleared by hardware after unlock operation done."
                },
                {
                    "name": "icache_lock_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable lock operation. It will be cleared by hardware after lock operation done."
                }
            ],
            "id": "extmem.icache_lock_ctrl",
            "name": "icache_lock_ctrl",
            "offset": "0x1c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_lock_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_lock_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the start virtual address for lock operations. It should be combined with ICACHE_LOCK_SIZE_REG."
                }
            ],
            "id": "extmem.icache_lock_addr",
            "name": "icache_lock_addr",
            "offset": "0x20",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_lock_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_lock_size",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the length for lock operations. The bits are the counts of cache block. It should be combined with ICACHE_LOCK_ADDR_REG."
                }
            ],
            "id": "extmem.icache_lock_size",
            "name": "icache_lock_size",
            "offset": "0x24",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_sync_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_sync_done",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate invalidate operation is finished."
                },
                {
                    "name": "icache_invalidate_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to enable invalidate operation. It will be cleared by hardware after invalidate operation done."
                }
            ],
            "id": "extmem.icache_sync_ctrl",
            "name": "icache_sync_ctrl",
            "offset": "0x28",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_sync_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_sync_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the start virtual address for clean operations. It should be combined with ICACHE_SYNC_SIZE_REG."
                }
            ],
            "id": "extmem.icache_sync_addr",
            "name": "icache_sync_addr",
            "offset": "0x2c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_sync_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_sync_size",
                    "lsb": 0,
                    "nbits": 23,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the length for sync operations. The bits are the counts of cache block. It should be combined with ICACHE_SYNC_ADDR_REG."
                }
            ],
            "id": "extmem.icache_sync_size",
            "name": "icache_sync_size",
            "offset": "0x30",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_preload_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_order",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure the direction of preload operation. 1: descending, 0: ascending."
                },
                {
                    "name": "icache_preload_done",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "The bit is used to indicate preload operation is finished."
                },
                {
                    "name": "icache_preload_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable preload operation. It will be cleared by hardware after preload operation done."
                }
            ],
            "id": "extmem.icache_preload_ctrl",
            "name": "icache_preload_ctrl",
            "offset": "0x34",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_preload_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_preload_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the start virtual address for preload operation. It should be combined with ICACHE_PRELOAD_SIZE_REG."
                }
            ],
            "id": "extmem.icache_preload_addr",
            "name": "icache_preload_addr",
            "offset": "0x38",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_preload_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_size",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the length for preload operation. The bits are the counts of cache block. It should be combined with ICACHE_PRELOAD_ADDR_REG.."
                }
            ],
            "id": "extmem.icache_preload_size",
            "name": "icache_preload_size",
            "offset": "0x3c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_autoload_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_autoload_rqst",
                    "lsb": 5,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure trigger conditions for autoload. 0/3: cache miss, 1: cache hit, 2: both cache miss and hit."
                },
                {
                    "name": "icache_autoload_order",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the direction of autoload. 1: descending, 0: ascending."
                },
                {
                    "name": "icache_autoload_done",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "The bit is used to indicate autoload operation is finished."
                },
                {
                    "name": "icache_autoload_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable and disable autoload operation. It is combined with icache_autoload_done. 1: enable, 0: disable."
                },
                {
                    "name": "icache_autoload_sct1_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to enable the second section for autoload operation."
                },
                {
                    "name": "icache_autoload_sct0_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to enable the first section for autoload operation."
                }
            ],
            "id": "extmem.icache_autoload_ctrl",
            "name": "icache_autoload_ctrl",
            "offset": "0x40",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_autoload_sct0_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_autoload_sct0_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the start virtual address of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena."
                }
            ],
            "id": "extmem.icache_autoload_sct0_addr",
            "name": "icache_autoload_sct0_addr",
            "offset": "0x44",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_autoload_sct0_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_autoload_sct0_size",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the length of the first section for autoload operation. It should be combined with icache_autoload_sct0_ena."
                }
            ],
            "id": "extmem.icache_autoload_sct0_size",
            "name": "icache_autoload_sct0_size",
            "offset": "0x48",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_autoload_sct1_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "icache_autoload_sct1_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the start virtual address of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena."
                }
            ],
            "id": "extmem.icache_autoload_sct1_addr",
            "name": "icache_autoload_sct1_addr",
            "offset": "0x4c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_autoload_sct1_size": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_autoload_sct1_size",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to configure the length of the second section for autoload operation. It should be combined with icache_autoload_sct1_ena."
                }
            ],
            "id": "extmem.icache_autoload_sct1_size",
            "name": "icache_autoload_sct1_size",
            "offset": "0x50",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_to_flash_start_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "ibus_to_flash_start_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1107296256",
                    "doc": "The bits are used to configure the start virtual address of ibus to access flash. The register is used to give constraints to ibus access counter."
                }
            ],
            "id": "extmem.ibus_to_flash_start_vaddr",
            "name": "ibus_to_flash_start_vaddr",
            "offset": "0x54",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_to_flash_end_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "ibus_to_flash_end_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1115684863",
                    "doc": "The bits are used to configure the end virtual address of ibus to access flash. The register is used to give constraints to ibus access counter."
                }
            ],
            "id": "extmem.ibus_to_flash_end_vaddr",
            "name": "ibus_to_flash_end_vaddr",
            "offset": "0x58",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_to_flash_start_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "dbus_to_flash_start_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1006632960",
                    "doc": "The bits are used to configure the start virtual address of dbus to access flash. The register is used to give constraints to dbus access counter."
                }
            ],
            "id": "extmem.dbus_to_flash_start_vaddr",
            "name": "dbus_to_flash_start_vaddr",
            "offset": "0x5c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_to_flash_end_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "dbus_to_flash_end_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1015021567",
                    "doc": "The bits are used to configure the end virtual address of dbus to access flash. The register is used to give constraints to dbus access counter."
                }
            ],
            "id": "extmem.dbus_to_flash_end_vaddr",
            "name": "dbus_to_flash_end_vaddr",
            "offset": "0x60",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_acs_cnt_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_acs_cnt_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear dbus counter."
                },
                {
                    "name": "ibus_acs_cnt_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear ibus counter."
                }
            ],
            "id": "extmem.cache_acs_cnt_clr",
            "name": "cache_acs_cnt_clr",
            "offset": "0x64",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_acs_miss_cnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "ibus_acs_miss_cnt",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to count the number of the cache miss caused by ibus access flash."
                }
            ],
            "id": "extmem.ibus_acs_miss_cnt",
            "name": "ibus_acs_miss_cnt",
            "offset": "0x68",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_acs_cnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "ibus_acs_cnt",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to count the number of ibus access flash through icache."
                }
            ],
            "id": "extmem.ibus_acs_cnt",
            "name": "ibus_acs_cnt",
            "offset": "0x6c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_acs_flash_miss_cnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "dbus_acs_flash_miss_cnt",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to count the number of the cache miss caused by dbus access flash."
                }
            ],
            "id": "extmem.dbus_acs_flash_miss_cnt",
            "name": "dbus_acs_flash_miss_cnt",
            "offset": "0x70",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_acs_cnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "dbus_acs_cnt",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to count the number of dbus access flash through icache."
                }
            ],
            "id": "extmem.dbus_acs_cnt",
            "name": "dbus_acs_cnt",
            "offset": "0x74",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_ilg_int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_cnt_ovf_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by dbus counter overflow."
                },
                {
                    "name": "ibus_cnt_ovf_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by ibus counter overflow."
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mmu_entry_fault_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by mmu entry fault."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_op_fault_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by preload configurations fault."
                },
                {
                    "name": "icache_sync_op_fault_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by sync configurations fault."
                }
            ],
            "id": "extmem.cache_ilg_int_ena",
            "name": "cache_ilg_int_ena",
            "offset": "0x78",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_ilg_int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_cnt_ovf_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by dbus counter overflow."
                },
                {
                    "name": "ibus_cnt_ovf_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by ibus counter overflow."
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mmu_entry_fault_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by mmu entry fault."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_op_fault_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by preload configurations fault."
                },
                {
                    "name": "icache_sync_op_fault_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by sync configurations fault."
                }
            ],
            "id": "extmem.cache_ilg_int_clr",
            "name": "cache_ilg_int_clr",
            "offset": "0x7c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_ilg_int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_acs_flash_miss_cnt_ovf_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by dbus access flash miss counter overflow."
                },
                {
                    "name": "dbus_acs_cnt_ovf_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by dbus access flash/spiram counter overflow."
                },
                {
                    "name": "ibus_acs_miss_cnt_ovf_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by ibus access flash/spiram miss counter overflow."
                },
                {
                    "name": "ibus_acs_cnt_ovf_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by ibus access flash/spiram counter overflow."
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mmu_entry_fault_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by mmu entry fault."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_op_fault_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by preload configurations fault."
                },
                {
                    "name": "icache_sync_op_fault_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by sync configurations fault."
                }
            ],
            "id": "extmem.cache_ilg_int_st",
            "name": "cache_ilg_int_st",
            "offset": "0x80",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_acs_cache_int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core0_dbus_wr_ic_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by dbus trying to write icache"
                },
                {
                    "name": "core0_dbus_reject_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by authentication fail."
                },
                {
                    "name": "core0_dbus_acs_msk_ic_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by cpu access icache while the corresponding dbus is disabled which include speculative access."
                },
                {
                    "name": "core0_ibus_reject_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by authentication fail."
                },
                {
                    "name": "core0_ibus_wr_ic_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by ibus trying to write icache"
                },
                {
                    "name": "core0_ibus_acs_msk_ic_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable interrupt by cpu access icache while the corresponding ibus is disabled which include speculative access."
                }
            ],
            "id": "extmem.core0_acs_cache_int_ena",
            "name": "core0_acs_cache_int_ena",
            "offset": "0x84",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_acs_cache_int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core0_dbus_wr_ic_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by dbus trying to write icache"
                },
                {
                    "name": "core0_dbus_reject_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by authentication fail."
                },
                {
                    "name": "core0_dbus_acs_msk_ic_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by cpu access icache while the corresponding dbus is disabled or icache is disabled which include speculative access."
                },
                {
                    "name": "core0_ibus_reject_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by authentication fail."
                },
                {
                    "name": "core0_ibus_wr_ic_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by ibus trying to write icache"
                },
                {
                    "name": "core0_ibus_acs_msk_ic_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear interrupt by cpu access icache while the corresponding ibus is disabled or icache is disabled which include speculative access."
                }
            ],
            "id": "extmem.core0_acs_cache_int_clr",
            "name": "core0_acs_cache_int_clr",
            "offset": "0x88",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_acs_cache_int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core0_dbus_wr_icache_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by dbus trying to write icache"
                },
                {
                    "name": "core0_dbus_reject_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by authentication fail."
                },
                {
                    "name": "core0_dbus_acs_msk_icache_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by cpu access icache while the core0_dbus is disabled or icache is disabled which include speculative access."
                },
                {
                    "name": "core0_ibus_reject_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by authentication fail."
                },
                {
                    "name": "core0_ibus_wr_icache_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by ibus trying to write icache"
                },
                {
                    "name": "core0_ibus_acs_msk_icache_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate interrupt by cpu access  icache while the core0_ibus is disabled or icache is disabled which include speculative access."
                }
            ],
            "id": "extmem.core0_acs_cache_int_st",
            "name": "core0_acs_cache_int_st",
            "offset": "0x8c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_dbus_reject_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core0_dbus_world",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate the world of CPU access dbus when authentication fail. 0: WORLD0, 1: WORLD1"
                },
                {
                    "name": "core0_dbus_attr",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to indicate the attribute of CPU access dbus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able, 4: write-able."
                }
            ],
            "id": "extmem.core0_dbus_reject_st",
            "name": "core0_dbus_reject_st",
            "offset": "0x90",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_dbus_reject_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "core0_dbus_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "4294967295",
                    "doc": "The bits are used to indicate the virtual address of CPU access dbus when authentication fail."
                }
            ],
            "id": "extmem.core0_dbus_reject_vaddr",
            "name": "core0_dbus_reject_vaddr",
            "offset": "0x94",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_ibus_reject_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core0_ibus_world",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate the world of CPU access ibus when authentication fail. 0: WORLD0, 1: WORLD1"
                },
                {
                    "name": "core0_ibus_attr",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to indicate the attribute of CPU access ibus when authentication fail. 0: invalidate, 1: execute-able, 2: read-able"
                }
            ],
            "id": "extmem.core0_ibus_reject_st",
            "name": "core0_ibus_reject_st",
            "offset": "0x98",
            "doc": "This description will be updated in the near future."
        },
        "extmem.core0_ibus_reject_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "core0_ibus_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "4294967295",
                    "doc": "The bits are used to indicate the virtual address of CPU access  ibus when authentication fail."
                }
            ],
            "id": "extmem.core0_ibus_reject_vaddr",
            "name": "core0_ibus_reject_vaddr",
            "offset": "0x9c",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_mmu_fault_content": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_mmu_fault_code",
                    "lsb": 10,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The right-most 3 bits are used to indicate the operations which cause mmu fault occurrence. 0: default, 1: cpu miss, 2: preload miss, 3: writeback, 4: cpu miss evict recovery address, 5: load miss evict recovery address, 6: external dma tx, 7: external dma rx. The most significant bit is used to indicate this operation occurs in which one icache."
                },
                {
                    "name": "cache_mmu_fault_content",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to indicate the content of mmu entry which cause mmu fault.."
                }
            ],
            "id": "extmem.cache_mmu_fault_content",
            "name": "cache_mmu_fault_content",
            "offset": "0xa0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_mmu_fault_vaddr": {
            "type": "reg",
            "fields": [
                {
                    "name": "cache_mmu_fault_vaddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bits are used to indicate the virtual address which cause mmu fault.."
                }
            ],
            "id": "extmem.cache_mmu_fault_vaddr",
            "name": "cache_mmu_fault_vaddr",
            "offset": "0xa4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_wrap_around_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_flash_wrap_around",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable wrap around mode when read data from flash."
                }
            ],
            "id": "extmem.cache_wrap_around_ctrl",
            "name": "cache_wrap_around_ctrl",
            "offset": "0xa8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_mmu_power_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_mmu_mem_force_pu",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power up"
                },
                {
                    "name": "cache_mmu_mem_force_pd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to power mmu memory down, 0: follow_rtc_lslp_pd, 1: power down"
                },
                {
                    "name": "cache_mmu_mem_force_on",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to enable clock gating to save power when access mmu memory, 0: enable, 1: disable"
                }
            ],
            "id": "extmem.cache_mmu_power_ctrl",
            "name": "cache_mmu_power_ctrl",
            "offset": "0xac",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_state",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "The bit is used to indicate whether  icache main fsm is in idle state or not. 1: in idle state,  0: not in idle state"
                }
            ],
            "id": "extmem.cache_state",
            "name": "cache_state",
            "offset": "0xb0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_encrypt_decrypt_record_disable": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "record_disable_g0cb_decrypt",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "record_disable_db_encrypt",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "extmem.cache_encrypt_decrypt_record_disable",
            "name": "cache_encrypt_decrypt_record_disable",
            "offset": "0xb4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_encrypt_decrypt_clk_force_on": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_force_on_crypt",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to close clock gating of external memory encrypt and decrypt clock. 1: close gating, 0: open clock gating."
                },
                {
                    "name": "clk_force_on_auto_crypt",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to close clock gating of automatic crypt clock. 1: close gating, 0: open clock gating."
                },
                {
                    "name": "clk_force_on_manual_crypt",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to close clock gating of manual crypt clock. 1: close gating, 0: open clock gating."
                }
            ],
            "id": "extmem.cache_encrypt_decrypt_clk_force_on",
            "name": "cache_encrypt_decrypt_clk_force_on",
            "offset": "0xb8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_preload_int_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear the interrupt by  icache pre-load done."
                },
                {
                    "name": "icache_preload_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the interrupt by  icache pre-load done."
                },
                {
                    "name": "icache_preload_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate the interrupt by  icache pre-load done."
                }
            ],
            "id": "extmem.cache_preload_int_ctrl",
            "name": "cache_preload_int_ctrl",
            "offset": "0xbc",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_sync_int_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_sync_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The bit is used to clear the interrupt by  icache sync done."
                },
                {
                    "name": "icache_sync_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the interrupt by  icache sync done."
                },
                {
                    "name": "icache_sync_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate the interrupt by  icache sync done."
                }
            ],
            "id": "extmem.cache_sync_int_ctrl",
            "name": "cache_sync_int_ctrl",
            "offset": "0xc0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_mmu_owner": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_mmu_owner",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to specify the owner of MMU.bit0/bit2: ibus, bit1/bit3: dbus"
                }
            ],
            "id": "extmem.cache_mmu_owner",
            "name": "cache_mmu_owner",
            "offset": "0xc4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_conf_misc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_trace_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to enable cache trace function."
                },
                {
                    "name": "cache_ignore_sync_mmu_entry_fault",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to disable checking mmu entry fault by sync operation."
                },
                {
                    "name": "cache_ignore_preload_mmu_entry_fault",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to disable checking mmu entry fault by preload operation."
                }
            ],
            "id": "extmem.cache_conf_misc",
            "name": "cache_conf_misc",
            "offset": "0xc8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_freeze": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "done",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The bit is used to indicate icache freeze success"
                },
                {
                    "name": "mode",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure freeze mode, 0:  assert busy if CPU miss 1: assert hit if CPU miss"
                },
                {
                    "name": "ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable icache freeze mode"
                }
            ],
            "id": "extmem.icache_freeze",
            "name": "icache_freeze",
            "offset": "0xcc",
            "doc": "This description will be updated in the near future."
        },
        "extmem.icache_atomic_operate_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_atomic_operate_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to activate icache atomic operation protection. In this case, sync/lock operation can not interrupt miss-work. This feature does not work during invalidateAll operation."
                }
            ],
            "id": "extmem.icache_atomic_operate_ena",
            "name": "icache_atomic_operate_ena",
            "offset": "0xd0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.cache_request": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bypass",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to disable request recording which could cause performance issue"
                }
            ],
            "id": "extmem.cache_request",
            "name": "cache_request",
            "offset": "0xd4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_pms_tbl_lock": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibus_pms_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure the ibus permission control section boundary0"
                }
            ],
            "id": "extmem.ibus_pms_tbl_lock",
            "name": "ibus_pms_tbl_lock",
            "offset": "0xd8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_pms_tbl_boundary0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibus_pms_boundary0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure the ibus permission control section boundary0"
                }
            ],
            "id": "extmem.ibus_pms_tbl_boundary0",
            "name": "ibus_pms_tbl_boundary0",
            "offset": "0xdc",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_pms_tbl_boundary1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibus_pms_boundary1",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "2048",
                    "doc": "The bit is used to configure the ibus permission control section boundary1"
                }
            ],
            "id": "extmem.ibus_pms_tbl_boundary1",
            "name": "ibus_pms_tbl_boundary1",
            "offset": "0xe0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_pms_tbl_boundary2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibus_pms_boundary2",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "2048",
                    "doc": "The bit is used to configure the ibus permission control section boundary2"
                }
            ],
            "id": "extmem.ibus_pms_tbl_boundary2",
            "name": "ibus_pms_tbl_boundary2",
            "offset": "0xe4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.ibus_pms_tbl_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibus_pms_sct2_attr",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "The bit is used to configure attribute of the ibus permission control section2, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1"
                },
                {
                    "name": "ibus_pms_sct1_attr",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "The bit is used to configure attribute of the ibus permission control section1, bit0: fetch in world0, bit1: load in world0, bit2: fetch in world1, bit3: load in world1"
                }
            ],
            "id": "extmem.ibus_pms_tbl_attr",
            "name": "ibus_pms_tbl_attr",
            "offset": "0xe8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_pms_tbl_lock": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_pms_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure the ibus permission control section boundary0"
                }
            ],
            "id": "extmem.dbus_pms_tbl_lock",
            "name": "dbus_pms_tbl_lock",
            "offset": "0xec",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_pms_tbl_boundary0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_pms_boundary0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to configure the dbus permission control section boundary0"
                }
            ],
            "id": "extmem.dbus_pms_tbl_boundary0",
            "name": "dbus_pms_tbl_boundary0",
            "offset": "0xf0",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_pms_tbl_boundary1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_pms_boundary1",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "2048",
                    "doc": "The bit is used to configure the dbus permission control section boundary1"
                }
            ],
            "id": "extmem.dbus_pms_tbl_boundary1",
            "name": "dbus_pms_tbl_boundary1",
            "offset": "0xf4",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_pms_tbl_boundary2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_pms_boundary2",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "2048",
                    "doc": "The bit is used to configure the dbus permission control section boundary2"
                }
            ],
            "id": "extmem.dbus_pms_tbl_boundary2",
            "name": "dbus_pms_tbl_boundary2",
            "offset": "0xf8",
            "doc": "This description will be updated in the near future."
        },
        "extmem.dbus_pms_tbl_attr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbus_pms_sct2_attr",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "The bit is used to configure attribute of the dbus permission control section2, bit0: load in world0, bit2: load in world1"
                },
                {
                    "name": "dbus_pms_sct1_attr",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "The bit is used to configure attribute of the dbus permission control section1, bit0: load in world0, bit2: load in world1"
                }
            ],
            "id": "extmem.dbus_pms_tbl_attr",
            "name": "dbus_pms_tbl_attr",
            "offset": "0xfc",
            "doc": "This description will be updated in the near future."
        },
        "extmem.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "clock gate enable."
                }
            ],
            "id": "extmem.clock_gate",
            "name": "clock_gate",
            "offset": "0x100",
            "doc": "This description will be updated in the near future."
        },
        "extmem.reg_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583456",
                    "doc": "version information"
                }
            ],
            "id": "extmem.reg_date",
            "name": "reg_date",
            "offset": "0x3fc",
            "doc": "This description will be updated in the near future."
        },
        "gpio": {
            "type": "blk",
            "children": [
                "gpio.bt_select",
                "gpio.out",
                "gpio.out_w1ts",
                "gpio.out_w1tc",
                "gpio.sdio_select",
                "gpio.enable",
                "gpio.enable_w1ts",
                "gpio.enable_w1tc",
                "gpio.strap",
                "gpio.in",
                "gpio.status",
                "gpio.status_w1ts",
                "gpio.status_w1tc",
                "gpio.pcpu_int",
                "gpio.pcpu_nmi_int",
                "gpio.cpusdio_int",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.pin%s",
                "gpio.status_next",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_in_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.func%s_out_sel_cfg",
                "gpio.clock_gate",
                "gpio.reg_date"
            ],
            "id": "gpio",
            "name": "gpio",
            "offset": "0x60004000",
            "doc": "General Purpose Input/Output"
        },
        "gpio.bt_select": {
            "type": "reg",
            "fields": [
                {
                    "name": "bt_sel",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "GPIO bit select register"
                }
            ],
            "id": "gpio.bt_select",
            "name": "bt_select",
            "offset": "0x0",
            "doc": "GPIO bit select register"
        },
        "gpio.out": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "data_orig",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "GPIO output register for GPIO0-25"
                }
            ],
            "id": "gpio.out",
            "name": "out",
            "offset": "0x4",
            "doc": "GPIO output register"
        },
        "gpio.out_w1ts": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_w1ts",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO output set register for GPIO0-25"
                }
            ],
            "id": "gpio.out_w1ts",
            "name": "out_w1ts",
            "offset": "0x8",
            "doc": "GPIO output set register"
        },
        "gpio.out_w1tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_w1tc",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO output clear register for GPIO0-25"
                }
            ],
            "id": "gpio.out_w1tc",
            "name": "out_w1tc",
            "offset": "0xc",
            "doc": "GPIO output clear register"
        },
        "gpio.sdio_select": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sdio_sel",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "GPIO sdio select register"
                }
            ],
            "id": "gpio.sdio_select",
            "name": "sdio_select",
            "offset": "0x1c",
            "doc": "GPIO sdio select register"
        },
        "gpio.enable": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "data",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "GPIO output enable register for GPIO0-25"
                }
            ],
            "id": "gpio.enable",
            "name": "enable",
            "offset": "0x20",
            "doc": "GPIO output enable register"
        },
        "gpio.enable_w1ts": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "enable_w1ts",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO output enable set register for GPIO0-25"
                }
            ],
            "id": "gpio.enable_w1ts",
            "name": "enable_w1ts",
            "offset": "0x24",
            "doc": "GPIO output enable set register"
        },
        "gpio.enable_w1tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "enable_w1tc",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO output enable clear register for GPIO0-25"
                }
            ],
            "id": "gpio.enable_w1tc",
            "name": "enable_w1tc",
            "offset": "0x28",
            "doc": "GPIO output enable clear register"
        },
        "gpio.strap": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "strapping",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "pad strapping register"
                }
            ],
            "id": "gpio.strap",
            "name": "strap",
            "offset": "0x38",
            "doc": "pad strapping register"
        },
        "gpio.in": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "data_next",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO input register for GPIO0-25"
                }
            ],
            "id": "gpio.in",
            "name": "in",
            "offset": "0x3c",
            "doc": "GPIO input register"
        },
        "gpio.status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "interrupt",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "GPIO interrupt status register for GPIO0-25"
                }
            ],
            "id": "gpio.status",
            "name": "status",
            "offset": "0x44",
            "doc": "GPIO interrupt status register"
        },
        "gpio.status_w1ts": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "status_w1ts",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO interrupt status set register for GPIO0-25"
                }
            ],
            "id": "gpio.status_w1ts",
            "name": "status_w1ts",
            "offset": "0x48",
            "doc": "GPIO interrupt status set register"
        },
        "gpio.status_w1tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "status_w1tc",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "GPIO interrupt status clear register for GPIO0-25"
                }
            ],
            "id": "gpio.status_w1tc",
            "name": "status_w1tc",
            "offset": "0x4c",
            "doc": "GPIO interrupt status clear register"
        },
        "gpio.pcpu_int": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "procpu_int",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO PRO_CPU interrupt status register for GPIO0-25"
                }
            ],
            "id": "gpio.pcpu_int",
            "name": "pcpu_int",
            "offset": "0x5c",
            "doc": "GPIO PRO_CPU interrupt status register"
        },
        "gpio.pcpu_nmi_int": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "procpu_nmi_int",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO PRO_CPU(not shielded) interrupt status register for GPIO0-25"
                }
            ],
            "id": "gpio.pcpu_nmi_int",
            "name": "pcpu_nmi_int",
            "offset": "0x60",
            "doc": "GPIO PRO_CPU(not shielded) interrupt status register"
        },
        "gpio.cpusdio_int": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sdio_int",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO CPUSDIO interrupt status register for GPIO0-25"
                }
            ],
            "id": "gpio.cpusdio_int",
            "name": "cpusdio_int",
            "offset": "0x64",
            "doc": "GPIO CPUSDIO interrupt status register"
        },
        "gpio.pin%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pin_int_ena",
                    "lsb": 13,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set bit 13 to enable CPU interrupt. set bit 14 to enable CPU(not shielded) interrupt."
                },
                {
                    "name": "pin_config",
                    "lsb": 11,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "pin_wakeup_enable",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to enable GPIO wakeup.(can only wakeup CPU from Light-sleep Mode)"
                },
                {
                    "name": "pin_int_type",
                    "lsb": 7,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this value to choose interrupt mode. :disable GPIO interrupt. 1:trigger at posedge. 2:trigger at negedge. 3:trigger at any edge. 4:valid at low level. 5:valid at high level"
                },
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pin_sync1_bypass",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set GPIO input_sync1 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge."
                },
                {
                    "name": "pin_pad_driver",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to select pad driver. 1:open-drain. :normal."
                },
                {
                    "name": "pin_sync2_bypass",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set GPIO input_sync2 signal mode. :disable. 1:trigger at negedge. 2or3:trigger at posedge."
                }
            ],
            "id": "gpio.pin%s",
            "name": "pin%s",
            "offset": "0xd8",
            "doc": "GPIO pin configuration register"
        },
        "gpio.status_next": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "status_interrupt_next",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "GPIO interrupt source register for GPIO0-25"
                }
            ],
            "id": "gpio.status_next",
            "name": "status_next",
            "offset": "0x14c",
            "doc": "GPIO interrupt source register"
        },
        "gpio.func%s_in_sel_cfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sig_in_sel",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to bypass GPIO. 1:do not bypass GPIO. :bypass GPIO."
                },
                {
                    "name": "func_in_inv_sel",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to invert input signal. 1:invert. :not invert."
                },
                {
                    "name": "func_in_sel",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this value: s=-53: connect GPIO[s] to this port. s=x38: set this port always high level. s=x3C: set this port always low level."
                }
            ],
            "id": "gpio.func%s_in_sel_cfg",
            "name": "func%s_in_sel_cfg",
            "offset": "0x350",
            "doc": "GPIO input function configuration register"
        },
        "gpio.func%s_out_sel_cfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "func_oen_inv_sel",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to invert output enable signal.1:invert.:not invert."
                },
                {
                    "name": "func_oen_sel",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to select output enable signal.1:use GPIO_ENABLE_REG[n] as output enable signal.:use peripheral output enable signal."
                },
                {
                    "name": "func_out_inv_sel",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "set this bit to invert output signal.1:invert.:not invert."
                },
                {
                    "name": "func_out_sel",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "The value of the bits: <=s<=256. Set the value to select output signal. s=-255: output of GPIO[n] equals input of peripheral[s]. s=256: output of GPIO[n] equals GPIO_OUT_REG[n]."
                }
            ],
            "id": "gpio.func%s_out_sel_cfg",
            "name": "func%s_out_sel_cfg",
            "offset": "0x5b8",
            "doc": "GPIO output function select register"
        },
        "gpio.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "set this bit to enable GPIO clock gate"
                }
            ],
            "id": "gpio.clock_gate",
            "name": "clock_gate",
            "offset": "0x62c",
            "doc": "GPIO clock gate register"
        },
        "gpio.reg_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reg_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33579312",
                    "doc": "version register"
                }
            ],
            "id": "gpio.reg_date",
            "name": "reg_date",
            "offset": "0x6fc",
            "doc": "GPIO version register"
        },
        "gpiosd": {
            "type": "blk",
            "children": [
                "gpiosd.sigmadelta%s",
                "gpiosd.sigmadelta%s",
                "gpiosd.sigmadelta%s",
                "gpiosd.sigmadelta%s",
                "gpiosd.sigmadelta_cg",
                "gpiosd.sigmadelta_misc",
                "gpiosd.sigmadelta_version"
            ],
            "id": "gpiosd",
            "name": "gpiosd",
            "offset": "0x60004f00",
            "doc": "Sigma-Delta Modulation"
        },
        "gpiosd.sigmadelta%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sd0_prescale",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "This field is used to set a divider value to divide APB clock."
                },
                {
                    "name": "sd0_in",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This field is used to configure the duty cycle of sigma delta modulation output."
                }
            ],
            "id": "gpiosd.sigmadelta%s",
            "name": "sigmadelta%s",
            "offset": "0xc",
            "doc": "Duty Cycle Configure Register of SDM%s"
        },
        "gpiosd.sigmadelta_cg": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Clock enable bit of configuration registers for sigma delta modulation."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "gpiosd.sigmadelta_cg",
            "name": "sigmadelta_cg",
            "offset": "0x20",
            "doc": "Clock Gating Configure Register"
        },
        "gpiosd.sigmadelta_misc": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi_swap",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "function_clk_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Clock enable bit of sigma delta modulation."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "gpiosd.sigmadelta_misc",
            "name": "sigmadelta_misc",
            "offset": "0x24",
            "doc": "MISC Register"
        },
        "gpiosd.sigmadelta_version": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "gpio_sd_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33579568",
                    "doc": "Version control register."
                }
            ],
            "id": "gpiosd.sigmadelta_version",
            "name": "sigmadelta_version",
            "offset": "0x28",
            "doc": "Version Control Register"
        },
        "hmac": {
            "type": "blk",
            "children": [
                "hmac.set_start",
                "hmac.set_para_purpose",
                "hmac.set_para_key",
                "hmac.set_para_finish",
                "hmac.set_message_one",
                "hmac.set_message_ing",
                "hmac.set_message_end",
                "hmac.set_result_finish",
                "hmac.set_invalidate_jtag",
                "hmac.set_invalidate_ds",
                "hmac.query_error",
                "hmac.query_busy",
                "hmac.wr_message_mem0",
                "hmac.wr_message_mem1",
                "hmac.wr_message_mem2",
                "hmac.wr_message_mem3",
                "hmac.wr_message_mem4",
                "hmac.wr_message_mem5",
                "hmac.wr_message_mem6",
                "hmac.wr_message_mem7",
                "hmac.wr_message_mem8",
                "hmac.wr_message_mem9",
                "hmac.wr_message_mem10",
                "hmac.wr_message_mem11",
                "hmac.wr_message_mem12",
                "hmac.wr_message_mem13",
                "hmac.wr_message_mem14",
                "hmac.wr_message_mem15",
                "hmac.wr_message_mem16",
                "hmac.wr_message_mem17",
                "hmac.wr_message_mem18",
                "hmac.wr_message_mem19",
                "hmac.wr_message_mem20",
                "hmac.wr_message_mem21",
                "hmac.wr_message_mem22",
                "hmac.wr_message_mem23",
                "hmac.wr_message_mem24",
                "hmac.wr_message_mem25",
                "hmac.wr_message_mem26",
                "hmac.wr_message_mem27",
                "hmac.wr_message_mem28",
                "hmac.wr_message_mem29",
                "hmac.wr_message_mem30",
                "hmac.wr_message_mem31",
                "hmac.wr_message_mem32",
                "hmac.wr_message_mem33",
                "hmac.wr_message_mem34",
                "hmac.wr_message_mem35",
                "hmac.wr_message_mem36",
                "hmac.wr_message_mem37",
                "hmac.wr_message_mem38",
                "hmac.wr_message_mem39",
                "hmac.wr_message_mem40",
                "hmac.wr_message_mem41",
                "hmac.wr_message_mem42",
                "hmac.wr_message_mem43",
                "hmac.wr_message_mem44",
                "hmac.wr_message_mem45",
                "hmac.wr_message_mem46",
                "hmac.wr_message_mem47",
                "hmac.wr_message_mem48",
                "hmac.wr_message_mem49",
                "hmac.wr_message_mem50",
                "hmac.wr_message_mem51",
                "hmac.wr_message_mem52",
                "hmac.wr_message_mem53",
                "hmac.wr_message_mem54",
                "hmac.wr_message_mem55",
                "hmac.wr_message_mem56",
                "hmac.wr_message_mem57",
                "hmac.wr_message_mem58",
                "hmac.wr_message_mem59",
                "hmac.wr_message_mem60",
                "hmac.wr_message_mem61",
                "hmac.wr_message_mem62",
                "hmac.wr_message_mem63",
                "hmac.rd_result_mem0",
                "hmac.rd_result_mem1",
                "hmac.rd_result_mem2",
                "hmac.rd_result_mem3",
                "hmac.rd_result_mem4",
                "hmac.rd_result_mem5",
                "hmac.rd_result_mem6",
                "hmac.rd_result_mem7",
                "hmac.rd_result_mem8",
                "hmac.rd_result_mem9",
                "hmac.rd_result_mem10",
                "hmac.rd_result_mem11",
                "hmac.rd_result_mem12",
                "hmac.rd_result_mem13",
                "hmac.rd_result_mem14",
                "hmac.rd_result_mem15",
                "hmac.rd_result_mem16",
                "hmac.rd_result_mem17",
                "hmac.rd_result_mem18",
                "hmac.rd_result_mem19",
                "hmac.rd_result_mem20",
                "hmac.rd_result_mem21",
                "hmac.rd_result_mem22",
                "hmac.rd_result_mem23",
                "hmac.rd_result_mem24",
                "hmac.rd_result_mem25",
                "hmac.rd_result_mem26",
                "hmac.rd_result_mem27",
                "hmac.rd_result_mem28",
                "hmac.rd_result_mem29",
                "hmac.rd_result_mem30",
                "hmac.rd_result_mem31",
                "hmac.set_message_pad",
                "hmac.one_block",
                "hmac.soft_jtag_ctrl",
                "hmac.wr_jtag"
            ],
            "id": "hmac",
            "name": "hmac",
            "offset": "0x6003e000",
            "doc": "HMAC (Hash-based Message Authentication Code) Accelerator"
        },
        "hmac.set_start": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_start",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Start hmac operation."
                }
            ],
            "id": "hmac.set_start",
            "name": "set_start",
            "offset": "0x40",
            "doc": "Process control register 0."
        },
        "hmac.set_para_purpose": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "purpose_set",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set hmac parameter purpose."
                }
            ],
            "id": "hmac.set_para_purpose",
            "name": "set_para_purpose",
            "offset": "0x44",
            "doc": "Configure purpose."
        },
        "hmac.set_para_key": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "key_set",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set hmac parameter key."
                }
            ],
            "id": "hmac.set_para_key",
            "name": "set_para_key",
            "offset": "0x48",
            "doc": "Configure key."
        },
        "hmac.set_para_finish": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_para_end",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Finish hmac configuration."
                }
            ],
            "id": "hmac.set_para_finish",
            "name": "set_para_finish",
            "offset": "0x4c",
            "doc": "Finish initial configuration."
        },
        "hmac.set_message_one": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_text_one",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Call SHA to calculate one message block."
                }
            ],
            "id": "hmac.set_message_one",
            "name": "set_message_one",
            "offset": "0x50",
            "doc": "Process control register 1."
        },
        "hmac.set_message_ing": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_text_ing",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Continue typical hmac."
                }
            ],
            "id": "hmac.set_message_ing",
            "name": "set_message_ing",
            "offset": "0x54",
            "doc": "Process control register 2."
        },
        "hmac.set_message_end": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_text_end",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Start hardware padding."
                }
            ],
            "id": "hmac.set_message_end",
            "name": "set_message_end",
            "offset": "0x58",
            "doc": "Process control register 3."
        },
        "hmac.set_result_finish": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_result_end",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "After read result from upstream, then let hmac back to idle."
                }
            ],
            "id": "hmac.set_result_finish",
            "name": "set_result_finish",
            "offset": "0x5c",
            "doc": "Process control register 4."
        },
        "hmac.set_invalidate_jtag": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_invalidate_jtag",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear result from hmac downstream JTAG."
                }
            ],
            "id": "hmac.set_invalidate_jtag",
            "name": "set_invalidate_jtag",
            "offset": "0x60",
            "doc": "Invalidate register 0."
        },
        "hmac.set_invalidate_ds": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_invalidate_ds",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear result from hmac downstream DS."
                }
            ],
            "id": "hmac.set_invalidate_ds",
            "name": "set_invalidate_ds",
            "offset": "0x64",
            "doc": "Invalidate register 1."
        },
        "hmac.query_error": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "qurey_check",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Hmac configuration state. 0: key are agree with purpose. 1: error"
                }
            ],
            "id": "hmac.query_error",
            "name": "query_error",
            "offset": "0x68",
            "doc": "Error register."
        },
        "hmac.query_busy": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "busy_state",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Hmac state. 1'b0: idle. 1'b1: busy"
                }
            ],
            "id": "hmac.query_busy",
            "name": "query_busy",
            "offset": "0x6c",
            "doc": "Busy register."
        },
        "hmac.wr_message_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem0",
            "name": "wr_message_mem0",
            "offset": "0x80",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem1",
            "name": "wr_message_mem1",
            "offset": "0x81",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem2",
            "name": "wr_message_mem2",
            "offset": "0x82",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem3",
            "name": "wr_message_mem3",
            "offset": "0x83",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem4",
            "name": "wr_message_mem4",
            "offset": "0x84",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem5",
            "name": "wr_message_mem5",
            "offset": "0x85",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem6",
            "name": "wr_message_mem6",
            "offset": "0x86",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem7",
            "name": "wr_message_mem7",
            "offset": "0x87",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem8",
            "name": "wr_message_mem8",
            "offset": "0x88",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem9",
            "name": "wr_message_mem9",
            "offset": "0x89",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem10",
            "name": "wr_message_mem10",
            "offset": "0x8a",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem11",
            "name": "wr_message_mem11",
            "offset": "0x8b",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem12",
            "name": "wr_message_mem12",
            "offset": "0x8c",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem13",
            "name": "wr_message_mem13",
            "offset": "0x8d",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem14",
            "name": "wr_message_mem14",
            "offset": "0x8e",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem15",
            "name": "wr_message_mem15",
            "offset": "0x8f",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem16",
            "name": "wr_message_mem16",
            "offset": "0x90",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem17",
            "name": "wr_message_mem17",
            "offset": "0x91",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem18",
            "name": "wr_message_mem18",
            "offset": "0x92",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem19",
            "name": "wr_message_mem19",
            "offset": "0x93",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem20",
            "name": "wr_message_mem20",
            "offset": "0x94",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem21",
            "name": "wr_message_mem21",
            "offset": "0x95",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem22",
            "name": "wr_message_mem22",
            "offset": "0x96",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem23",
            "name": "wr_message_mem23",
            "offset": "0x97",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem24",
            "name": "wr_message_mem24",
            "offset": "0x98",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem25",
            "name": "wr_message_mem25",
            "offset": "0x99",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem26",
            "name": "wr_message_mem26",
            "offset": "0x9a",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem27",
            "name": "wr_message_mem27",
            "offset": "0x9b",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem28",
            "name": "wr_message_mem28",
            "offset": "0x9c",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem29",
            "name": "wr_message_mem29",
            "offset": "0x9d",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem30",
            "name": "wr_message_mem30",
            "offset": "0x9e",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem31",
            "name": "wr_message_mem31",
            "offset": "0x9f",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem32",
            "name": "wr_message_mem32",
            "offset": "0xa0",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem33",
            "name": "wr_message_mem33",
            "offset": "0xa1",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem34",
            "name": "wr_message_mem34",
            "offset": "0xa2",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem35",
            "name": "wr_message_mem35",
            "offset": "0xa3",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem36",
            "name": "wr_message_mem36",
            "offset": "0xa4",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem37",
            "name": "wr_message_mem37",
            "offset": "0xa5",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem38",
            "name": "wr_message_mem38",
            "offset": "0xa6",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem39",
            "name": "wr_message_mem39",
            "offset": "0xa7",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem40",
            "name": "wr_message_mem40",
            "offset": "0xa8",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem41",
            "name": "wr_message_mem41",
            "offset": "0xa9",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem42",
            "name": "wr_message_mem42",
            "offset": "0xaa",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem43",
            "name": "wr_message_mem43",
            "offset": "0xab",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem44",
            "name": "wr_message_mem44",
            "offset": "0xac",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem45",
            "name": "wr_message_mem45",
            "offset": "0xad",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem46",
            "name": "wr_message_mem46",
            "offset": "0xae",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem47",
            "name": "wr_message_mem47",
            "offset": "0xaf",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem48",
            "name": "wr_message_mem48",
            "offset": "0xb0",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem49",
            "name": "wr_message_mem49",
            "offset": "0xb1",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem50",
            "name": "wr_message_mem50",
            "offset": "0xb2",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem51",
            "name": "wr_message_mem51",
            "offset": "0xb3",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem52",
            "name": "wr_message_mem52",
            "offset": "0xb4",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem53",
            "name": "wr_message_mem53",
            "offset": "0xb5",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem54",
            "name": "wr_message_mem54",
            "offset": "0xb6",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem55",
            "name": "wr_message_mem55",
            "offset": "0xb7",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem56",
            "name": "wr_message_mem56",
            "offset": "0xb8",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem57",
            "name": "wr_message_mem57",
            "offset": "0xb9",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem58",
            "name": "wr_message_mem58",
            "offset": "0xba",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem59",
            "name": "wr_message_mem59",
            "offset": "0xbb",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem60",
            "name": "wr_message_mem60",
            "offset": "0xbc",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem61",
            "name": "wr_message_mem61",
            "offset": "0xbd",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem62",
            "name": "wr_message_mem62",
            "offset": "0xbe",
            "doc": "Message block memory."
        },
        "hmac.wr_message_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.wr_message_mem63",
            "name": "wr_message_mem63",
            "offset": "0xbf",
            "doc": "Message block memory."
        },
        "hmac.rd_result_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem0",
            "name": "rd_result_mem0",
            "offset": "0xc0",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem1",
            "name": "rd_result_mem1",
            "offset": "0xc1",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem2",
            "name": "rd_result_mem2",
            "offset": "0xc2",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem3",
            "name": "rd_result_mem3",
            "offset": "0xc3",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem4",
            "name": "rd_result_mem4",
            "offset": "0xc4",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem5",
            "name": "rd_result_mem5",
            "offset": "0xc5",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem6",
            "name": "rd_result_mem6",
            "offset": "0xc6",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem7",
            "name": "rd_result_mem7",
            "offset": "0xc7",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem8",
            "name": "rd_result_mem8",
            "offset": "0xc8",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem9",
            "name": "rd_result_mem9",
            "offset": "0xc9",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem10",
            "name": "rd_result_mem10",
            "offset": "0xca",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem11",
            "name": "rd_result_mem11",
            "offset": "0xcb",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem12",
            "name": "rd_result_mem12",
            "offset": "0xcc",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem13",
            "name": "rd_result_mem13",
            "offset": "0xcd",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem14",
            "name": "rd_result_mem14",
            "offset": "0xce",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem15",
            "name": "rd_result_mem15",
            "offset": "0xcf",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem16",
            "name": "rd_result_mem16",
            "offset": "0xd0",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem17",
            "name": "rd_result_mem17",
            "offset": "0xd1",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem18",
            "name": "rd_result_mem18",
            "offset": "0xd2",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem19",
            "name": "rd_result_mem19",
            "offset": "0xd3",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem20",
            "name": "rd_result_mem20",
            "offset": "0xd4",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem21",
            "name": "rd_result_mem21",
            "offset": "0xd5",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem22",
            "name": "rd_result_mem22",
            "offset": "0xd6",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem23",
            "name": "rd_result_mem23",
            "offset": "0xd7",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem24",
            "name": "rd_result_mem24",
            "offset": "0xd8",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem25",
            "name": "rd_result_mem25",
            "offset": "0xd9",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem26",
            "name": "rd_result_mem26",
            "offset": "0xda",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem27",
            "name": "rd_result_mem27",
            "offset": "0xdb",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem28",
            "name": "rd_result_mem28",
            "offset": "0xdc",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem29",
            "name": "rd_result_mem29",
            "offset": "0xdd",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem30",
            "name": "rd_result_mem30",
            "offset": "0xde",
            "doc": "Result from upstream."
        },
        "hmac.rd_result_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "hmac.rd_result_mem31",
            "name": "rd_result_mem31",
            "offset": "0xdf",
            "doc": "Result from upstream."
        },
        "hmac.set_message_pad": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_text_pad",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Start software padding."
                }
            ],
            "id": "hmac.set_message_pad",
            "name": "set_message_pad",
            "offset": "0xf0",
            "doc": "Process control register 5."
        },
        "hmac.one_block": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_one_block",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Don't have to do padding."
                }
            ],
            "id": "hmac.one_block",
            "name": "one_block",
            "offset": "0xf4",
            "doc": "Process control register 6."
        },
        "hmac.soft_jtag_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "soft_jtag_ctrl",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Turn on JTAG verification."
                }
            ],
            "id": "hmac.soft_jtag_ctrl",
            "name": "soft_jtag_ctrl",
            "offset": "0xf8",
            "doc": "Jtag register 0."
        },
        "hmac.wr_jtag": {
            "type": "reg",
            "fields": [
                {
                    "name": "wr_jtag",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "32-bit of key to be compared."
                }
            ],
            "id": "hmac.wr_jtag",
            "name": "wr_jtag",
            "offset": "0xfc",
            "doc": "Jtag register 1."
        },
        "i2c": {
            "type": "blk",
            "children": [
                "i2c.scl_low_period",
                "i2c.ctr",
                "i2c.sr",
                "i2c.to",
                "i2c.slave_addr",
                "i2c.fifo_st",
                "i2c.fifo_conf",
                "i2c.fifo_data",
                "i2c.int_raw",
                "i2c.int_clr",
                "i2c.int_ena",
                "i2c.int_status",
                "i2c.sda_hold",
                "i2c.sda_sample",
                "i2c.scl_high_period",
                "i2c.scl_start_hold",
                "i2c.scl_rstart_setup",
                "i2c.scl_stop_hold",
                "i2c.scl_stop_setup",
                "i2c.filter_cfg",
                "i2c.clk_conf",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.comd%s",
                "i2c.scl_st_time_out",
                "i2c.scl_main_st_time_out",
                "i2c.scl_sp_conf",
                "i2c.scl_stretch_conf",
                "i2c.date",
                "i2c.txfifo_start_addr",
                "i2c.rxfifo_start_addr"
            ],
            "id": "i2c",
            "name": "i2c",
            "offset": "0x60013000",
            "doc": "I2C (Inter-Integrated Circuit) Controller"
        },
        "i2c.scl_low_period": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_low_period",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_low_period"
                }
            ],
            "id": "i2c.scl_low_period",
            "name": "scl_low_period",
            "offset": "0x0",
            "doc": "I2C_SCL_LOW_PERIOD_REG"
        },
        "i2c.ctr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 17,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "addr_broadcasting_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_addr_broadcasting_en"
                },
                {
                    "name": "addr_10bit_rw_check_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_addr_10bit_rw_check_en"
                },
                {
                    "name": "slv_tx_auto_start_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slv_tx_auto_start_en"
                },
                {
                    "name": "conf_upgate",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_conf_upgate"
                },
                {
                    "name": "fsm_rst",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_fsm_rst"
                },
                {
                    "name": "arbitration_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_arbitration_en"
                },
                {
                    "name": "clk_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en"
                },
                {
                    "name": "rx_lsb_first",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_lsb_first"
                },
                {
                    "name": "tx_lsb_first",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_lsb_first"
                },
                {
                    "name": "trans_start",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_trans_start"
                },
                {
                    "name": "ms_mode",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ms_mode"
                },
                {
                    "name": "rx_full_ack_level",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rx_full_ack_level"
                },
                {
                    "name": "sample_scl_level",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sample_scl_level"
                },
                {
                    "name": "scl_force_out",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_scl_force_out"
                },
                {
                    "name": "sda_force_out",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_sda_force_out"
                }
            ],
            "id": "i2c.ctr",
            "name": "ctr",
            "offset": "0x4",
            "doc": "I2C_CTR_REG"
        },
        "i2c.sr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_state_last",
                    "lsb": 28,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_state_last"
                },
                {
                    "name": "rsvd3",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_main_state_last",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_main_state_last"
                },
                {
                    "name": "txfifo_cnt",
                    "lsb": 18,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_cnt"
                },
                {
                    "name": "rsvd2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "stretch_cause",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "3",
                    "doc": "reg_stretch_cause"
                },
                {
                    "name": "rxfifo_cnt",
                    "lsb": 8,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_cnt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_addressed",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_slave_addressed"
                },
                {
                    "name": "bus_busy",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_bus_busy"
                },
                {
                    "name": "arb_lost",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_arb_lost"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_rw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_slave_rw"
                },
                {
                    "name": "resp_rec",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_resp_rec"
                }
            ],
            "id": "i2c.sr",
            "name": "sr",
            "offset": "0x8",
            "doc": "I2C_SR_REG"
        },
        "i2c.to": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time_out_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_time_out_en"
                },
                {
                    "name": "time_out_value",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "reg_time_out_value"
                }
            ],
            "id": "i2c.to",
            "name": "to",
            "offset": "0xc",
            "doc": "I2C_TO_REG"
        },
        "i2c.slave_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "addr_10bit_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_addr_10bit_en"
                },
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_addr",
                    "lsb": 0,
                    "nbits": 15,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slave_addr"
                }
            ],
            "id": "i2c.slave_addr",
            "name": "slave_addr",
            "offset": "0x10",
            "doc": "I2C_SLAVE_ADDR_REG"
        },
        "i2c.fifo_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_rw_point",
                    "lsb": 22,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_slave_rw_point"
                },
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "txfifo_waddr",
                    "lsb": 15,
                    "nbits": 5,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_waddr"
                },
                {
                    "name": "txfifo_raddr",
                    "lsb": 10,
                    "nbits": 5,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_raddr"
                },
                {
                    "name": "rxfifo_waddr",
                    "lsb": 5,
                    "nbits": 5,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_waddr"
                },
                {
                    "name": "rxfifo_raddr",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_raddr"
                }
            ],
            "id": "i2c.fifo_st",
            "name": "fifo_st",
            "offset": "0x14",
            "doc": "I2C_FIFO_ST_REG"
        },
        "i2c.fifo_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 17,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fifo_prt_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_fifo_prt_en"
                },
                {
                    "name": "tx_fifo_rst",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_fifo_rst"
                },
                {
                    "name": "rx_fifo_rst",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_fifo_rst"
                },
                {
                    "name": "fifo_addr_cfg_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_fifo_addr_cfg_en"
                },
                {
                    "name": "nonfifo_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_nonfifo_en"
                },
                {
                    "name": "txfifo_wm_thrhd",
                    "lsb": 5,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "4",
                    "doc": "reg_txfifo_wm_thrhd"
                },
                {
                    "name": "rxfifo_wm_thrhd",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "11",
                    "doc": "reg_rxfifo_wm_thrhd"
                }
            ],
            "id": "i2c.fifo_conf",
            "name": "fifo_conf",
            "offset": "0x18",
            "doc": "I2C_FIFO_CONF_REG"
        },
        "i2c.fifo_data": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fifo_rdata",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_fifo_rdata"
                }
            ],
            "id": "i2c.fifo_data",
            "name": "fifo_data",
            "offset": "0x1c",
            "doc": "I2C_FIFO_DATA_REG"
        },
        "i2c.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "general_call_int_raw",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_general_call_int_raw"
                },
                {
                    "name": "slave_stretch_int_raw",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_slave_stretch_int_raw"
                },
                {
                    "name": "det_start_int_raw",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_det_start_int_raw"
                },
                {
                    "name": "scl_main_st_to_int_raw",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_main_st_to_int_raw"
                },
                {
                    "name": "scl_st_to_int_raw",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_st_to_int_raw"
                },
                {
                    "name": "rxfifo_udf_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_udf_int_raw"
                },
                {
                    "name": "txfifo_ovf_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_ovf_int_raw"
                },
                {
                    "name": "nack_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_nack_int_raw"
                },
                {
                    "name": "trans_start_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_trans_start_int_raw"
                },
                {
                    "name": "time_out_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_time_out_int_raw"
                },
                {
                    "name": "trans_complete_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_trans_complete_int_raw"
                },
                {
                    "name": "mst_txfifo_udf_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mst_txfifo_udf_int_raw"
                },
                {
                    "name": "arbitration_lost_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_arbitration_lost_int_raw"
                },
                {
                    "name": "byte_trans_done_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_byte_trans_done_int_raw"
                },
                {
                    "name": "end_detect_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_end_detect_int_raw"
                },
                {
                    "name": "rxfifo_ovf_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_ovf_int_raw"
                },
                {
                    "name": "txfifo_wm_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "reg_txfifo_wm_int_raw"
                },
                {
                    "name": "rxfifo_wm_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_wm_int_raw"
                }
            ],
            "id": "i2c.int_raw",
            "name": "int_raw",
            "offset": "0x20",
            "doc": "I2C_INT_RAW_REG"
        },
        "i2c.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "general_call_int_clr",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_general_call_int_clr"
                },
                {
                    "name": "slave_stretch_int_clr",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_slave_stretch_int_clr"
                },
                {
                    "name": "det_start_int_clr",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_det_start_int_clr"
                },
                {
                    "name": "scl_main_st_to_int_clr",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_scl_main_st_to_int_clr"
                },
                {
                    "name": "scl_st_to_int_clr",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_scl_st_to_int_clr"
                },
                {
                    "name": "rxfifo_udf_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_udf_int_clr"
                },
                {
                    "name": "txfifo_ovf_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_txfifo_ovf_int_clr"
                },
                {
                    "name": "nack_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_nack_int_clr"
                },
                {
                    "name": "trans_start_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_trans_start_int_clr"
                },
                {
                    "name": "time_out_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_time_out_int_clr"
                },
                {
                    "name": "trans_complete_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_trans_complete_int_clr"
                },
                {
                    "name": "mst_txfifo_udf_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mst_txfifo_udf_int_clr"
                },
                {
                    "name": "arbitration_lost_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_arbitration_lost_int_clr"
                },
                {
                    "name": "byte_trans_done_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_byte_trans_done_int_clr"
                },
                {
                    "name": "end_detect_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_end_detect_int_clr"
                },
                {
                    "name": "rxfifo_ovf_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_ovf_int_clr"
                },
                {
                    "name": "txfifo_wm_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_txfifo_wm_int_clr"
                },
                {
                    "name": "rxfifo_wm_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_wm_int_clr"
                }
            ],
            "id": "i2c.int_clr",
            "name": "int_clr",
            "offset": "0x24",
            "doc": "I2C_INT_CLR_REG"
        },
        "i2c.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "general_call_int_ena",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_general_call_int_ena"
                },
                {
                    "name": "slave_stretch_int_ena",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slave_stretch_int_ena"
                },
                {
                    "name": "det_start_int_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_det_start_int_ena"
                },
                {
                    "name": "scl_main_st_to_int_ena",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_main_st_to_int_ena"
                },
                {
                    "name": "scl_st_to_int_ena",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_st_to_int_ena"
                },
                {
                    "name": "rxfifo_udf_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rxfifo_udf_int_ena"
                },
                {
                    "name": "txfifo_ovf_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_txfifo_ovf_int_ena"
                },
                {
                    "name": "nack_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_nack_int_ena"
                },
                {
                    "name": "trans_start_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_trans_start_int_ena"
                },
                {
                    "name": "time_out_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_time_out_int_ena"
                },
                {
                    "name": "trans_complete_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_trans_complete_int_ena"
                },
                {
                    "name": "mst_txfifo_udf_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mst_txfifo_udf_int_ena"
                },
                {
                    "name": "arbitration_lost_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_arbitration_lost_int_ena"
                },
                {
                    "name": "byte_trans_done_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_byte_trans_done_int_ena"
                },
                {
                    "name": "end_detect_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_end_detect_int_ena"
                },
                {
                    "name": "rxfifo_ovf_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rxfifo_ovf_int_ena"
                },
                {
                    "name": "txfifo_wm_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_txfifo_wm_int_ena"
                },
                {
                    "name": "rxfifo_wm_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rxfifo_wm_int_ena"
                }
            ],
            "id": "i2c.int_ena",
            "name": "int_ena",
            "offset": "0x28",
            "doc": "I2C_INT_ENA_REG"
        },
        "i2c.int_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "general_call_int_st",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_general_call_int_st"
                },
                {
                    "name": "slave_stretch_int_st",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_slave_stretch_int_st"
                },
                {
                    "name": "det_start_int_st",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_det_start_int_st"
                },
                {
                    "name": "scl_main_st_to_int_st",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_main_st_to_int_st"
                },
                {
                    "name": "scl_st_to_int_st",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_scl_st_to_int_st"
                },
                {
                    "name": "rxfifo_udf_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_udf_int_st"
                },
                {
                    "name": "txfifo_ovf_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_ovf_int_st"
                },
                {
                    "name": "nack_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_nack_int_st"
                },
                {
                    "name": "trans_start_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_trans_start_int_st"
                },
                {
                    "name": "time_out_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_time_out_int_st"
                },
                {
                    "name": "trans_complete_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_trans_complete_int_st"
                },
                {
                    "name": "mst_txfifo_udf_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mst_txfifo_udf_int_st"
                },
                {
                    "name": "arbitration_lost_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_arbitration_lost_int_st"
                },
                {
                    "name": "byte_trans_done_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_byte_trans_done_int_st"
                },
                {
                    "name": "end_detect_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_end_detect_int_st"
                },
                {
                    "name": "rxfifo_ovf_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_ovf_int_st"
                },
                {
                    "name": "txfifo_wm_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_wm_int_st"
                },
                {
                    "name": "rxfifo_wm_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_wm_int_st"
                }
            ],
            "id": "i2c.int_status",
            "name": "int_status",
            "offset": "0x2c",
            "doc": "I2C_INT_STATUS_REG"
        },
        "i2c.sda_hold": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sda_hold_time"
                }
            ],
            "id": "i2c.sda_hold",
            "name": "sda_hold",
            "offset": "0x30",
            "doc": "I2C_SDA_HOLD_REG"
        },
        "i2c.sda_sample": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sda_sample_time"
                }
            ],
            "id": "i2c.sda_sample",
            "name": "sda_sample",
            "offset": "0x34",
            "doc": "I2C_SDA_SAMPLE_REG"
        },
        "i2c.scl_high_period": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_wait_high_period",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_wait_high_period"
                },
                {
                    "name": "scl_high_period",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_high_period"
                }
            ],
            "id": "i2c.scl_high_period",
            "name": "scl_high_period",
            "offset": "0x38",
            "doc": "I2C_SCL_HIGH_PERIOD_REG"
        },
        "i2c.scl_start_hold": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "reg_scl_start_hold_time"
                }
            ],
            "id": "i2c.scl_start_hold",
            "name": "scl_start_hold",
            "offset": "0x40",
            "doc": "I2C_SCL_START_HOLD_REG"
        },
        "i2c.scl_rstart_setup": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "reg_scl_rstart_setup_time"
                }
            ],
            "id": "i2c.scl_rstart_setup",
            "name": "scl_rstart_setup",
            "offset": "0x44",
            "doc": "I2C_SCL_RSTART_SETUP_REG"
        },
        "i2c.scl_stop_hold": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "reg_scl_stop_hold_time"
                }
            ],
            "id": "i2c.scl_stop_hold",
            "name": "scl_stop_hold",
            "offset": "0x48",
            "doc": "I2C_SCL_STOP_HOLD_REG"
        },
        "i2c.scl_stop_setup": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "time",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "reg_scl_stop_setup_time"
                }
            ],
            "id": "i2c.scl_stop_setup",
            "name": "scl_stop_setup",
            "offset": "0x4c",
            "doc": "I2C_SCL_STOP_SETUP_REG"
        },
        "i2c.filter_cfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sda_filter_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_sda_filter_en"
                },
                {
                    "name": "scl_filter_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_scl_filter_en"
                },
                {
                    "name": "sda_filter_thres",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sda_filter_thres"
                },
                {
                    "name": "scl_filter_thres",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_filter_thres"
                }
            ],
            "id": "i2c.filter_cfg",
            "name": "filter_cfg",
            "offset": "0x50",
            "doc": "I2C_FILTER_CFG_REG"
        },
        "i2c.clk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sclk_active",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_sclk_active"
                },
                {
                    "name": "sclk_sel",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sclk_sel"
                },
                {
                    "name": "sclk_div_b",
                    "lsb": 14,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sclk_div_b"
                },
                {
                    "name": "sclk_div_a",
                    "lsb": 8,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sclk_div_a"
                },
                {
                    "name": "sclk_div_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sclk_div_num"
                }
            ],
            "id": "i2c.clk_conf",
            "name": "clk_conf",
            "offset": "0x54",
            "doc": "I2C_CLK_CONF_REG"
        },
        "i2c.comd%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "command_done",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_command_done"
                },
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 17,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "command",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_command"
                }
            ],
            "id": "i2c.comd%s",
            "name": "comd%s",
            "offset": "0x74",
            "doc": "I2C_COMD%s_REG"
        },
        "i2c.scl_st_time_out": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_st_to_i2c",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "reg_scl_st_to_regno more than 23"
                }
            ],
            "id": "i2c.scl_st_time_out",
            "name": "scl_st_time_out",
            "offset": "0x78",
            "doc": "I2C_SCL_ST_TIME_OUT_REG"
        },
        "i2c.scl_main_st_time_out": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scl_main_st_to_i2c",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "reg_scl_main_st_to_regno more than 23"
                }
            ],
            "id": "i2c.scl_main_st_time_out",
            "name": "scl_main_st_time_out",
            "offset": "0x7c",
            "doc": "I2C_SCL_MAIN_ST_TIME_OUT_REG"
        },
        "i2c.scl_sp_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sda_pd_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sda_pd_en"
                },
                {
                    "name": "scl_pd_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_pd_en"
                },
                {
                    "name": "scl_rst_slv_num",
                    "lsb": 1,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_rst_slv_num"
                },
                {
                    "name": "scl_rst_slv_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_scl_rst_slv_en"
                }
            ],
            "id": "i2c.scl_sp_conf",
            "name": "scl_sp_conf",
            "offset": "0x80",
            "doc": "I2C_SCL_SP_CONF_REG"
        },
        "i2c.scl_stretch_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_byte_ack_lvl",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slave_byte_ack_lvl"
                },
                {
                    "name": "slave_byte_ack_ctl_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slave_byte_ack_ctl_en"
                },
                {
                    "name": "slave_scl_stretch_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_slave_scl_stretch_clr"
                },
                {
                    "name": "slave_scl_stretch_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_slave_scl_stretch_en"
                },
                {
                    "name": "stretch_protect_num",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_stretch_protect_num"
                }
            ],
            "id": "i2c.scl_stretch_conf",
            "name": "scl_stretch_conf",
            "offset": "0x84",
            "doc": "I2C_SCL_STRETCH_CONF_REG"
        },
        "i2c.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "537330177",
                    "doc": "reg_date"
                }
            ],
            "id": "i2c.date",
            "name": "date",
            "offset": "0xf8",
            "doc": "I2C_DATE_REG"
        },
        "i2c.txfifo_start_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "txfifo_start_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_txfifo_start_addr."
                }
            ],
            "id": "i2c.txfifo_start_addr",
            "name": "txfifo_start_addr",
            "offset": "0x100",
            "doc": "I2C_TXFIFO_START_ADDR_REG"
        },
        "i2c.rxfifo_start_addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rxfifo_start_addr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rxfifo_start_addr."
                }
            ],
            "id": "i2c.rxfifo_start_addr",
            "name": "rxfifo_start_addr",
            "offset": "0x180",
            "doc": "I2C_RXFIFO_START_ADDR_REG"
        },
        "i2s": {
            "type": "blk",
            "children": [
                "i2s.int_raw",
                "i2s.int_st",
                "i2s.int_ena",
                "i2s.int_clr",
                "i2s.rx_conf",
                "i2s.tx_conf",
                "i2s.rx_conf1",
                "i2s.tx_conf1",
                "i2s.rx_clkm_conf",
                "i2s.tx_clkm_conf",
                "i2s.rx_clkm_div_conf",
                "i2s.tx_clkm_div_conf",
                "i2s.tx_pcm2pdm_conf",
                "i2s.tx_pcm2pdm_conf1",
                "i2s.rx_tdm_ctrl",
                "i2s.tx_tdm_ctrl",
                "i2s.rx_timing",
                "i2s.tx_timing",
                "i2s.lc_hung_conf",
                "i2s.rxeof_num",
                "i2s.conf_sigle_data",
                "i2s.state",
                "i2s.date"
            ],
            "id": "i2s",
            "name": "i2s",
            "offset": "0x6004b000",
            "doc": "I2S (Inter-IC Sound) Controller"
        },
        "i2s.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_hung_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit  for the i2s_tx_hung_int interrupt"
                },
                {
                    "name": "rx_hung_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit  for the i2s_rx_hung_int interrupt"
                },
                {
                    "name": "tx_done_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit  for the i2s_tx_done_int interrupt"
                },
                {
                    "name": "rx_done_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit  for the i2s_rx_done_int interrupt"
                }
            ],
            "id": "i2s.int_raw",
            "name": "int_raw",
            "offset": "0xc",
            "doc": "I2S interrupt raw register, valid in level."
        },
        "i2s.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_hung_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The masked interrupt status bit  for the i2s_tx_hung_int interrupt"
                },
                {
                    "name": "rx_hung_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The masked interrupt status bit  for the i2s_rx_hung_int interrupt"
                },
                {
                    "name": "tx_done_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The masked interrupt status bit  for the i2s_tx_done_int interrupt"
                },
                {
                    "name": "rx_done_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The masked interrupt status bit  for the i2s_rx_done_int interrupt"
                }
            ],
            "id": "i2s.int_st",
            "name": "int_st",
            "offset": "0x10",
            "doc": "I2S interrupt status register."
        },
        "i2s.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_hung_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit  for the i2s_tx_hung_int interrupt"
                },
                {
                    "name": "rx_hung_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit  for the i2s_rx_hung_int interrupt"
                },
                {
                    "name": "tx_done_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit  for the i2s_tx_done_int interrupt"
                },
                {
                    "name": "rx_done_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit  for the i2s_rx_done_int interrupt"
                }
            ],
            "id": "i2s.int_ena",
            "name": "int_ena",
            "offset": "0x14",
            "doc": "I2S interrupt enable register."
        },
        "i2s.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_hung_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the i2s_tx_hung_int interrupt"
                },
                {
                    "name": "rx_hung_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the i2s_rx_hung_int interrupt"
                },
                {
                    "name": "tx_done_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the i2s_tx_done_int interrupt"
                },
                {
                    "name": "rx_done_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the i2s_rx_done_int interrupt"
                }
            ],
            "id": "i2s.int_clr",
            "name": "int_clr",
            "offset": "0x18",
            "doc": "I2S interrupt clear register."
        },
        "i2s.rx_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_pdm_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable I2S PDM Rx mode . 0: Disable."
                },
                {
                    "name": "rx_tdm_en",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable I2S TDM Rx mode . 0: Disable."
                },
                {
                    "name": "rx_bit_order",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Rx bit endian. 1:small endian, the LSB is received first. 0:big endian, the MSB is received first."
                },
                {
                    "name": "rx_ws_idle_pol",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0: WS should be 0 when receiving left channel data, and WS is 1in right channel.  1: WS should be 1 when receiving left channel data, and WS is 0in right channel."
                },
                {
                    "name": "rx_24_fill_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: store 24 channel bits to 32 bits. 0:store 24 channel bits to 24 bits."
                },
                {
                    "name": "rx_left_align",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: I2S RX left alignment mode. 0: I2S RX right alignment mode."
                },
                {
                    "name": "rx_stop_mode",
                    "lsb": 13,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0  : I2S Rx only stop when reg_rx_start is cleared.   1: Stop when reg_rx_start is 0 or in_suc_eof is 1.   2:  Stop I2S RX when reg_rx_start is 0 or RX FIFO is full."
                },
                {
                    "name": "rx_pcm_bypass",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to bypass Compress/Decompress module for received data."
                },
                {
                    "name": "rx_pcm_conf",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S RX compress/decompress configuration bit. & 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &"
                },
                {
                    "name": "rx_mono_fst_vld",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: The first channel data value is valid in I2S RX mono mode.   0: The second channel data value is valid in I2S RX mono mode."
                },
                {
                    "name": "rx_update",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set 1 to update I2S RX registers from APB clock domain to I2S RX clock domain. This bit will be cleared by hardware after update register done."
                },
                {
                    "name": "rx_big_endian",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Rx byte endian, 1: low addr value to high addr. 0: low addr with low addr value."
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_mono",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable receiver  in mono mode"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_slave_mod",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable slave receiver mode"
                },
                {
                    "name": "rx_start",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start receiving data"
                },
                {
                    "name": "rx_fifo_reset",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset Rx AFIFO"
                },
                {
                    "name": "rx_reset",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset receiver"
                }
            ],
            "id": "i2s.rx_conf",
            "name": "rx_conf",
            "offset": "0x20",
            "doc": "I2S RX configure register"
        },
        "i2s.tx_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd3",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sig_loopback",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable signal loop back mode with transmitter module and receiver module sharing the same WS and BCK signals."
                },
                {
                    "name": "tx_chan_mod",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S transmitter channel mode configuration bits."
                },
                {
                    "name": "rsvd2",
                    "lsb": 21,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_pdm_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable I2S PDM Tx mode . 0: Disable."
                },
                {
                    "name": "tx_tdm_en",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable I2S TDM Tx mode . 0: Disable."
                },
                {
                    "name": "tx_bit_order",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Tx bit endian. 1:small endian, the LSB is sent first. 0:big endian, the MSB is sent first."
                },
                {
                    "name": "tx_ws_idle_pol",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0: WS should be 0 when sending left channel data, and WS is 1in right channel.  1: WS should be 1 when sending left channel data, and WS is 0in right channel."
                },
                {
                    "name": "tx_24_fill_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Sent 32 bits in 24 channel bits mode. 0: Sent 24 bits in 24 channel bits mode"
                },
                {
                    "name": "tx_left_align",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: I2S TX left alignment mode. 0: I2S TX right alignment mode."
                },
                {
                    "name": "rsvd1",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_stop_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to stop disable output BCK signal and WS signal when tx FIFO is emtpy"
                },
                {
                    "name": "tx_pcm_bypass",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to bypass  Compress/Decompress module for transmitted data."
                },
                {
                    "name": "tx_pcm_conf",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX compress/decompress configuration bit. & 0 (atol): A-Law decompress, 1 (ltoa) : A-Law compress, 2 (utol) : u-Law decompress, 3 (ltou) : u-Law compress. &"
                },
                {
                    "name": "tx_mono_fst_vld",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: The first channel data value is valid in I2S TX mono mode.   0: The second channel data value is valid in I2S TX mono mode."
                },
                {
                    "name": "tx_update",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set 1 to update I2S TX registers from APB clock domain to I2S TX clock domain. This bit will be cleared by hardware after update register done."
                },
                {
                    "name": "tx_big_endian",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Tx byte endian, 1: low addr value to high addr.  0: low addr with low addr value."
                },
                {
                    "name": "tx_chan_equal",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: The value of Left channel data is equal to the value of right channel data in I2S TX mono mode or TDM channel select mode. 0: The invalid channel data is reg_i2s_single_data in I2S TX mono mode or TDM channel select mode."
                },
                {
                    "name": "tx_mono",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable transmitter in mono mode"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_slave_mod",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable slave transmitter mode"
                },
                {
                    "name": "tx_start",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to start transmitting data"
                },
                {
                    "name": "tx_fifo_reset",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset Tx AFIFO"
                },
                {
                    "name": "tx_reset",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset transmitter"
                }
            ],
            "id": "i2s.tx_conf",
            "name": "tx_conf",
            "offset": "0x24",
            "doc": "I2S TX configure register"
        },
        "i2s.rx_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_msb_shift",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable receiver in Phillips standard mode"
                },
                {
                    "name": "rx_tdm_chan_bits",
                    "lsb": 24,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "The Rx bit number for each channel minus 1in TDM mode."
                },
                {
                    "name": "rx_half_sample_bits",
                    "lsb": 18,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "I2S Rx half sample bits -1."
                },
                {
                    "name": "rx_bits_mod",
                    "lsb": 13,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "Set the bits to configure the valid data bit length of I2S receiver channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode."
                },
                {
                    "name": "rx_bck_div_num",
                    "lsb": 7,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "6",
                    "doc": "Bit clock configuration bits in receiver mode."
                },
                {
                    "name": "rx_tdm_ws_width",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The width of rx_ws_out in TDM mode is (I2S_RX_TDM_WS_WIDTH[6:0] +1) * T_bck"
                }
            ],
            "id": "i2s.rx_conf1",
            "name": "rx_conf1",
            "offset": "0x28",
            "doc": "I2S RX configure register 1"
        },
        "i2s.tx_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_bck_no_dly",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: BCK is not delayed to generate pos/neg edge in master mode. 0: BCK is delayed to generate pos/neg edge in master mode."
                },
                {
                    "name": "tx_msb_shift",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable transmitter in Phillips standard mode"
                },
                {
                    "name": "tx_tdm_chan_bits",
                    "lsb": 24,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "The Tx bit number for each channel minus 1in TDM mode."
                },
                {
                    "name": "tx_half_sample_bits",
                    "lsb": 18,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "I2S Tx half sample bits -1."
                },
                {
                    "name": "tx_bits_mod",
                    "lsb": 13,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "Set the bits to configure the valid data bit length of I2S transmitter channel. 7: all the valid channel data is in 8-bit-mode. 15: all the valid channel data is in 16-bit-mode. 23: all the valid channel data is in 24-bit-mode. 31:all the valid channel data is in 32-bit-mode."
                },
                {
                    "name": "tx_bck_div_num",
                    "lsb": 7,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "6",
                    "doc": "Bit clock configuration bits in transmitter mode."
                },
                {
                    "name": "tx_tdm_ws_width",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The width of tx_ws_out in TDM mode is (I2S_TX_TDM_WS_WIDTH[6:0] +1) * T_bck"
                }
            ],
            "id": "i2s.tx_conf1",
            "name": "tx_conf1",
            "offset": "0x2c",
            "doc": "I2S TX configure register 1"
        },
        "i2s.rx_clkm_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mclk_sel",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0: UseI2S Tx module clock as I2S_MCLK_OUT.  1: UseI2S Rx module clock as I2S_MCLK_OUT."
                },
                {
                    "name": "rx_clk_sel",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Select I2S Rx module source clock. 0: no clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in."
                },
                {
                    "name": "rx_clk_active",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Rx module clock enable signal."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_clkm_div_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "Integral I2S clock divider value"
                }
            ],
            "id": "i2s.rx_clkm_conf",
            "name": "rx_clkm_conf",
            "offset": "0x30",
            "doc": "I2S RX clock configure register"
        },
        "i2s.tx_clkm_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable clk gate"
                },
                {
                    "name": "tx_clk_sel",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Select I2S Tx module source clock. 0: XTAL clock. 1: APLL. 2: CLK160. 3: I2S_MCLK_in."
                },
                {
                    "name": "tx_clk_active",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S Tx module clock enable signal."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_clkm_div_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "Integral I2S TX clock divider value. f_I2S_CLK = f_I2S_CLK_S/(N+b/a). There will be (a-b) * n-div and b * (n+1)-div.  So the average combination will be:  for b <= a/2, z * [x * n-div + (n+1)-div] + y * n-div. For b > a/2, z * [n-div + x * (n+1)-div] + y * (n+1)-div."
                }
            ],
            "id": "i2s.tx_clkm_conf",
            "name": "tx_clkm_conf",
            "offset": "0x34",
            "doc": "I2S TX clock configure register"
        },
        "i2s.rx_clkm_div_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_clkm_div_yn1",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_RX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_RX_CLKM_DIV_YN1 is 1."
                },
                {
                    "name": "rx_clkm_div_x",
                    "lsb": 18,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_RX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_RX_CLKM_DIV_X is (a/(a-b)) - 1."
                },
                {
                    "name": "rx_clkm_div_y",
                    "lsb": 9,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_RX_CLKM_DIV_Y is (a%(a-b))."
                },
                {
                    "name": "rx_clkm_div_z",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_RX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_RX_CLKM_DIV_Z is (a-b)."
                }
            ],
            "id": "i2s.rx_clkm_div_conf",
            "name": "rx_clkm_div_conf",
            "offset": "0x38",
            "doc": "I2S RX module clock divider configure register"
        },
        "i2s.tx_clkm_div_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_clkm_div_yn1",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_TX_CLKM_DIV_YN1 is 0 . For b > a/2, the value of I2S_TX_CLKM_DIV_YN1 is 1."
                },
                {
                    "name": "tx_clkm_div_x",
                    "lsb": 18,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_TX_CLKM_DIV_X is (a/b) - 1. For b > a/2, the value of I2S_TX_CLKM_DIV_X is (a/(a-b)) - 1."
                },
                {
                    "name": "tx_clkm_div_y",
                    "lsb": 9,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Y is (a%b) . For b > a/2, the value of I2S_TX_CLKM_DIV_Y is (a%(a-b))."
                },
                {
                    "name": "tx_clkm_div_z",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For b <= a/2, the value of I2S_TX_CLKM_DIV_Z is b. For b > a/2, the value of I2S_TX_CLKM_DIV_Z is (a-b)."
                }
            ],
            "id": "i2s.tx_clkm_div_conf",
            "name": "tx_clkm_div_conf",
            "offset": "0x3c",
            "doc": "I2S TX module clock divider configure register"
        },
        "i2s.tx_pcm2pdm_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pcm2pdm_conv_en",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM Converter enable"
                },
                {
                    "name": "tx_pdm_dac_mode_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM dac 2channel enable"
                },
                {
                    "name": "tx_pdm_dac_2out_en",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM dac mode enable"
                },
                {
                    "name": "tx_pdm_sigmadelta_dither",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S TX PDM sigmadelta dither value"
                },
                {
                    "name": "tx_pdm_sigmadelta_dither2",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM sigmadelta dither2 value"
                },
                {
                    "name": "tx_pdm_sigmadelta_in_shift",
                    "lsb": 19,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4"
                },
                {
                    "name": "tx_pdm_sinc_in_shift",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4"
                },
                {
                    "name": "tx_pdm_lp_in_shift",
                    "lsb": 15,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4"
                },
                {
                    "name": "tx_pdm_hp_in_shift",
                    "lsb": 13,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "I2S TX PDM sigmadelta scale shift number: 0:/2 , 1:x1 , 2:x2 , 3: x4"
                },
                {
                    "name": "tx_pdm_prescale",
                    "lsb": 5,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM prescale for sigmadelta"
                },
                {
                    "name": "tx_pdm_sinc_osr2",
                    "lsb": 1,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "I2S TX PDM OSR2 value"
                },
                {
                    "name": "tx_pdm_hp_bypass",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "I2S TX PDM bypass hp filter or not. The option has been removed."
                }
            ],
            "id": "i2s.tx_pcm2pdm_conf",
            "name": "tx_pcm2pdm_conf",
            "offset": "0x40",
            "doc": "I2S TX PCM2PDM configuration register"
        },
        "i2s.tx_pcm2pdm_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_iir_hp_mult12_0",
                    "lsb": 23,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The fourth parameter of PDM TX IIR_HP filter stage 1 is (504 + I2S_TX_IIR_HP_MULT12_0[2:0])"
                },
                {
                    "name": "tx_iir_hp_mult12_5",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The fourth parameter of PDM TX IIR_HP filter stage 2 is (504 + I2S_TX_IIR_HP_MULT12_5[2:0])"
                },
                {
                    "name": "tx_pdm_fs",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "480",
                    "doc": "I2S TX PDM Fs"
                },
                {
                    "name": "tx_pdm_fp",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "960",
                    "doc": "I2S TX PDM Fp"
                }
            ],
            "id": "i2s.tx_pcm2pdm_conf1",
            "name": "tx_pcm2pdm_conf1",
            "offset": "0x44",
            "doc": "I2S TX PCM2PDM configuration register"
        },
        "i2s.rx_tdm_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_tdm_tot_chan_num",
                    "lsb": 16,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The total channel number of I2S TX TDM mode."
                },
                {
                    "name": "rx_tdm_chan15_en",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 15. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan14_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 14. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan13_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 13. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan12_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 12. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan11_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 11. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan10_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 10. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan9_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 9. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_chan8_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM channel 8. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan7_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 7. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan6_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 6. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan5_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 5. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan4_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 4. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan3_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 3. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan2_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 2. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan1_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 1. 0:  Disable, just input 0 in this channel."
                },
                {
                    "name": "rx_tdm_pdm_chan0_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data input of I2S RX TDM or PDM channel 0. 0:  Disable, just input 0 in this channel."
                }
            ],
            "id": "i2s.rx_tdm_ctrl",
            "name": "rx_tdm_ctrl",
            "offset": "0x50",
            "doc": "I2S TX TDM mode control register"
        },
        "i2s.tx_tdm_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_tdm_skip_msk_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "When DMA TX buffer stores the data of (REG_TX_TDM_TOT_CHAN_NUM + 1)  channels, and only the data of the enabled channels is sent, then this bit should be set. Clear it when all the data stored in DMA TX buffer is for enabled channels."
                },
                {
                    "name": "tx_tdm_tot_chan_num",
                    "lsb": 16,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The total channel number of I2S TX TDM mode."
                },
                {
                    "name": "tx_tdm_chan15_en",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 15. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan14_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 14. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan13_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 13. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan12_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 12. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan11_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 11. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan10_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 10. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan9_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 9. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan8_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 8. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan7_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 7. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan6_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 6. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan5_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 5. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan4_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 4. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan3_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 3. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan2_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 2. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan1_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 1. 0:  Disable, just output 0 in this channel."
                },
                {
                    "name": "tx_tdm_chan0_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Enable the valid data output of I2S TX TDM channel 0. 0:  Disable, just output 0 in this channel."
                }
            ],
            "id": "i2s.tx_tdm_ctrl",
            "name": "tx_tdm_ctrl",
            "offset": "0x54",
            "doc": "I2S TX TDM mode control register"
        },
        "i2s.rx_timing": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_bck_in_dm",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S Rx BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd3",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_ws_in_dm",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S Rx WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd2",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_bck_out_dm",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S Rx BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd1",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_ws_out_dm",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S Rx WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_sd_in_dm",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S Rx SD input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                }
            ],
            "id": "i2s.rx_timing",
            "name": "rx_timing",
            "offset": "0x58",
            "doc": "I2S RX timing control register"
        },
        "i2s.tx_timing": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_bck_in_dm",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX BCK input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd4",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_ws_in_dm",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX WS input signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd3",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_bck_out_dm",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX BCK output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd2",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_ws_out_dm",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX WS output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_sd1_out_dm",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX SD1 output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_sd_out_dm",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The delay mode of I2S TX SD output signal. 0: bypass. 1: delay by pos edge.  2: delay by neg edge. 3: not used."
                }
            ],
            "id": "i2s.tx_timing",
            "name": "tx_timing",
            "offset": "0x5c",
            "doc": "I2S TX timing control register"
        },
        "i2s.lc_hung_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lc_fifo_timeout_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The enable bit for FIFO timeout"
                },
                {
                    "name": "lc_fifo_timeout_shift",
                    "lsb": 8,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bits are used to scale tick counter threshold. The tick counter is reset when counter value >= 88000/2^i2s_lc_fifo_timeout_shift"
                },
                {
                    "name": "lc_fifo_timeout",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "the i2s_tx_hung_int interrupt or the i2s_rx_hung_int interrupt will be triggered when fifo hung counter is equal to this value"
                }
            ],
            "id": "i2s.lc_hung_conf",
            "name": "lc_hung_conf",
            "offset": "0x60",
            "doc": "I2S HUNG configure register."
        },
        "i2s.rxeof_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_eof_num",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "64",
                    "doc": "The receive data bit length is (I2S_RX_BITS_MOD[4:0] + 1) * (REG_RX_EOF_NUM[11:0] + 1) . It will trigger in_suc_eof interrupt in the configured DMA RX channel."
                }
            ],
            "id": "i2s.rxeof_num",
            "name": "rxeof_num",
            "offset": "0x64",
            "doc": "I2S RX data number control register."
        },
        "i2s.conf_sigle_data": {
            "type": "reg",
            "fields": [
                {
                    "name": "single_data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The configured constant channel data to be sent out."
                }
            ],
            "id": "i2s.conf_sigle_data",
            "name": "conf_sigle_data",
            "offset": "0x68",
            "doc": "I2S signal data register"
        },
        "i2s.state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_idle",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: i2s_tx is idle state. 0: i2s_tx is working."
                }
            ],
            "id": "i2s.state",
            "name": "state",
            "offset": "0x6c",
            "doc": "I2S TX status register"
        },
        "i2s.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583648",
                    "doc": "I2S version control register"
                }
            ],
            "id": "i2s.date",
            "name": "date",
            "offset": "0x80",
            "doc": "Version control register"
        },
        "interrupt_core0": {
            "type": "blk",
            "children": [
                "interrupt_core0.mac_intr_map",
                "interrupt_core0.mac_nmi_map",
                "interrupt_core0.pwr_intr_map",
                "interrupt_core0.bb_int_map",
                "interrupt_core0.bt_mac_int_map",
                "interrupt_core0.bt_bb_int_map",
                "interrupt_core0.bt_bb_nmi_map",
                "interrupt_core0.rwbt_irq_map",
                "interrupt_core0.rwble_irq_map",
                "interrupt_core0.rwbt_nmi_map",
                "interrupt_core0.rwble_nmi_map",
                "interrupt_core0.i2c_mst_int_map",
                "interrupt_core0.slc0_intr_map",
                "interrupt_core0.slc1_intr_map",
                "interrupt_core0.apb_ctrl_intr_map",
                "interrupt_core0.uhci0_intr_map",
                "interrupt_core0.gpio_interrupt_pro_map",
                "interrupt_core0.gpio_interrupt_pro_nmi_map",
                "interrupt_core0.spi_intr_1_map",
                "interrupt_core0.spi_intr_2_map",
                "interrupt_core0.i2s1_int_map",
                "interrupt_core0.uart_intr_map",
                "interrupt_core0.uart1_intr_map",
                "interrupt_core0.ledc_int_map",
                "interrupt_core0.efuse_int_map",
                "interrupt_core0.can_int_map",
                "interrupt_core0.usb_intr_map",
                "interrupt_core0.rtc_core_intr_map",
                "interrupt_core0.rmt_intr_map",
                "interrupt_core0.i2c_ext0_intr_map",
                "interrupt_core0.timer_int1_map",
                "interrupt_core0.timer_int2_map",
                "interrupt_core0.tg_t0_int_map",
                "interrupt_core0.tg_wdt_int_map",
                "interrupt_core0.tg1_t0_int_map",
                "interrupt_core0.tg1_wdt_int_map",
                "interrupt_core0.cache_ia_int_map",
                "interrupt_core0.systimer_target0_int_map",
                "interrupt_core0.systimer_target1_int_map",
                "interrupt_core0.systimer_target2_int_map",
                "interrupt_core0.spi_mem_reject_intr_map",
                "interrupt_core0.icache_preload_int_map",
                "interrupt_core0.icache_sync_int_map",
                "interrupt_core0.apb_adc_int_map",
                "interrupt_core0.dma_ch0_int_map",
                "interrupt_core0.dma_ch1_int_map",
                "interrupt_core0.dma_ch2_int_map",
                "interrupt_core0.rsa_int_map",
                "interrupt_core0.aes_int_map",
                "interrupt_core0.sha_int_map",
                "interrupt_core0.cpu_intr_from_cpu_0_map",
                "interrupt_core0.cpu_intr_from_cpu_1_map",
                "interrupt_core0.cpu_intr_from_cpu_2_map",
                "interrupt_core0.cpu_intr_from_cpu_3_map",
                "interrupt_core0.assist_debug_intr_map",
                "interrupt_core0.dma_apbperi_pms_monitor_violate_intr_map",
                "interrupt_core0.core_0_iram0_pms_monitor_violate_intr_map",
                "interrupt_core0.core_0_dram0_pms_monitor_violate_intr_map",
                "interrupt_core0.core_0_pif_pms_monitor_violate_intr_map",
                "interrupt_core0.core_0_pif_pms_monitor_violate_size_intr_map",
                "interrupt_core0.backup_pms_violate_intr_map",
                "interrupt_core0.cache_core0_acs_int_map",
                "interrupt_core0.intr_status_reg_0",
                "interrupt_core0.intr_status_reg_1",
                "interrupt_core0.clock_gate",
                "interrupt_core0.cpu_int_enable",
                "interrupt_core0.cpu_int_type",
                "interrupt_core0.cpu_int_clear",
                "interrupt_core0.cpu_int_eip_status",
                "interrupt_core0.cpu_int_pri_0",
                "interrupt_core0.cpu_int_pri_1",
                "interrupt_core0.cpu_int_pri_2",
                "interrupt_core0.cpu_int_pri_3",
                "interrupt_core0.cpu_int_pri_4",
                "interrupt_core0.cpu_int_pri_5",
                "interrupt_core0.cpu_int_pri_6",
                "interrupt_core0.cpu_int_pri_7",
                "interrupt_core0.cpu_int_pri_8",
                "interrupt_core0.cpu_int_pri_9",
                "interrupt_core0.cpu_int_pri_10",
                "interrupt_core0.cpu_int_pri_11",
                "interrupt_core0.cpu_int_pri_12",
                "interrupt_core0.cpu_int_pri_13",
                "interrupt_core0.cpu_int_pri_14",
                "interrupt_core0.cpu_int_pri_15",
                "interrupt_core0.cpu_int_pri_16",
                "interrupt_core0.cpu_int_pri_17",
                "interrupt_core0.cpu_int_pri_18",
                "interrupt_core0.cpu_int_pri_19",
                "interrupt_core0.cpu_int_pri_20",
                "interrupt_core0.cpu_int_pri_21",
                "interrupt_core0.cpu_int_pri_22",
                "interrupt_core0.cpu_int_pri_23",
                "interrupt_core0.cpu_int_pri_24",
                "interrupt_core0.cpu_int_pri_25",
                "interrupt_core0.cpu_int_pri_26",
                "interrupt_core0.cpu_int_pri_27",
                "interrupt_core0.cpu_int_pri_28",
                "interrupt_core0.cpu_int_pri_29",
                "interrupt_core0.cpu_int_pri_30",
                "interrupt_core0.cpu_int_pri_31",
                "interrupt_core0.cpu_int_thresh",
                "interrupt_core0.interrupt_reg_date"
            ],
            "id": "interrupt_core0",
            "name": "interrupt_core0",
            "offset": "0x600c2000",
            "doc": "Interrupt Core"
        },
        "interrupt_core0.mac_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mac_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core0_mac_intr_map"
                }
            ],
            "id": "interrupt_core0.mac_intr_map",
            "name": "mac_intr_map",
            "offset": "0x0",
            "doc": "mac intr map register"
        },
        "interrupt_core0.mac_nmi_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mac_nmi_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_mac_nmi_map"
                }
            ],
            "id": "interrupt_core0.mac_nmi_map",
            "name": "mac_nmi_map",
            "offset": "0x4",
            "doc": "mac nmi_intr map register"
        },
        "interrupt_core0.pwr_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pwr_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_pwr_intr_map"
                }
            ],
            "id": "interrupt_core0.pwr_intr_map",
            "name": "pwr_intr_map",
            "offset": "0x8",
            "doc": "pwr intr map register"
        },
        "interrupt_core0.bb_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bb_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_bb_int_map"
                }
            ],
            "id": "interrupt_core0.bb_int_map",
            "name": "bb_int_map",
            "offset": "0xc",
            "doc": "bb intr map register"
        },
        "interrupt_core0.bt_mac_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bt_mac_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_bt_mac_int_map"
                }
            ],
            "id": "interrupt_core0.bt_mac_int_map",
            "name": "bt_mac_int_map",
            "offset": "0x10",
            "doc": "bt intr map register"
        },
        "interrupt_core0.bt_bb_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bt_bb_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_bt_bb_int_map"
                }
            ],
            "id": "interrupt_core0.bt_bb_int_map",
            "name": "bt_bb_int_map",
            "offset": "0x14",
            "doc": "bb_bt intr map register"
        },
        "interrupt_core0.bt_bb_nmi_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bt_bb_nmi_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_bt_bb_nmi_map"
                }
            ],
            "id": "interrupt_core0.bt_bb_nmi_map",
            "name": "bt_bb_nmi_map",
            "offset": "0x18",
            "doc": "bb_bt_nmi intr map register"
        },
        "interrupt_core0.rwbt_irq_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rwbt_irq_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rwbt_irq_map"
                }
            ],
            "id": "interrupt_core0.rwbt_irq_map",
            "name": "rwbt_irq_map",
            "offset": "0x1c",
            "doc": "rwbt intr map register"
        },
        "interrupt_core0.rwble_irq_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rwble_irq_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rwble_irq_map"
                }
            ],
            "id": "interrupt_core0.rwble_irq_map",
            "name": "rwble_irq_map",
            "offset": "0x20",
            "doc": "rwble intr map register"
        },
        "interrupt_core0.rwbt_nmi_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rwbt_nmi_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rwbt_nmi_map"
                }
            ],
            "id": "interrupt_core0.rwbt_nmi_map",
            "name": "rwbt_nmi_map",
            "offset": "0x24",
            "doc": "rwbt_nmi intr map register"
        },
        "interrupt_core0.rwble_nmi_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rwble_nmi_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rwble_nmi_map"
                }
            ],
            "id": "interrupt_core0.rwble_nmi_map",
            "name": "rwble_nmi_map",
            "offset": "0x28",
            "doc": "rwble_nmi intr map register"
        },
        "interrupt_core0.i2c_mst_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "i2c_mst_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_i2c_mst_int_map"
                }
            ],
            "id": "interrupt_core0.i2c_mst_int_map",
            "name": "i2c_mst_int_map",
            "offset": "0x2c",
            "doc": "i2c intr map register"
        },
        "interrupt_core0.slc0_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slc0_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_slc0_intr_map"
                }
            ],
            "id": "interrupt_core0.slc0_intr_map",
            "name": "slc0_intr_map",
            "offset": "0x30",
            "doc": "slc0 intr map register"
        },
        "interrupt_core0.slc1_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slc1_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_slc1_intr_map"
                }
            ],
            "id": "interrupt_core0.slc1_intr_map",
            "name": "slc1_intr_map",
            "offset": "0x34",
            "doc": "slc1 intr map register"
        },
        "interrupt_core0.apb_ctrl_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_ctrl_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_apb_ctrl_intr_map"
                }
            ],
            "id": "interrupt_core0.apb_ctrl_intr_map",
            "name": "apb_ctrl_intr_map",
            "offset": "0x38",
            "doc": "apb_ctrl intr map register"
        },
        "interrupt_core0.uhci0_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "uhci0_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_uhci0_intr_map"
                }
            ],
            "id": "interrupt_core0.uhci0_intr_map",
            "name": "uhci0_intr_map",
            "offset": "0x3c",
            "doc": "uchi0 intr map register"
        },
        "interrupt_core0.gpio_interrupt_pro_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "gpio_interrupt_pro_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_gpio_interrupt_pro_map"
                }
            ],
            "id": "interrupt_core0.gpio_interrupt_pro_map",
            "name": "gpio_interrupt_pro_map",
            "offset": "0x40",
            "doc": "gpio intr map register"
        },
        "interrupt_core0.gpio_interrupt_pro_nmi_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "gpio_interrupt_pro_nmi_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_gpio_interrupt_pro_nmi_map"
                }
            ],
            "id": "interrupt_core0.gpio_interrupt_pro_nmi_map",
            "name": "gpio_interrupt_pro_nmi_map",
            "offset": "0x44",
            "doc": "gpio_pro intr map register"
        },
        "interrupt_core0.spi_intr_1_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi_intr_1_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_spi_intr_1_map"
                }
            ],
            "id": "interrupt_core0.spi_intr_1_map",
            "name": "spi_intr_1_map",
            "offset": "0x48",
            "doc": "gpio_pro_nmi intr map register"
        },
        "interrupt_core0.spi_intr_2_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi_intr_2_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_spi_intr_2_map"
                }
            ],
            "id": "interrupt_core0.spi_intr_2_map",
            "name": "spi_intr_2_map",
            "offset": "0x4c",
            "doc": "spi1 intr map register"
        },
        "interrupt_core0.i2s1_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "i2s1_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_i2s1_int_map"
                }
            ],
            "id": "interrupt_core0.i2s1_int_map",
            "name": "i2s1_int_map",
            "offset": "0x50",
            "doc": "spi2 intr map register"
        },
        "interrupt_core0.uart_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "uart_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_uart_intr_map"
                }
            ],
            "id": "interrupt_core0.uart_intr_map",
            "name": "uart_intr_map",
            "offset": "0x54",
            "doc": "i2s1 intr map register"
        },
        "interrupt_core0.uart1_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "uart1_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_uart1_intr_map"
                }
            ],
            "id": "interrupt_core0.uart1_intr_map",
            "name": "uart1_intr_map",
            "offset": "0x58",
            "doc": "uart1 intr map register"
        },
        "interrupt_core0.ledc_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ledc_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_ledc_int_map"
                }
            ],
            "id": "interrupt_core0.ledc_int_map",
            "name": "ledc_int_map",
            "offset": "0x5c",
            "doc": "ledc intr map register"
        },
        "interrupt_core0.efuse_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "efuse_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_efuse_int_map"
                }
            ],
            "id": "interrupt_core0.efuse_int_map",
            "name": "efuse_int_map",
            "offset": "0x60",
            "doc": "efuse intr map register"
        },
        "interrupt_core0.can_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "can_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_can_int_map"
                }
            ],
            "id": "interrupt_core0.can_int_map",
            "name": "can_int_map",
            "offset": "0x64",
            "doc": "can intr map register"
        },
        "interrupt_core0.usb_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usb_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_usb_intr_map"
                }
            ],
            "id": "interrupt_core0.usb_intr_map",
            "name": "usb_intr_map",
            "offset": "0x68",
            "doc": "usb intr map register"
        },
        "interrupt_core0.rtc_core_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_core_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rtc_core_intr_map"
                }
            ],
            "id": "interrupt_core0.rtc_core_intr_map",
            "name": "rtc_core_intr_map",
            "offset": "0x6c",
            "doc": "rtc intr map register"
        },
        "interrupt_core0.rmt_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rmt_intr_map"
                }
            ],
            "id": "interrupt_core0.rmt_intr_map",
            "name": "rmt_intr_map",
            "offset": "0x70",
            "doc": "rmt intr map register"
        },
        "interrupt_core0.i2c_ext0_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "i2c_ext0_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_i2c_ext0_intr_map"
                }
            ],
            "id": "interrupt_core0.i2c_ext0_intr_map",
            "name": "i2c_ext0_intr_map",
            "offset": "0x74",
            "doc": "i2c intr map register"
        },
        "interrupt_core0.timer_int1_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_int1_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_timer_int1_map"
                }
            ],
            "id": "interrupt_core0.timer_int1_map",
            "name": "timer_int1_map",
            "offset": "0x78",
            "doc": "timer1 intr map register"
        },
        "interrupt_core0.timer_int2_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_int2_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_timer_int2_map"
                }
            ],
            "id": "interrupt_core0.timer_int2_map",
            "name": "timer_int2_map",
            "offset": "0x7c",
            "doc": "timer2 intr map register"
        },
        "interrupt_core0.tg_t0_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tg_t0_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_tg_t0_int_map"
                }
            ],
            "id": "interrupt_core0.tg_t0_int_map",
            "name": "tg_t0_int_map",
            "offset": "0x80",
            "doc": "tg to intr map register"
        },
        "interrupt_core0.tg_wdt_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tg_wdt_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_tg_wdt_int_map"
                }
            ],
            "id": "interrupt_core0.tg_wdt_int_map",
            "name": "tg_wdt_int_map",
            "offset": "0x84",
            "doc": "tg wdt intr map register"
        },
        "interrupt_core0.tg1_t0_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tg1_t0_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_tg1_t0_int_map"
                }
            ],
            "id": "interrupt_core0.tg1_t0_int_map",
            "name": "tg1_t0_int_map",
            "offset": "0x88",
            "doc": "tg1 to intr map register"
        },
        "interrupt_core0.tg1_wdt_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tg1_wdt_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_tg1_wdt_int_map"
                }
            ],
            "id": "interrupt_core0.tg1_wdt_int_map",
            "name": "tg1_wdt_int_map",
            "offset": "0x8c",
            "doc": "tg1 wdt intr map register"
        },
        "interrupt_core0.cache_ia_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_ia_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cache_ia_int_map"
                }
            ],
            "id": "interrupt_core0.cache_ia_int_map",
            "name": "cache_ia_int_map",
            "offset": "0x90",
            "doc": "cache ia intr map register"
        },
        "interrupt_core0.systimer_target0_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "systimer_target0_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_systimer_target0_int_map"
                }
            ],
            "id": "interrupt_core0.systimer_target0_int_map",
            "name": "systimer_target0_int_map",
            "offset": "0x94",
            "doc": "systimer intr map register"
        },
        "interrupt_core0.systimer_target1_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "systimer_target1_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_systimer_target1_int_map"
                }
            ],
            "id": "interrupt_core0.systimer_target1_int_map",
            "name": "systimer_target1_int_map",
            "offset": "0x98",
            "doc": "systimer target1 intr map register"
        },
        "interrupt_core0.systimer_target2_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "systimer_target2_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_systimer_target2_int_map"
                }
            ],
            "id": "interrupt_core0.systimer_target2_int_map",
            "name": "systimer_target2_int_map",
            "offset": "0x9c",
            "doc": "systimer target2 intr map register"
        },
        "interrupt_core0.spi_mem_reject_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi_mem_reject_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_spi_mem_reject_intr_map"
                }
            ],
            "id": "interrupt_core0.spi_mem_reject_intr_map",
            "name": "spi_mem_reject_intr_map",
            "offset": "0xa0",
            "doc": "spi mem reject intr map register"
        },
        "interrupt_core0.icache_preload_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_preload_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_icache_preload_int_map"
                }
            ],
            "id": "interrupt_core0.icache_preload_int_map",
            "name": "icache_preload_int_map",
            "offset": "0xa4",
            "doc": "icache perload intr map register"
        },
        "interrupt_core0.icache_sync_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "icache_sync_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_icache_sync_int_map"
                }
            ],
            "id": "interrupt_core0.icache_sync_int_map",
            "name": "icache_sync_int_map",
            "offset": "0xa8",
            "doc": "icache sync intr map register"
        },
        "interrupt_core0.apb_adc_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_adc_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_apb_adc_int_map"
                }
            ],
            "id": "interrupt_core0.apb_adc_int_map",
            "name": "apb_adc_int_map",
            "offset": "0xac",
            "doc": "adc intr map register"
        },
        "interrupt_core0.dma_ch0_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_ch0_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_dma_ch0_int_map"
                }
            ],
            "id": "interrupt_core0.dma_ch0_int_map",
            "name": "dma_ch0_int_map",
            "offset": "0xb0",
            "doc": "dma ch0 intr map register"
        },
        "interrupt_core0.dma_ch1_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_ch1_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_dma_ch1_int_map"
                }
            ],
            "id": "interrupt_core0.dma_ch1_int_map",
            "name": "dma_ch1_int_map",
            "offset": "0xb4",
            "doc": "dma ch1 intr map register"
        },
        "interrupt_core0.dma_ch2_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_ch2_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_dma_ch2_int_map"
                }
            ],
            "id": "interrupt_core0.dma_ch2_int_map",
            "name": "dma_ch2_int_map",
            "offset": "0xb8",
            "doc": "dma ch2 intr map register"
        },
        "interrupt_core0.rsa_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsa_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_rsa_int_map"
                }
            ],
            "id": "interrupt_core0.rsa_int_map",
            "name": "rsa_int_map",
            "offset": "0xbc",
            "doc": "rsa intr map register"
        },
        "interrupt_core0.aes_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "aes_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_aes_int_map"
                }
            ],
            "id": "interrupt_core0.aes_int_map",
            "name": "aes_int_map",
            "offset": "0xc0",
            "doc": "aes intr map register"
        },
        "interrupt_core0.sha_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sha_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_sha_int_map"
                }
            ],
            "id": "interrupt_core0.sha_int_map",
            "name": "sha_int_map",
            "offset": "0xc4",
            "doc": "sha intr map register"
        },
        "interrupt_core0.cpu_intr_from_cpu_0_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_0_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_intr_from_cpu_0_map"
                }
            ],
            "id": "interrupt_core0.cpu_intr_from_cpu_0_map",
            "name": "cpu_intr_from_cpu_0_map",
            "offset": "0xc8",
            "doc": "cpu from cpu 0 intr map register"
        },
        "interrupt_core0.cpu_intr_from_cpu_1_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_1_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_intr_from_cpu_1_map"
                }
            ],
            "id": "interrupt_core0.cpu_intr_from_cpu_1_map",
            "name": "cpu_intr_from_cpu_1_map",
            "offset": "0xcc",
            "doc": "cpu from cpu 0 intr map register"
        },
        "interrupt_core0.cpu_intr_from_cpu_2_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_2_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_intr_from_cpu_2_map"
                }
            ],
            "id": "interrupt_core0.cpu_intr_from_cpu_2_map",
            "name": "cpu_intr_from_cpu_2_map",
            "offset": "0xd0",
            "doc": "cpu from cpu 1 intr map register"
        },
        "interrupt_core0.cpu_intr_from_cpu_3_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_3_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_intr_from_cpu_3_map"
                }
            ],
            "id": "interrupt_core0.cpu_intr_from_cpu_3_map",
            "name": "cpu_intr_from_cpu_3_map",
            "offset": "0xd4",
            "doc": "cpu from cpu 3 intr map register"
        },
        "interrupt_core0.assist_debug_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "assist_debug_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_assist_debug_intr_map"
                }
            ],
            "id": "interrupt_core0.assist_debug_intr_map",
            "name": "assist_debug_intr_map",
            "offset": "0xd8",
            "doc": "assist debug intr map register"
        },
        "interrupt_core0.dma_apbperi_pms_monitor_violate_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_dma_apbperi_pms_monitor_violate_intr_map"
                }
            ],
            "id": "interrupt_core0.dma_apbperi_pms_monitor_violate_intr_map",
            "name": "dma_apbperi_pms_monitor_violate_intr_map",
            "offset": "0xdc",
            "doc": "dma pms violatile intr map register"
        },
        "interrupt_core0.core_0_iram0_pms_monitor_violate_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_core_0_iram0_pms_monitor_violate_intr_map"
                }
            ],
            "id": "interrupt_core0.core_0_iram0_pms_monitor_violate_intr_map",
            "name": "core_0_iram0_pms_monitor_violate_intr_map",
            "offset": "0xe0",
            "doc": "iram0 pms violatile intr map register"
        },
        "interrupt_core0.core_0_dram0_pms_monitor_violate_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_core_0_dram0_pms_monitor_violate_intr_map"
                }
            ],
            "id": "interrupt_core0.core_0_dram0_pms_monitor_violate_intr_map",
            "name": "core_0_dram0_pms_monitor_violate_intr_map",
            "offset": "0xe4",
            "doc": "mac intr map register"
        },
        "interrupt_core0.core_0_pif_pms_monitor_violate_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_core_0_pif_pms_monitor_violate_intr_map"
                }
            ],
            "id": "interrupt_core0.core_0_pif_pms_monitor_violate_intr_map",
            "name": "core_0_pif_pms_monitor_violate_intr_map",
            "offset": "0xe8",
            "doc": "mac intr map register"
        },
        "interrupt_core0.core_0_pif_pms_monitor_violate_size_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_size_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_core_0_pif_pms_monitor_violate_size_intr_map"
                }
            ],
            "id": "interrupt_core0.core_0_pif_pms_monitor_violate_size_intr_map",
            "name": "core_0_pif_pms_monitor_violate_size_intr_map",
            "offset": "0xec",
            "doc": "mac intr map register"
        },
        "interrupt_core0.backup_pms_violate_intr_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_pms_violate_intr_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_backup_pms_violate_intr_map"
                }
            ],
            "id": "interrupt_core0.backup_pms_violate_intr_map",
            "name": "backup_pms_violate_intr_map",
            "offset": "0xf0",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cache_core0_acs_int_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_core0_acs_int_map",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cache_core0_acs_int_map"
                }
            ],
            "id": "interrupt_core0.cache_core0_acs_int_map",
            "name": "cache_core0_acs_int_map",
            "offset": "0xf4",
            "doc": "mac intr map register"
        },
        "interrupt_core0.intr_status_reg_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "intr_status_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core0_intr_status_0"
                }
            ],
            "id": "interrupt_core0.intr_status_reg_0",
            "name": "intr_status_reg_0",
            "offset": "0xf8",
            "doc": "mac intr map register"
        },
        "interrupt_core0.intr_status_reg_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "intr_status_1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core0_intr_status_1"
                }
            ],
            "id": "interrupt_core0.intr_status_reg_1",
            "name": "intr_status_reg_1",
            "offset": "0xfc",
            "doc": "mac intr map register"
        },
        "interrupt_core0.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reg_clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_core0_reg_clk_en"
                }
            ],
            "id": "interrupt_core0.clock_gate",
            "name": "clock_gate",
            "offset": "0x100",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_enable": {
            "type": "reg",
            "fields": [
                {
                    "name": "cpu_int_enable",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_int_enable"
                }
            ],
            "id": "interrupt_core0.cpu_int_enable",
            "name": "cpu_int_enable",
            "offset": "0x104",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_type": {
            "type": "reg",
            "fields": [
                {
                    "name": "cpu_int_type",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_int_type"
                }
            ],
            "id": "interrupt_core0.cpu_int_type",
            "name": "cpu_int_type",
            "offset": "0x108",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_clear": {
            "type": "reg",
            "fields": [
                {
                    "name": "cpu_int_clear",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_int_clear"
                }
            ],
            "id": "interrupt_core0.cpu_int_clear",
            "name": "cpu_int_clear",
            "offset": "0x10c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_eip_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "cpu_int_eip_status",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_core0_cpu_int_eip_status"
                }
            ],
            "id": "interrupt_core0.cpu_int_eip_status",
            "name": "cpu_int_eip_status",
            "offset": "0x110",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_0_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_0_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_0",
            "name": "cpu_int_pri_0",
            "offset": "0x114",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_1_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_1_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_1",
            "name": "cpu_int_pri_1",
            "offset": "0x118",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_2_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_2_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_2",
            "name": "cpu_int_pri_2",
            "offset": "0x11c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_3_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_3_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_3",
            "name": "cpu_int_pri_3",
            "offset": "0x120",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_4_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_4_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_4",
            "name": "cpu_int_pri_4",
            "offset": "0x124",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_5_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_5_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_5",
            "name": "cpu_int_pri_5",
            "offset": "0x128",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_6_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_6_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_6",
            "name": "cpu_int_pri_6",
            "offset": "0x12c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_7": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_7_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_7_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_7",
            "name": "cpu_int_pri_7",
            "offset": "0x130",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_8": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_8_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_8_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_8",
            "name": "cpu_int_pri_8",
            "offset": "0x134",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_9": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_9_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_9_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_9",
            "name": "cpu_int_pri_9",
            "offset": "0x138",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_10": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_10_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_10_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_10",
            "name": "cpu_int_pri_10",
            "offset": "0x13c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_11": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_11_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_11_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_11",
            "name": "cpu_int_pri_11",
            "offset": "0x140",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_12": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_12_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_12_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_12",
            "name": "cpu_int_pri_12",
            "offset": "0x144",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_13": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_13_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_13_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_13",
            "name": "cpu_int_pri_13",
            "offset": "0x148",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_14": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_14_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_14_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_14",
            "name": "cpu_int_pri_14",
            "offset": "0x14c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_15": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_15_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_15_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_15",
            "name": "cpu_int_pri_15",
            "offset": "0x150",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_16": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_16_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_16_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_16",
            "name": "cpu_int_pri_16",
            "offset": "0x154",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_17": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_17_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_17_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_17",
            "name": "cpu_int_pri_17",
            "offset": "0x158",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_18": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_18_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_18_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_18",
            "name": "cpu_int_pri_18",
            "offset": "0x15c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_19": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_19_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_19_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_19",
            "name": "cpu_int_pri_19",
            "offset": "0x160",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_20": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_20_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_20_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_20",
            "name": "cpu_int_pri_20",
            "offset": "0x164",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_21": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_21_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_21_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_21",
            "name": "cpu_int_pri_21",
            "offset": "0x168",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_22": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_22_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_22_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_22",
            "name": "cpu_int_pri_22",
            "offset": "0x16c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_23": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_23_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_23_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_23",
            "name": "cpu_int_pri_23",
            "offset": "0x170",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_24": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_24_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_24_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_24",
            "name": "cpu_int_pri_24",
            "offset": "0x174",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_25": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_25_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_25_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_25",
            "name": "cpu_int_pri_25",
            "offset": "0x178",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_26": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_26_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_26_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_26",
            "name": "cpu_int_pri_26",
            "offset": "0x17c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_27": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_27_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_27_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_27",
            "name": "cpu_int_pri_27",
            "offset": "0x180",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_28": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_28_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_28_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_28",
            "name": "cpu_int_pri_28",
            "offset": "0x184",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_29": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_29_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_29_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_29",
            "name": "cpu_int_pri_29",
            "offset": "0x188",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_30": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_30_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_30_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_30",
            "name": "cpu_int_pri_30",
            "offset": "0x18c",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_pri_31": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_pri_31_map",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_pri_31_map"
                }
            ],
            "id": "interrupt_core0.cpu_int_pri_31",
            "name": "cpu_int_pri_31",
            "offset": "0x190",
            "doc": "mac intr map register"
        },
        "interrupt_core0.cpu_int_thresh": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_int_thresh",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_core0_cpu_int_thresh"
                }
            ],
            "id": "interrupt_core0.cpu_int_thresh",
            "name": "cpu_int_thresh",
            "offset": "0x194",
            "doc": "mac intr map register"
        },
        "interrupt_core0.interrupt_reg_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "interrupt_reg_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583632",
                    "doc": "reg_core0_interrupt_reg_date"
                }
            ],
            "id": "interrupt_core0.interrupt_reg_date",
            "name": "interrupt_reg_date",
            "offset": "0x7fc",
            "doc": "mac intr map register"
        },
        "io_mux": {
            "type": "blk",
            "children": [
                "io_mux.pin_ctrl",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.gpio%s",
                "io_mux.date"
            ],
            "id": "io_mux",
            "name": "io_mux",
            "offset": "0x60009000",
            "doc": "Input/Output Multiplexer"
        },
        "io_mux.pin_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_out3",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "If you want to output clock for I2S to CLK_OUT_out3, set this register to 0x0. CLK_OUT_out3 can be found in peripheral output signals."
                },
                {
                    "name": "clk_out2",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "If you want to output clock for I2S to CLK_OUT_out2, set this register to 0x0. CLK_OUT_out2 can be found in peripheral output signals."
                },
                {
                    "name": "clk_out1",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "If you want to output clock for I2S to CLK_OUT_out1, set this register to 0x0. CLK_OUT_out1 can be found in peripheral output signals."
                }
            ],
            "id": "io_mux.pin_ctrl",
            "name": "pin_ctrl",
            "offset": "0x0",
            "doc": "Clock Output Configuration Register"
        },
        "io_mux.gpio%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "filter_en",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable filter for pin input signals. 1: Filter enabled; 2: Filter disabled."
                },
                {
                    "name": "mcu_sel",
                    "lsb": 12,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Select IO MUX function for this signal. 0: Select Function 1; 1: Select Function 2; etc."
                },
                {
                    "name": "fun_drv",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "Select the drive strength of the pad. 0: ~5 mA; 1: ~10mA; 2: ~20mA; 3: ~40mA."
                },
                {
                    "name": "fun_ie",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Input enable of the pad. 1: input enabled; 0: input disabled."
                },
                {
                    "name": "fun_wpu",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Pull-up enable of the pad. 1: internal pull-up enabled; 0: internal pull-up disabled."
                },
                {
                    "name": "fun_wpd",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Pull-down enable of the pad. 1: internal pull-down enabled; 0: internal pull-down disabled."
                },
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mcu_ie",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Input enable of the pad during sleep mode. 1: input enabled; 0: input disabled."
                },
                {
                    "name": "mcu_wpu",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Pull-up enable of the pad during sleep mode. 1: internal pull-up enabled; 0: internal pull-up disabled."
                },
                {
                    "name": "mcu_wpd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Pull-down enable of the pad in sleep mode. 1: internal pull-down enabled; 0: internal pull-down disabled."
                },
                {
                    "name": "slp_sel",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sleep mode selection of this pad. Set to 1 to put the pad in pad mode."
                },
                {
                    "name": "mcu_oe",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Output enable of the pad in sleep mode. 1: output enabled; 0: output disabled."
                }
            ],
            "id": "io_mux.gpio%s",
            "name": "gpio%s",
            "offset": "0x58",
            "doc": "IO MUX Configure Register for pad XTAL_32K_P"
        },
        "io_mux.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reg_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33579088",
                    "doc": "Version control register"
                }
            ],
            "id": "io_mux.date",
            "name": "date",
            "offset": "0xfc",
            "doc": "IO MUX Version Control Register"
        },
        "ledc": {
            "type": "blk",
            "children": [
                "ledc.lsch0_conf0",
                "ledc.lsch0_hpoint",
                "ledc.lsch0_duty",
                "ledc.lsch0_conf1",
                "ledc.lsch0_duty_r",
                "ledc.lsch1_conf0",
                "ledc.lsch1_hpoint",
                "ledc.lsch1_duty",
                "ledc.lsch1_conf1",
                "ledc.lsch1_duty_r",
                "ledc.lsch2_conf0",
                "ledc.lsch2_hpoint",
                "ledc.lsch2_duty",
                "ledc.lsch2_conf1",
                "ledc.lsch2_duty_r",
                "ledc.lsch3_conf0",
                "ledc.lsch3_hpoint",
                "ledc.lsch3_duty",
                "ledc.lsch3_conf1",
                "ledc.lsch3_duty_r",
                "ledc.lsch4_conf0",
                "ledc.lsch4_hpoint",
                "ledc.lsch4_duty",
                "ledc.lsch4_conf1",
                "ledc.lsch4_duty_r",
                "ledc.lsch5_conf0",
                "ledc.lsch5_hpoint",
                "ledc.lsch5_duty",
                "ledc.lsch5_conf1",
                "ledc.lsch5_duty_r",
                "ledc.lstimer0_conf",
                "ledc.lstimer0_value",
                "ledc.lstimer1_conf",
                "ledc.lstimer1_value",
                "ledc.lstimer2_conf",
                "ledc.lstimer2_value",
                "ledc.lstimer3_conf",
                "ledc.lstimer3_value",
                "ledc.int_raw",
                "ledc.int_st",
                "ledc.int_ena",
                "ledc.int_clr",
                "ledc.conf",
                "ledc.date"
            ],
            "id": "ledc",
            "name": "ledc",
            "offset": "0x60019000",
            "doc": "LED Control PWM (Pulse Width Modulation)"
        },
        "ledc.lsch0_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch0",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch0."
                },
                {
                    "name": "ovf_cnt_en_lsch0",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch0."
                },
                {
                    "name": "ovf_num_lsch0",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch0."
                },
                {
                    "name": "para_up_lsch0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch0."
                },
                {
                    "name": "idle_lv_lsch0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch0."
                },
                {
                    "name": "sig_out_en_lsch0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch0."
                },
                {
                    "name": "timer_sel_lsch0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch0."
                }
            ],
            "id": "ledc.lsch0_conf0",
            "name": "lsch0_conf0",
            "offset": "0x0",
            "doc": "LEDC_LSCH0_CONF0."
        },
        "ledc.lsch0_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch0",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch0."
                }
            ],
            "id": "ledc.lsch0_hpoint",
            "name": "lsch0_hpoint",
            "offset": "0x4",
            "doc": "LEDC_LSCH0_HPOINT."
        },
        "ledc.lsch0_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch0",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch0."
                }
            ],
            "id": "ledc.lsch0_duty",
            "name": "lsch0_duty",
            "offset": "0x8",
            "doc": "LEDC_LSCH0_DUTY."
        },
        "ledc.lsch0_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch0",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch0."
                },
                {
                    "name": "duty_inc_lsch0",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch0."
                },
                {
                    "name": "duty_num_lsch0",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch0."
                },
                {
                    "name": "duty_cycle_lsch0",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch0."
                },
                {
                    "name": "duty_scale_lsch0",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch0."
                }
            ],
            "id": "ledc.lsch0_conf1",
            "name": "lsch0_conf1",
            "offset": "0xc",
            "doc": "LEDC_LSCH0_CONF1."
        },
        "ledc.lsch0_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch0_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch0_r."
                }
            ],
            "id": "ledc.lsch0_duty_r",
            "name": "lsch0_duty_r",
            "offset": "0x10",
            "doc": "LEDC_LSCH0_DUTY_R."
        },
        "ledc.lsch1_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch1",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch1."
                },
                {
                    "name": "ovf_cnt_en_lsch1",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch1."
                },
                {
                    "name": "ovf_num_lsch1",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch1."
                },
                {
                    "name": "para_up_lsch1",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch1."
                },
                {
                    "name": "idle_lv_lsch1",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch1."
                },
                {
                    "name": "sig_out_en_lsch1",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch1."
                },
                {
                    "name": "timer_sel_lsch1",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch1."
                }
            ],
            "id": "ledc.lsch1_conf0",
            "name": "lsch1_conf0",
            "offset": "0x14",
            "doc": "LEDC_LSCH1_CONF0."
        },
        "ledc.lsch1_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch1",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch1."
                }
            ],
            "id": "ledc.lsch1_hpoint",
            "name": "lsch1_hpoint",
            "offset": "0x18",
            "doc": "LEDC_LSCH1_HPOINT."
        },
        "ledc.lsch1_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch1",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch1."
                }
            ],
            "id": "ledc.lsch1_duty",
            "name": "lsch1_duty",
            "offset": "0x1c",
            "doc": "LEDC_LSCH1_DUTY."
        },
        "ledc.lsch1_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch1."
                },
                {
                    "name": "duty_inc_lsch1",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch1."
                },
                {
                    "name": "duty_num_lsch1",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch1."
                },
                {
                    "name": "duty_cycle_lsch1",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch1."
                },
                {
                    "name": "duty_scale_lsch1",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch1."
                }
            ],
            "id": "ledc.lsch1_conf1",
            "name": "lsch1_conf1",
            "offset": "0x20",
            "doc": "LEDC_LSCH1_CONF1."
        },
        "ledc.lsch1_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch1_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch1_r."
                }
            ],
            "id": "ledc.lsch1_duty_r",
            "name": "lsch1_duty_r",
            "offset": "0x24",
            "doc": "LEDC_LSCH1_DUTY_R."
        },
        "ledc.lsch2_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch2",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch2."
                },
                {
                    "name": "ovf_cnt_en_lsch2",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch2."
                },
                {
                    "name": "ovf_num_lsch2",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch2."
                },
                {
                    "name": "para_up_lsch2",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch2."
                },
                {
                    "name": "idle_lv_lsch2",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch2."
                },
                {
                    "name": "sig_out_en_lsch2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch2."
                },
                {
                    "name": "timer_sel_lsch2",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch2."
                }
            ],
            "id": "ledc.lsch2_conf0",
            "name": "lsch2_conf0",
            "offset": "0x28",
            "doc": "LEDC_LSCH2_CONF0."
        },
        "ledc.lsch2_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch2",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch2."
                }
            ],
            "id": "ledc.lsch2_hpoint",
            "name": "lsch2_hpoint",
            "offset": "0x2c",
            "doc": "LEDC_LSCH2_HPOINT."
        },
        "ledc.lsch2_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch2",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch2."
                }
            ],
            "id": "ledc.lsch2_duty",
            "name": "lsch2_duty",
            "offset": "0x30",
            "doc": "LEDC_LSCH2_DUTY."
        },
        "ledc.lsch2_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch2",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch2."
                },
                {
                    "name": "duty_inc_lsch2",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch2."
                },
                {
                    "name": "duty_num_lsch2",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch2."
                },
                {
                    "name": "duty_cycle_lsch2",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch2."
                },
                {
                    "name": "duty_scale_lsch2",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch2."
                }
            ],
            "id": "ledc.lsch2_conf1",
            "name": "lsch2_conf1",
            "offset": "0x34",
            "doc": "LEDC_LSCH2_CONF1."
        },
        "ledc.lsch2_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch2_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch2_r."
                }
            ],
            "id": "ledc.lsch2_duty_r",
            "name": "lsch2_duty_r",
            "offset": "0x38",
            "doc": "LEDC_LSCH2_DUTY_R."
        },
        "ledc.lsch3_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch3",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch3."
                },
                {
                    "name": "ovf_cnt_en_lsch3",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch3."
                },
                {
                    "name": "ovf_num_lsch3",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch3."
                },
                {
                    "name": "para_up_lsch3",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch3."
                },
                {
                    "name": "idle_lv_lsch3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch3."
                },
                {
                    "name": "sig_out_en_lsch3",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch3."
                },
                {
                    "name": "timer_sel_lsch3",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch3."
                }
            ],
            "id": "ledc.lsch3_conf0",
            "name": "lsch3_conf0",
            "offset": "0x3c",
            "doc": "LEDC_LSCH3_CONF0."
        },
        "ledc.lsch3_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch3",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch3."
                }
            ],
            "id": "ledc.lsch3_hpoint",
            "name": "lsch3_hpoint",
            "offset": "0x40",
            "doc": "LEDC_LSCH3_HPOINT."
        },
        "ledc.lsch3_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch3",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch3."
                }
            ],
            "id": "ledc.lsch3_duty",
            "name": "lsch3_duty",
            "offset": "0x44",
            "doc": "LEDC_LSCH3_DUTY."
        },
        "ledc.lsch3_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch3",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch3."
                },
                {
                    "name": "duty_inc_lsch3",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch3."
                },
                {
                    "name": "duty_num_lsch3",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch3."
                },
                {
                    "name": "duty_cycle_lsch3",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch3."
                },
                {
                    "name": "duty_scale_lsch3",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch3."
                }
            ],
            "id": "ledc.lsch3_conf1",
            "name": "lsch3_conf1",
            "offset": "0x48",
            "doc": "LEDC_LSCH3_CONF1."
        },
        "ledc.lsch3_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch3_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch3_r."
                }
            ],
            "id": "ledc.lsch3_duty_r",
            "name": "lsch3_duty_r",
            "offset": "0x4c",
            "doc": "LEDC_LSCH3_DUTY_R."
        },
        "ledc.lsch4_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch4",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch4."
                },
                {
                    "name": "ovf_cnt_en_lsch4",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch4."
                },
                {
                    "name": "ovf_num_lsch4",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch4."
                },
                {
                    "name": "para_up_lsch4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch4."
                },
                {
                    "name": "idle_lv_lsch4",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch4."
                },
                {
                    "name": "sig_out_en_lsch4",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch4."
                },
                {
                    "name": "timer_sel_lsch4",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch4."
                }
            ],
            "id": "ledc.lsch4_conf0",
            "name": "lsch4_conf0",
            "offset": "0x50",
            "doc": "LEDC_LSCH4_CONF0."
        },
        "ledc.lsch4_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch4",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch4."
                }
            ],
            "id": "ledc.lsch4_hpoint",
            "name": "lsch4_hpoint",
            "offset": "0x54",
            "doc": "LEDC_LSCH4_HPOINT."
        },
        "ledc.lsch4_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch4",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch4."
                }
            ],
            "id": "ledc.lsch4_duty",
            "name": "lsch4_duty",
            "offset": "0x58",
            "doc": "LEDC_LSCH4_DUTY."
        },
        "ledc.lsch4_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch4",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch4."
                },
                {
                    "name": "duty_inc_lsch4",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch4."
                },
                {
                    "name": "duty_num_lsch4",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch4."
                },
                {
                    "name": "duty_cycle_lsch4",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch4."
                },
                {
                    "name": "duty_scale_lsch4",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch4."
                }
            ],
            "id": "ledc.lsch4_conf1",
            "name": "lsch4_conf1",
            "offset": "0x5c",
            "doc": "LEDC_LSCH4_CONF1."
        },
        "ledc.lsch4_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch4_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch4_r."
                }
            ],
            "id": "ledc.lsch4_duty_r",
            "name": "lsch4_duty_r",
            "offset": "0x60",
            "doc": "LEDC_LSCH4_DUTY_R."
        },
        "ledc.lsch5_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_reset_lsch5",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_reset_lsch5."
                },
                {
                    "name": "ovf_cnt_en_lsch5",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_en_lsch5."
                },
                {
                    "name": "ovf_num_lsch5",
                    "lsb": 5,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_num_lsch5."
                },
                {
                    "name": "para_up_lsch5",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_para_up_lsch5."
                },
                {
                    "name": "idle_lv_lsch5",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_lv_lsch5."
                },
                {
                    "name": "sig_out_en_lsch5",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sig_out_en_lsch5."
                },
                {
                    "name": "timer_sel_lsch5",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timer_sel_lsch5."
                }
            ],
            "id": "ledc.lsch5_conf0",
            "name": "lsch5_conf0",
            "offset": "0x64",
            "doc": "LEDC_LSCH5_CONF0."
        },
        "ledc.lsch5_hpoint": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "hpoint_lsch5",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_hpoint_lsch5."
                }
            ],
            "id": "ledc.lsch5_hpoint",
            "name": "lsch5_hpoint",
            "offset": "0x68",
            "doc": "LEDC_LSCH5_HPOINT."
        },
        "ledc.lsch5_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch5",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_lsch5."
                }
            ],
            "id": "ledc.lsch5_duty",
            "name": "lsch5_duty",
            "offset": "0x6c",
            "doc": "LEDC_LSCH5_DUTY."
        },
        "ledc.lsch5_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "duty_start_lsch5",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_start_lsch5."
                },
                {
                    "name": "duty_inc_lsch5",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_duty_inc_lsch5."
                },
                {
                    "name": "duty_num_lsch5",
                    "lsb": 20,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_num_lsch5."
                },
                {
                    "name": "duty_cycle_lsch5",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_cycle_lsch5."
                },
                {
                    "name": "duty_scale_lsch5",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_scale_lsch5."
                }
            ],
            "id": "ledc.lsch5_conf1",
            "name": "lsch5_conf1",
            "offset": "0x70",
            "doc": "LEDC_LSCH5_CONF1."
        },
        "ledc.lsch5_duty_r": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "duty_lsch5_r",
                    "lsb": 0,
                    "nbits": 19,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_lsch5_r."
                }
            ],
            "id": "ledc.lsch5_duty_r",
            "name": "lsch5_duty_r",
            "offset": "0x74",
            "doc": "LEDC_LSCH5_DUTY_R."
        },
        "ledc.lstimer0_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer0_para_up",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer0_para_up."
                },
                {
                    "name": "tick_sel_lstimer0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tick_sel_lstimer0."
                },
                {
                    "name": "lstimer0_rst",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lstimer0_rst."
                },
                {
                    "name": "lstimer0_pause",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer0_pause."
                },
                {
                    "name": "clk_div_lstimer0",
                    "lsb": 4,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_div_lstimer0."
                },
                {
                    "name": "lstimer0_duty_res",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer0_duty_res."
                }
            ],
            "id": "ledc.lstimer0_conf",
            "name": "lstimer0_conf",
            "offset": "0xa0",
            "doc": "LEDC_LSTIMER0_CONF."
        },
        "ledc.lstimer0_value": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer0_cnt",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer0_cnt."
                }
            ],
            "id": "ledc.lstimer0_value",
            "name": "lstimer0_value",
            "offset": "0xa4",
            "doc": "LEDC_LSTIMER0_VALUE."
        },
        "ledc.lstimer1_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer1_para_up",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer1_para_up."
                },
                {
                    "name": "tick_sel_lstimer1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tick_sel_lstimer1."
                },
                {
                    "name": "lstimer1_rst",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lstimer1_rst."
                },
                {
                    "name": "lstimer1_pause",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer1_pause."
                },
                {
                    "name": "clk_div_lstimer1",
                    "lsb": 4,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_div_lstimer1."
                },
                {
                    "name": "lstimer1_duty_res",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer1_duty_res."
                }
            ],
            "id": "ledc.lstimer1_conf",
            "name": "lstimer1_conf",
            "offset": "0xa8",
            "doc": "LEDC_LSTIMER1_CONF."
        },
        "ledc.lstimer1_value": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer1_cnt",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer1_cnt."
                }
            ],
            "id": "ledc.lstimer1_value",
            "name": "lstimer1_value",
            "offset": "0xac",
            "doc": "LEDC_LSTIMER1_VALUE."
        },
        "ledc.lstimer2_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer2_para_up",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer2_para_up."
                },
                {
                    "name": "tick_sel_lstimer2",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tick_sel_lstimer2."
                },
                {
                    "name": "lstimer2_rst",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lstimer2_rst."
                },
                {
                    "name": "lstimer2_pause",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer2_pause."
                },
                {
                    "name": "clk_div_lstimer2",
                    "lsb": 4,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_div_lstimer2."
                },
                {
                    "name": "lstimer2_duty_res",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer2_duty_res."
                }
            ],
            "id": "ledc.lstimer2_conf",
            "name": "lstimer2_conf",
            "offset": "0xb0",
            "doc": "LEDC_LSTIMER2_CONF."
        },
        "ledc.lstimer2_value": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer2_cnt",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer2_cnt."
                }
            ],
            "id": "ledc.lstimer2_value",
            "name": "lstimer2_value",
            "offset": "0xb4",
            "doc": "LEDC_LSTIMER2_VALUE."
        },
        "ledc.lstimer3_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer3_para_up",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer3_para_up."
                },
                {
                    "name": "tick_sel_lstimer3",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tick_sel_lstimer3."
                },
                {
                    "name": "lstimer3_rst",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lstimer3_rst."
                },
                {
                    "name": "lstimer3_pause",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer3_pause."
                },
                {
                    "name": "clk_div_lstimer3",
                    "lsb": 4,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_div_lstimer3."
                },
                {
                    "name": "lstimer3_duty_res",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer3_duty_res."
                }
            ],
            "id": "ledc.lstimer3_conf",
            "name": "lstimer3_conf",
            "offset": "0xb8",
            "doc": "LEDC_LSTIMER3_CONF."
        },
        "ledc.lstimer3_value": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lstimer3_cnt",
                    "lsb": 0,
                    "nbits": 14,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer3_cnt."
                }
            ],
            "id": "ledc.lstimer3_value",
            "name": "lstimer3_value",
            "offset": "0xbc",
            "doc": "LEDC_LSTIMER3_VALUE."
        },
        "ledc.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_lsch5_int_raw",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch5_int_raw."
                },
                {
                    "name": "ovf_cnt_lsch4_int_raw",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch4_int_raw."
                },
                {
                    "name": "ovf_cnt_lsch3_int_raw",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch3_int_raw."
                },
                {
                    "name": "ovf_cnt_lsch2_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch2_int_raw."
                },
                {
                    "name": "ovf_cnt_lsch1_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch1_int_raw."
                },
                {
                    "name": "ovf_cnt_lsch0_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch0_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch5_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch5_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch4_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch4_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch3_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch3_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch2_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch2_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch1_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch1_int_raw."
                },
                {
                    "name": "duty_chng_end_lsch0_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch0_int_raw."
                },
                {
                    "name": "lstimer3_ovf_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer3_ovf_int_raw."
                },
                {
                    "name": "lstimer2_ovf_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer2_ovf_int_raw."
                },
                {
                    "name": "lstimer1_ovf_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer1_ovf_int_raw."
                },
                {
                    "name": "lstimer0_ovf_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer0_ovf_int_raw."
                }
            ],
            "id": "ledc.int_raw",
            "name": "int_raw",
            "offset": "0xc0",
            "doc": "LEDC_INT_RAW."
        },
        "ledc.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_lsch5_int_st",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch5_int_st."
                },
                {
                    "name": "ovf_cnt_lsch4_int_st",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch4_int_st."
                },
                {
                    "name": "ovf_cnt_lsch3_int_st",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch3_int_st."
                },
                {
                    "name": "ovf_cnt_lsch2_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch2_int_st."
                },
                {
                    "name": "ovf_cnt_lsch1_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch1_int_st."
                },
                {
                    "name": "ovf_cnt_lsch0_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch0_int_st."
                },
                {
                    "name": "duty_chng_end_lsch5_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch5_int_st."
                },
                {
                    "name": "duty_chng_end_lsch4_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch4_int_st."
                },
                {
                    "name": "duty_chng_end_lsch3_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch3_int_st."
                },
                {
                    "name": "duty_chng_end_lsch2_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch2_int_st."
                },
                {
                    "name": "duty_chng_end_lsch1_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch1_int_st."
                },
                {
                    "name": "duty_chng_end_lsch0_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch0_int_st."
                },
                {
                    "name": "lstimer3_ovf_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer3_ovf_int_st."
                },
                {
                    "name": "lstimer2_ovf_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer2_ovf_int_st."
                },
                {
                    "name": "lstimer1_ovf_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer1_ovf_int_st."
                },
                {
                    "name": "lstimer0_ovf_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_lstimer0_ovf_int_st."
                }
            ],
            "id": "ledc.int_st",
            "name": "int_st",
            "offset": "0xc4",
            "doc": "LEDC_INT_ST."
        },
        "ledc.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_lsch5_int_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch5_int_ena."
                },
                {
                    "name": "ovf_cnt_lsch4_int_ena",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch4_int_ena."
                },
                {
                    "name": "ovf_cnt_lsch3_int_ena",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch3_int_ena."
                },
                {
                    "name": "ovf_cnt_lsch2_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch2_int_ena."
                },
                {
                    "name": "ovf_cnt_lsch1_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch1_int_ena."
                },
                {
                    "name": "ovf_cnt_lsch0_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch0_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch5_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch5_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch4_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch4_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch3_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch3_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch2_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch2_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch1_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch1_int_ena."
                },
                {
                    "name": "duty_chng_end_lsch0_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch0_int_ena."
                },
                {
                    "name": "lstimer3_ovf_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer3_ovf_int_ena."
                },
                {
                    "name": "lstimer2_ovf_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer2_ovf_int_ena."
                },
                {
                    "name": "lstimer1_ovf_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer1_ovf_int_ena."
                },
                {
                    "name": "lstimer0_ovf_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lstimer0_ovf_int_ena."
                }
            ],
            "id": "ledc.int_ena",
            "name": "int_ena",
            "offset": "0xc8",
            "doc": "LEDC_INT_ENA."
        },
        "ledc.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ovf_cnt_lsch5_int_clr",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch5_int_clr."
                },
                {
                    "name": "ovf_cnt_lsch4_int_clr",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch4_int_clr."
                },
                {
                    "name": "ovf_cnt_lsch3_int_clr",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch3_int_clr."
                },
                {
                    "name": "ovf_cnt_lsch2_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch2_int_clr."
                },
                {
                    "name": "ovf_cnt_lsch1_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch1_int_clr."
                },
                {
                    "name": "ovf_cnt_lsch0_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ovf_cnt_lsch0_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch5_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch5_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch4_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch4_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch3_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch3_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch2_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch2_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch1_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch1_int_clr."
                },
                {
                    "name": "duty_chng_end_lsch0_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_duty_chng_end_lsch0_int_clr."
                },
                {
                    "name": "lstimer3_ovf_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer3_ovf_int_clr."
                },
                {
                    "name": "lstimer2_ovf_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer2_ovf_int_clr."
                },
                {
                    "name": "lstimer1_ovf_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer1_ovf_int_clr."
                },
                {
                    "name": "lstimer0_ovf_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_lstimer0_ovf_int_clr."
                }
            ],
            "id": "ledc.int_clr",
            "name": "int_clr",
            "offset": "0xcc",
            "doc": "LEDC_INT_CLR."
        },
        "ledc.conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_clk_sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_apb_clk_sel."
                }
            ],
            "id": "ledc.conf",
            "name": "conf",
            "offset": "0xd0",
            "doc": "LEDC_CONF."
        },
        "ledc.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "ledc_date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "419829504",
                    "doc": "reg_ledc_date."
                }
            ],
            "id": "ledc.date",
            "name": "date",
            "offset": "0xfc",
            "doc": "LEDC_DATE."
        },
        "rmt": {
            "type": "blk",
            "children": [
                "rmt.ch0data",
                "rmt.ch1data",
                "rmt.ch2data",
                "rmt.ch3data",
                "rmt.ch0conf0",
                "rmt.ch1conf0",
                "rmt.ch2conf0",
                "rmt.ch2conf1",
                "rmt.ch3conf0",
                "rmt.ch3conf1",
                "rmt.ch0status",
                "rmt.ch1status",
                "rmt.ch2status",
                "rmt.ch3status",
                "rmt.int_raw",
                "rmt.int_st",
                "rmt.int_ena",
                "rmt.int_clr",
                "rmt.ch0carrier_duty",
                "rmt.ch1carrier_duty",
                "rmt.ch2_rx_carrier_rm",
                "rmt.ch3_rx_carrier_rm",
                "rmt.ch0_tx_lim",
                "rmt.ch1_tx_lim",
                "rmt.ch2_rx_lim",
                "rmt.ch3_rx_lim",
                "rmt.sys_conf",
                "rmt.tx_sim",
                "rmt.ref_cnt_rst",
                "rmt.date"
            ],
            "id": "rmt",
            "name": "rmt",
            "offset": "0x60016000",
            "doc": "Remote Control Peripheral"
        },
        "rmt.ch0data": {
            "type": "reg",
            "fields": [
                {
                    "name": "ch0data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "rmt.ch0data",
            "name": "ch0data",
            "offset": "0x0",
            "doc": "RMT_CH0DATA_REG."
        },
        "rmt.ch1data": {
            "type": "reg",
            "fields": [
                {
                    "name": "ch1data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "rmt.ch1data",
            "name": "ch1data",
            "offset": "0x4",
            "doc": "RMT_CH1DATA_REG."
        },
        "rmt.ch2data": {
            "type": "reg",
            "fields": [
                {
                    "name": "ch2data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "rmt.ch2data",
            "name": "ch2data",
            "offset": "0x8",
            "doc": "RMT_CH2DATA_REG."
        },
        "rmt.ch3data": {
            "type": "reg",
            "fields": [
                {
                    "name": "ch3data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                }
            ],
            "id": "rmt.ch3data",
            "name": "ch3data",
            "offset": "0xc",
            "doc": "RMT_CH3DATA_REG."
        },
        "rmt.ch0conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reg_conf_update_ch0",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_reg_conf_update_ch0."
                },
                {
                    "name": "afifo_rst_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_afifo_rst_ch0."
                },
                {
                    "name": "carrier_out_lv_ch0",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_out_lv_ch0."
                },
                {
                    "name": "carrier_en_ch0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_en_ch0."
                },
                {
                    "name": "carrier_eff_en_ch0",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_eff_en_ch0."
                },
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_size_ch0",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_size_ch0."
                },
                {
                    "name": "div_cnt_ch0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "reg_div_cnt_ch0."
                },
                {
                    "name": "tx_stop_ch0",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_stop_ch0."
                },
                {
                    "name": "idle_out_en_ch0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_out_en_ch0."
                },
                {
                    "name": "idle_out_lv_ch0",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_out_lv_ch0."
                },
                {
                    "name": "mem_tx_wrap_en_ch0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_tx_wrap_en_ch0."
                },
                {
                    "name": "tx_conti_mode_ch0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_conti_mode_ch0."
                },
                {
                    "name": "apb_mem_rst_ch0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rst_ch0."
                },
                {
                    "name": "mem_rd_rst_ch0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mem_rd_rst_ch0."
                },
                {
                    "name": "tx_start_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_tx_start_ch0."
                }
            ],
            "id": "rmt.ch0conf0",
            "name": "ch0conf0",
            "offset": "0x10",
            "doc": "RMT_CH0CONF0_REG."
        },
        "rmt.ch1conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "conf_update_ch1",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_conf_update_ch1."
                },
                {
                    "name": "afifo_rst_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_afifo_rst_ch1."
                },
                {
                    "name": "carrier_out_lv_ch1",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_out_lv_ch1."
                },
                {
                    "name": "carrier_en_ch1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_en_ch1."
                },
                {
                    "name": "carrier_eff_en_ch1",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_eff_en_ch1."
                },
                {
                    "name": "rsvd0",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_size_ch1",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_size_ch1."
                },
                {
                    "name": "div_cnt_ch1",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "reg_div_cnt_ch1."
                },
                {
                    "name": "tx_stop_ch1",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_stop_ch1."
                },
                {
                    "name": "idle_out_en_ch1",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_out_en_ch1."
                },
                {
                    "name": "idle_out_lv_ch1",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_idle_out_lv_ch1."
                },
                {
                    "name": "mem_tx_wrap_en_ch1",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_tx_wrap_en_ch1."
                },
                {
                    "name": "tx_conti_mode_ch1",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tx_conti_mode_ch1."
                },
                {
                    "name": "apb_mem_rst_ch1",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rst_ch1."
                },
                {
                    "name": "mem_rd_rst_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mem_rd_rst_ch1."
                },
                {
                    "name": "tx_start_ch1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_tx_start_ch1."
                }
            ],
            "id": "rmt.ch1conf0",
            "name": "ch1conf0",
            "offset": "0x14",
            "doc": "RMT_CH1CONF0_REG."
        },
        "rmt.ch2conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "carrier_out_lv_ch2",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_out_lv_ch2."
                },
                {
                    "name": "carrier_en_ch2",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_en_ch2."
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_size_ch2",
                    "lsb": 23,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_size_ch2."
                },
                {
                    "name": "idle_thres_ch2",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "read-write",
                    "reset": "32767",
                    "doc": "reg_idle_thres_ch2."
                },
                {
                    "name": "div_cnt_ch2",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "reg_div_cnt_ch2."
                }
            ],
            "id": "rmt.ch2conf0",
            "name": "ch2conf0",
            "offset": "0x18",
            "doc": "RMT_CH2CONF0_REG."
        },
        "rmt.ch2conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "conf_update_ch2",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_conf_update_ch2."
                },
                {
                    "name": "afifo_rst_ch2",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_afifo_rst_ch2."
                },
                {
                    "name": "mem_rx_wrap_en_ch2",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_rx_wrap_en_ch2."
                },
                {
                    "name": "rx_filter_thres_ch2",
                    "lsb": 5,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "reg_rx_filter_thres_ch2."
                },
                {
                    "name": "rx_filter_en_ch2",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_filter_en_ch2."
                },
                {
                    "name": "mem_owner_ch2",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_owner_ch2."
                },
                {
                    "name": "apb_mem_rst_ch2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rst_ch2."
                },
                {
                    "name": "mem_wr_rst_ch2",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mem_wr_rst_ch2."
                },
                {
                    "name": "rx_en_ch2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_en_ch2."
                }
            ],
            "id": "rmt.ch2conf1",
            "name": "ch2conf1",
            "offset": "0x1c",
            "doc": "RMT_CH2CONF1_REG."
        },
        "rmt.ch3conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "carrier_out_lv_ch3",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_out_lv_ch3."
                },
                {
                    "name": "carrier_en_ch3",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_carrier_en_ch3."
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_size_ch3",
                    "lsb": 23,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_size_ch3."
                },
                {
                    "name": "idle_thres_ch3",
                    "lsb": 8,
                    "nbits": 15,
                    "access": "read-write",
                    "reset": "32767",
                    "doc": "reg_idle_thres_ch3."
                },
                {
                    "name": "div_cnt_ch3",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "reg_div_cnt_ch3."
                }
            ],
            "id": "rmt.ch3conf0",
            "name": "ch3conf0",
            "offset": "0x20",
            "doc": "RMT_CH3CONF0_REG."
        },
        "rmt.ch3conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "conf_update_ch3",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_conf_update_ch3."
                },
                {
                    "name": "afifo_rst_ch3",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_afifo_rst_ch3."
                },
                {
                    "name": "mem_rx_wrap_en_ch3",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_rx_wrap_en_ch3."
                },
                {
                    "name": "rx_filter_thres_ch3",
                    "lsb": 5,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "15",
                    "doc": "reg_rx_filter_thres_ch3."
                },
                {
                    "name": "rx_filter_en_ch3",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_filter_en_ch3."
                },
                {
                    "name": "mem_owner_ch3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_mem_owner_ch3."
                },
                {
                    "name": "apb_mem_rst_ch3",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rst_ch3."
                },
                {
                    "name": "mem_wr_rst_ch3",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mem_wr_rst_ch3."
                },
                {
                    "name": "rx_en_ch3",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rx_en_ch3."
                }
            ],
            "id": "rmt.ch3conf1",
            "name": "ch3conf1",
            "offset": "0x24",
            "doc": "RMT_CH3CONF1_REG."
        },
        "rmt.ch0status": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_mem_raddr_ch0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_raddr_ch0."
                },
                {
                    "name": "apb_mem_wr_err_ch0",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_wr_err_ch0."
                },
                {
                    "name": "mem_empty_ch0",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_empty_ch0."
                },
                {
                    "name": "apb_mem_rd_err_ch0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rd_err_ch0."
                },
                {
                    "name": "apb_mem_waddr_ch0",
                    "lsb": 12,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_waddr_ch0."
                },
                {
                    "name": "state_ch0",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_state_ch0."
                },
                {
                    "name": "mem_raddr_ex_ch0",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_raddr_ex_ch0."
                }
            ],
            "id": "rmt.ch0status",
            "name": "ch0status",
            "offset": "0x28",
            "doc": "RMT_CH0STATUS_REG."
        },
        "rmt.ch1status": {
            "type": "reg",
            "fields": [
                {
                    "name": "apb_mem_raddr_ch1",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_raddr_ch1."
                },
                {
                    "name": "apb_mem_wr_err_ch1",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_wr_err_ch1."
                },
                {
                    "name": "mem_empty_ch1",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_empty_ch1."
                },
                {
                    "name": "apb_mem_rd_err_ch1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rd_err_ch1."
                },
                {
                    "name": "apb_mem_waddr_ch1",
                    "lsb": 12,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_waddr_ch1."
                },
                {
                    "name": "state_ch1",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_state_ch1."
                },
                {
                    "name": "mem_raddr_ex_ch1",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_raddr_ex_ch1."
                }
            ],
            "id": "rmt.ch1status",
            "name": "ch1status",
            "offset": "0x2c",
            "doc": "RMT_CH1STATUS_REG."
        },
        "rmt.ch2status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_mem_rd_err_ch2",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rd_err_ch2."
                },
                {
                    "name": "mem_full_ch2",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_full_ch2."
                },
                {
                    "name": "mem_owner_err_ch2",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_owner_err_ch2."
                },
                {
                    "name": "state_ch2",
                    "lsb": 22,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_state_ch2."
                },
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_mem_raddr_ch2",
                    "lsb": 12,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_raddr_ch2."
                },
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_waddr_ex_ch2",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_waddr_ex_ch2."
                }
            ],
            "id": "rmt.ch2status",
            "name": "ch2status",
            "offset": "0x30",
            "doc": "RMT_CH2STATUS_REG."
        },
        "rmt.ch3status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_mem_rd_err_ch3",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_rd_err_ch3."
                },
                {
                    "name": "mem_full_ch3",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_full_ch3."
                },
                {
                    "name": "mem_owner_err_ch3",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_owner_err_ch3."
                },
                {
                    "name": "state_ch3",
                    "lsb": 22,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_state_ch3."
                },
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_mem_raddr_ch3",
                    "lsb": 12,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_apb_mem_raddr_ch3."
                },
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_waddr_ex_ch3",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_waddr_ex_ch3."
                }
            ],
            "id": "rmt.ch3status",
            "name": "ch3status",
            "offset": "0x34",
            "doc": "RMT_CH3STATUS_REG."
        },
        "rmt.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ch1_tx_loop_int_raw",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_loop_int_raw."
                },
                {
                    "name": "ch0_tx_loop_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_loop_int_raw."
                },
                {
                    "name": "ch3_rx_thr_event_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_thr_event_int_raw."
                },
                {
                    "name": "ch2_rx_thr_event_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_thr_event_int_raw."
                },
                {
                    "name": "ch1_tx_thr_event_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_thr_event_int_raw."
                },
                {
                    "name": "ch0_tx_thr_event_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_thr_event_int_raw."
                },
                {
                    "name": "ch3_err_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_err_int_raw."
                },
                {
                    "name": "ch2_err_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_err_int_raw."
                },
                {
                    "name": "ch1_err_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_err_int_raw."
                },
                {
                    "name": "ch0_err_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_err_int_raw."
                },
                {
                    "name": "ch3_rx_end_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_end_int_raw."
                },
                {
                    "name": "ch2_rx_end_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_end_int_raw."
                },
                {
                    "name": "ch1_tx_end_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_end_int_raw."
                },
                {
                    "name": "ch0_tx_end_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_end_int_raw."
                }
            ],
            "id": "rmt.int_raw",
            "name": "int_raw",
            "offset": "0x38",
            "doc": "RMT_INT_RAW_REG."
        },
        "rmt.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ch1_tx_loop_int_st",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_loop_int_st."
                },
                {
                    "name": "ch0_tx_loop_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_loop_int_st."
                },
                {
                    "name": "ch3_rx_thr_event_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_thr_event_int_st."
                },
                {
                    "name": "ch2_rx_thr_event_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_thr_event_int_st."
                },
                {
                    "name": "ch1_tx_thr_event_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_thr_event_int_st."
                },
                {
                    "name": "ch0_tx_thr_event_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_thr_event_int_st."
                },
                {
                    "name": "ch3_err_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_err_int_st."
                },
                {
                    "name": "ch2_err_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_err_int_st."
                },
                {
                    "name": "ch1_err_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_err_int_st."
                },
                {
                    "name": "ch0_err_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_err_int_st."
                },
                {
                    "name": "ch3_rx_end_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_end_int_st."
                },
                {
                    "name": "ch2_rx_end_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_end_int_st."
                },
                {
                    "name": "ch1_tx_end_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_end_int_st."
                },
                {
                    "name": "ch0_tx_end_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_end_int_st."
                }
            ],
            "id": "rmt.int_st",
            "name": "int_st",
            "offset": "0x3c",
            "doc": "RMT_INT_ST_REG."
        },
        "rmt.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ch1_tx_loop_int_ena",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch1_tx_loop_int_ena."
                },
                {
                    "name": "ch0_tx_loop_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch0_tx_loop_int_ena."
                },
                {
                    "name": "ch3_rx_thr_event_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch3_rx_thr_event_int_ena."
                },
                {
                    "name": "ch2_rx_thr_event_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch2_rx_thr_event_int_ena."
                },
                {
                    "name": "ch1_tx_thr_event_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch1_tx_thr_event_int_ena."
                },
                {
                    "name": "ch0_tx_thr_event_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch0_tx_thr_event_int_ena."
                },
                {
                    "name": "ch3_err_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch3_err_int_ena."
                },
                {
                    "name": "ch2_err_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch2_err_int_ena."
                },
                {
                    "name": "ch1_err_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch1_err_int_ena."
                },
                {
                    "name": "ch0_err_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch0_err_int_ena."
                },
                {
                    "name": "ch3_rx_end_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch3_rx_end_int_ena."
                },
                {
                    "name": "ch2_rx_end_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch2_rx_end_int_ena."
                },
                {
                    "name": "ch1_tx_end_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch1_tx_end_int_ena."
                },
                {
                    "name": "ch0_tx_end_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ch0_tx_end_int_ena."
                }
            ],
            "id": "rmt.int_ena",
            "name": "int_ena",
            "offset": "0x40",
            "doc": "RMT_INT_ENA_REG."
        },
        "rmt.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ch1_tx_loop_int_clr",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_loop_int_clr."
                },
                {
                    "name": "ch0_tx_loop_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_loop_int_clr."
                },
                {
                    "name": "ch3_rx_thr_event_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_thr_event_int_clr."
                },
                {
                    "name": "ch2_rx_thr_event_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_thr_event_int_clr."
                },
                {
                    "name": "ch1_tx_thr_event_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_thr_event_int_clr."
                },
                {
                    "name": "ch0_tx_thr_event_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_thr_event_int_clr."
                },
                {
                    "name": "ch3_err_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch3_err_int_clr."
                },
                {
                    "name": "ch2_err_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch2_err_int_clr."
                },
                {
                    "name": "ch1_err_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch1_err_int_clr."
                },
                {
                    "name": "ch0_err_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch0_err_int_clr."
                },
                {
                    "name": "ch3_rx_end_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch3_rx_end_int_clr."
                },
                {
                    "name": "ch2_rx_end_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch2_rx_end_int_clr."
                },
                {
                    "name": "ch1_tx_end_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch1_tx_end_int_clr."
                },
                {
                    "name": "ch0_tx_end_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ch0_tx_end_int_clr."
                }
            ],
            "id": "rmt.int_clr",
            "name": "int_clr",
            "offset": "0x44",
            "doc": "RMT_INT_CLR_REG."
        },
        "rmt.ch0carrier_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "carrier_high_ch0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "64",
                    "doc": "reg_carrier_high_ch0."
                },
                {
                    "name": "carrier_low_ch0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "64",
                    "doc": "reg_carrier_low_ch0."
                }
            ],
            "id": "rmt.ch0carrier_duty",
            "name": "ch0carrier_duty",
            "offset": "0x48",
            "doc": "RMT_CH0CARRIER_DUTY_REG."
        },
        "rmt.ch1carrier_duty": {
            "type": "reg",
            "fields": [
                {
                    "name": "carrier_high_ch1",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "64",
                    "doc": "reg_carrier_high_ch1."
                },
                {
                    "name": "carrier_low_ch1",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "64",
                    "doc": "reg_carrier_low_ch1."
                }
            ],
            "id": "rmt.ch1carrier_duty",
            "name": "ch1carrier_duty",
            "offset": "0x4c",
            "doc": "RMT_CH1CARRIER_DUTY_REG."
        },
        "rmt.ch2_rx_carrier_rm": {
            "type": "reg",
            "fields": [
                {
                    "name": "carrier_high_thres_ch2",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_carrier_high_thres_ch2."
                },
                {
                    "name": "carrier_low_thres_ch2",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_carrier_low_thres_ch2."
                }
            ],
            "id": "rmt.ch2_rx_carrier_rm",
            "name": "ch2_rx_carrier_rm",
            "offset": "0x50",
            "doc": "RMT_CH2_RX_CARRIER_RM_REG."
        },
        "rmt.ch3_rx_carrier_rm": {
            "type": "reg",
            "fields": [
                {
                    "name": "carrier_high_thres_ch3",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_carrier_high_thres_ch3."
                },
                {
                    "name": "carrier_low_thres_ch3",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_carrier_low_thres_ch3."
                }
            ],
            "id": "rmt.ch3_rx_carrier_rm",
            "name": "ch3_rx_carrier_rm",
            "offset": "0x54",
            "doc": "RMT_CH3_RX_CARRIER_RM_REG."
        },
        "rmt.ch0_tx_lim": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "loop_count_reset_ch0",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_loop_count_reset_ch0."
                },
                {
                    "name": "rmt_tx_loop_cnt_en_ch0",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_loop_cnt_en_ch0."
                },
                {
                    "name": "rmt_tx_loop_num_ch0",
                    "lsb": 9,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_loop_num_ch0."
                },
                {
                    "name": "rmt_tx_lim_ch0",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "reg_rmt_tx_lim_ch0."
                }
            ],
            "id": "rmt.ch0_tx_lim",
            "name": "ch0_tx_lim",
            "offset": "0x58",
            "doc": "RMT_CH0_TX_LIM_REG."
        },
        "rmt.ch1_tx_lim": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "loop_count_reset_ch1",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_loop_count_reset_ch1."
                },
                {
                    "name": "rmt_tx_loop_cnt_en_ch1",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_loop_cnt_en_ch1."
                },
                {
                    "name": "rmt_tx_loop_num_ch1",
                    "lsb": 9,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_loop_num_ch1."
                },
                {
                    "name": "rmt_tx_lim_ch1",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "reg_rmt_tx_lim_ch1."
                }
            ],
            "id": "rmt.ch1_tx_lim",
            "name": "ch1_tx_lim",
            "offset": "0x5c",
            "doc": "RMT_CH1_TX_LIM_REG."
        },
        "rmt.ch2_rx_lim": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_rx_lim_ch2",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "reg_rmt_rx_lim_ch2."
                }
            ],
            "id": "rmt.ch2_rx_lim",
            "name": "ch2_rx_lim",
            "offset": "0x60",
            "doc": "RMT_CH2_RX_LIM_REG."
        },
        "rmt.ch3_rx_lim": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_rx_lim_ch3",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "reg_rmt_rx_lim_ch3."
                }
            ],
            "id": "rmt.ch3_rx_lim",
            "name": "ch3_rx_lim",
            "offset": "0x64",
            "doc": "RMT_CH3_RX_LIM_REG."
        },
        "rmt.sys_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en."
                },
                {
                    "name": "rsvd0",
                    "lsb": 27,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_sclk_active",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rmt_sclk_active."
                },
                {
                    "name": "rmt_sclk_sel",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rmt_sclk_sel."
                },
                {
                    "name": "rmt_sclk_div_b",
                    "lsb": 18,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_sclk_div_b."
                },
                {
                    "name": "rmt_sclk_div_a",
                    "lsb": 12,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_sclk_div_a."
                },
                {
                    "name": "rmt_sclk_div_num",
                    "lsb": 4,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rmt_sclk_div_num."
                },
                {
                    "name": "rmt_mem_force_pu",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_mem_force_pu."
                },
                {
                    "name": "rmt_mem_force_pd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_mem_force_pd."
                },
                {
                    "name": "mem_clk_force_on",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_clk_force_on."
                },
                {
                    "name": "apb_fifo_mask",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_apb_fifo_mask."
                }
            ],
            "id": "rmt.sys_conf",
            "name": "sys_conf",
            "offset": "0x68",
            "doc": "RMT_SYS_CONF_REG."
        },
        "rmt.tx_sim": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_tx_sim_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_sim_en."
                },
                {
                    "name": "rmt_tx_sim_ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_sim_ch1."
                },
                {
                    "name": "rmt_tx_sim_ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_tx_sim_ch0."
                }
            ],
            "id": "rmt.tx_sim",
            "name": "tx_sim",
            "offset": "0x6c",
            "doc": "RMT_TX_SIM_REG."
        },
        "rmt.ref_cnt_rst": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ch3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ref_cnt_rst_ch3."
                },
                {
                    "name": "ch2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ref_cnt_rst_ch2."
                },
                {
                    "name": "ch1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ref_cnt_rst_ch1."
                },
                {
                    "name": "ch0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_ref_cnt_rst_ch0."
                }
            ],
            "id": "rmt.ref_cnt_rst",
            "name": "ref_cnt_rst",
            "offset": "0x70",
            "doc": "RMT_REF_CNT_RST_REG."
        },
        "rmt.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rmt_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33579569",
                    "doc": "reg_rmt_date."
                }
            ],
            "id": "rmt.date",
            "name": "date",
            "offset": "0xcc",
            "doc": "RMT_DATE_REG."
        },
        "rsa": {
            "type": "blk",
            "children": [
                "rsa.m_mem0",
                "rsa.m_mem1",
                "rsa.m_mem2",
                "rsa.m_mem3",
                "rsa.m_mem4",
                "rsa.m_mem5",
                "rsa.m_mem6",
                "rsa.m_mem7",
                "rsa.m_mem8",
                "rsa.m_mem9",
                "rsa.m_mem10",
                "rsa.m_mem11",
                "rsa.m_mem12",
                "rsa.m_mem13",
                "rsa.m_mem14",
                "rsa.m_mem15",
                "rsa.z_mem0",
                "rsa.z_mem1",
                "rsa.z_mem2",
                "rsa.z_mem3",
                "rsa.z_mem4",
                "rsa.z_mem5",
                "rsa.z_mem6",
                "rsa.z_mem7",
                "rsa.z_mem8",
                "rsa.z_mem9",
                "rsa.z_mem10",
                "rsa.z_mem11",
                "rsa.z_mem12",
                "rsa.z_mem13",
                "rsa.z_mem14",
                "rsa.z_mem15",
                "rsa.y_mem0",
                "rsa.y_mem1",
                "rsa.y_mem2",
                "rsa.y_mem3",
                "rsa.y_mem4",
                "rsa.y_mem5",
                "rsa.y_mem6",
                "rsa.y_mem7",
                "rsa.y_mem8",
                "rsa.y_mem9",
                "rsa.y_mem10",
                "rsa.y_mem11",
                "rsa.y_mem12",
                "rsa.y_mem13",
                "rsa.y_mem14",
                "rsa.y_mem15",
                "rsa.x_mem0",
                "rsa.x_mem1",
                "rsa.x_mem2",
                "rsa.x_mem3",
                "rsa.x_mem4",
                "rsa.x_mem5",
                "rsa.x_mem6",
                "rsa.x_mem7",
                "rsa.x_mem8",
                "rsa.x_mem9",
                "rsa.x_mem10",
                "rsa.x_mem11",
                "rsa.x_mem12",
                "rsa.x_mem13",
                "rsa.x_mem14",
                "rsa.x_mem15",
                "rsa.m_prime",
                "rsa.mode",
                "rsa.query_clean",
                "rsa.set_start_modexp",
                "rsa.set_start_modmult",
                "rsa.set_start_mult",
                "rsa.query_idle",
                "rsa.int_clr",
                "rsa.constant_time",
                "rsa.search_enable",
                "rsa.search_pos",
                "rsa.int_ena",
                "rsa.date"
            ],
            "id": "rsa",
            "name": "rsa",
            "offset": "0x6003c000",
            "doc": "RSA (Rivest Shamir Adleman) Accelerator"
        },
        "rsa.m_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem0",
            "name": "m_mem0",
            "offset": "0x0",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem1",
            "name": "m_mem1",
            "offset": "0x1",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem2",
            "name": "m_mem2",
            "offset": "0x2",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem3",
            "name": "m_mem3",
            "offset": "0x3",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem4",
            "name": "m_mem4",
            "offset": "0x4",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem5",
            "name": "m_mem5",
            "offset": "0x5",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem6",
            "name": "m_mem6",
            "offset": "0x6",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem7",
            "name": "m_mem7",
            "offset": "0x7",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem8",
            "name": "m_mem8",
            "offset": "0x8",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem9",
            "name": "m_mem9",
            "offset": "0x9",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem10",
            "name": "m_mem10",
            "offset": "0xa",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem11",
            "name": "m_mem11",
            "offset": "0xb",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem12",
            "name": "m_mem12",
            "offset": "0xc",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem13",
            "name": "m_mem13",
            "offset": "0xd",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem14",
            "name": "m_mem14",
            "offset": "0xe",
            "doc": "The memory that stores M"
        },
        "rsa.m_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.m_mem15",
            "name": "m_mem15",
            "offset": "0xf",
            "doc": "The memory that stores M"
        },
        "rsa.z_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem0",
            "name": "z_mem0",
            "offset": "0x200",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem1",
            "name": "z_mem1",
            "offset": "0x201",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem2",
            "name": "z_mem2",
            "offset": "0x202",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem3",
            "name": "z_mem3",
            "offset": "0x203",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem4",
            "name": "z_mem4",
            "offset": "0x204",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem5",
            "name": "z_mem5",
            "offset": "0x205",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem6",
            "name": "z_mem6",
            "offset": "0x206",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem7",
            "name": "z_mem7",
            "offset": "0x207",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem8",
            "name": "z_mem8",
            "offset": "0x208",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem9",
            "name": "z_mem9",
            "offset": "0x209",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem10",
            "name": "z_mem10",
            "offset": "0x20a",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem11",
            "name": "z_mem11",
            "offset": "0x20b",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem12",
            "name": "z_mem12",
            "offset": "0x20c",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem13",
            "name": "z_mem13",
            "offset": "0x20d",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem14",
            "name": "z_mem14",
            "offset": "0x20e",
            "doc": "The memory that stores Z"
        },
        "rsa.z_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.z_mem15",
            "name": "z_mem15",
            "offset": "0x20f",
            "doc": "The memory that stores Z"
        },
        "rsa.y_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem0",
            "name": "y_mem0",
            "offset": "0x400",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem1",
            "name": "y_mem1",
            "offset": "0x401",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem2",
            "name": "y_mem2",
            "offset": "0x402",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem3",
            "name": "y_mem3",
            "offset": "0x403",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem4",
            "name": "y_mem4",
            "offset": "0x404",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem5",
            "name": "y_mem5",
            "offset": "0x405",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem6",
            "name": "y_mem6",
            "offset": "0x406",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem7",
            "name": "y_mem7",
            "offset": "0x407",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem8",
            "name": "y_mem8",
            "offset": "0x408",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem9",
            "name": "y_mem9",
            "offset": "0x409",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem10",
            "name": "y_mem10",
            "offset": "0x40a",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem11",
            "name": "y_mem11",
            "offset": "0x40b",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem12",
            "name": "y_mem12",
            "offset": "0x40c",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem13",
            "name": "y_mem13",
            "offset": "0x40d",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem14",
            "name": "y_mem14",
            "offset": "0x40e",
            "doc": "The memory that stores Y"
        },
        "rsa.y_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.y_mem15",
            "name": "y_mem15",
            "offset": "0x40f",
            "doc": "The memory that stores Y"
        },
        "rsa.x_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem0",
            "name": "x_mem0",
            "offset": "0x600",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem1",
            "name": "x_mem1",
            "offset": "0x601",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem2",
            "name": "x_mem2",
            "offset": "0x602",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem3",
            "name": "x_mem3",
            "offset": "0x603",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem4",
            "name": "x_mem4",
            "offset": "0x604",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem5",
            "name": "x_mem5",
            "offset": "0x605",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem6",
            "name": "x_mem6",
            "offset": "0x606",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem7",
            "name": "x_mem7",
            "offset": "0x607",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem8",
            "name": "x_mem8",
            "offset": "0x608",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem9",
            "name": "x_mem9",
            "offset": "0x609",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem10",
            "name": "x_mem10",
            "offset": "0x60a",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem11",
            "name": "x_mem11",
            "offset": "0x60b",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem12",
            "name": "x_mem12",
            "offset": "0x60c",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem13",
            "name": "x_mem13",
            "offset": "0x60d",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem14",
            "name": "x_mem14",
            "offset": "0x60e",
            "doc": "The memory that stores X"
        },
        "rsa.x_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "rsa.x_mem15",
            "name": "x_mem15",
            "offset": "0x60f",
            "doc": "The memory that stores X"
        },
        "rsa.m_prime": {
            "type": "reg",
            "fields": [
                {
                    "name": "m_prime",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits stores m'"
                }
            ],
            "id": "rsa.m_prime",
            "name": "m_prime",
            "offset": "0x800",
            "doc": "RSA M_prime register"
        },
        "rsa.mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mode",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "rsa mode (rsa length)."
                }
            ],
            "id": "rsa.mode",
            "name": "mode",
            "offset": "0x804",
            "doc": "RSA mode register"
        },
        "rsa.query_clean": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "query_clean",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "query clean"
                }
            ],
            "id": "rsa.query_clean",
            "name": "query_clean",
            "offset": "0x808",
            "doc": "RSA query clean register"
        },
        "rsa.set_start_modexp": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_start_modexp",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "start modular exponentiation"
                }
            ],
            "id": "rsa.set_start_modexp",
            "name": "set_start_modexp",
            "offset": "0x80c",
            "doc": "RSA modular exponentiation trigger register."
        },
        "rsa.set_start_modmult": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_start_modmult",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "start modular multiplication"
                }
            ],
            "id": "rsa.set_start_modmult",
            "name": "set_start_modmult",
            "offset": "0x810",
            "doc": "RSA modular multiplication trigger register."
        },
        "rsa.set_start_mult": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "set_start_mult",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "start multiplicaiton"
                }
            ],
            "id": "rsa.set_start_mult",
            "name": "set_start_mult",
            "offset": "0x814",
            "doc": "RSA normal multiplication trigger register."
        },
        "rsa.query_idle": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "query_idle",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "query rsa idle. 1'b0: busy, 1'b1: idle"
                }
            ],
            "id": "rsa.query_idle",
            "name": "query_idle",
            "offset": "0x818",
            "doc": "RSA query idle register"
        },
        "rsa.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clear_interrupt",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "set this bit to clear RSA interrupt."
                }
            ],
            "id": "rsa.int_clr",
            "name": "int_clr",
            "offset": "0x81c",
            "doc": "RSA interrupt clear register"
        },
        "rsa.constant_time": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "constant_time",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Configure this bit to 0 for acceleration. 0: with acceleration, 1: without acceleration(defalut)."
                }
            ],
            "id": "rsa.constant_time",
            "name": "constant_time",
            "offset": "0x820",
            "doc": "RSA constant time option register"
        },
        "rsa.search_enable": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "search_enable",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Configure this bit to 1 for acceleration. 1: with acceleration, 0: without acceleration(default). This option should be used together with RSA_SEARCH_POS."
                }
            ],
            "id": "rsa.search_enable",
            "name": "search_enable",
            "offset": "0x824",
            "doc": "RSA search option"
        },
        "rsa.search_pos": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "search_pos",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Configure this field to set search position. This field should be used together with RSA_SEARCH_ENABLE. The field is only meaningful when RSA_SEARCH_ENABLE is high."
                }
            ],
            "id": "rsa.search_pos",
            "name": "search_pos",
            "offset": "0x828",
            "doc": "RSA search position configure register"
        },
        "rsa.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable interrupt that occurs when rsa calculation is done. 1'b0: disable, 1'b1: enable(default)."
                }
            ],
            "id": "rsa.int_ena",
            "name": "int_ena",
            "offset": "0x82c",
            "doc": "RSA interrupt enable register"
        },
        "rsa.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "538969624",
                    "doc": "rsa version information"
                }
            ],
            "id": "rsa.date",
            "name": "date",
            "offset": "0x830",
            "doc": "RSA version control register"
        },
        "rtc_cntl": {
            "type": "blk",
            "children": [
                "rtc_cntl.rtc_options0",
                "rtc_cntl.rtc_slp_timer0",
                "rtc_cntl.rtc_slp_timer1",
                "rtc_cntl.rtc_time_update",
                "rtc_cntl.rtc_time_low0",
                "rtc_cntl.rtc_time_high0",
                "rtc_cntl.rtc_state0",
                "rtc_cntl.rtc_timer1",
                "rtc_cntl.rtc_timer2",
                "rtc_cntl.rtc_timer3",
                "rtc_cntl.rtc_timer4",
                "rtc_cntl.rtc_timer5",
                "rtc_cntl.rtc_timer6",
                "rtc_cntl.rtc_ana_conf",
                "rtc_cntl.rtc_reset_state",
                "rtc_cntl.rtc_wakeup_state",
                "rtc_cntl.int_ena_rtc",
                "rtc_cntl.int_raw_rtc",
                "rtc_cntl.int_st_rtc",
                "rtc_cntl.int_clr_rtc",
                "rtc_cntl.rtc_store0",
                "rtc_cntl.rtc_store1",
                "rtc_cntl.rtc_store2",
                "rtc_cntl.rtc_store3",
                "rtc_cntl.rtc_ext_xtl_conf",
                "rtc_cntl.rtc_ext_wakeup_conf",
                "rtc_cntl.rtc_slp_reject_conf",
                "rtc_cntl.rtc_cpu_period_conf",
                "rtc_cntl.rtc_clk_conf",
                "rtc_cntl.rtc_slow_clk_conf",
                "rtc_cntl.rtc_sdio_conf",
                "rtc_cntl.rtc_bias_conf",
                "rtc_cntl.rtc",
                "rtc_cntl.rtc_pwc",
                "rtc_cntl.dig_pwc",
                "rtc_cntl.dig_iso",
                "rtc_cntl.rtc_wdtconfig0",
                "rtc_cntl.rtc_wdtconfig1",
                "rtc_cntl.rtc_wdtconfig2",
                "rtc_cntl.rtc_wdtconfig3",
                "rtc_cntl.rtc_wdtconfig4",
                "rtc_cntl.rtc_wdtfeed",
                "rtc_cntl.rtc_wdtwprotect",
                "rtc_cntl.rtc_swd_conf",
                "rtc_cntl.rtc_swd_wprotect",
                "rtc_cntl.rtc_sw_cpu_stall",
                "rtc_cntl.rtc_store4",
                "rtc_cntl.rtc_store5",
                "rtc_cntl.rtc_store6",
                "rtc_cntl.rtc_store7",
                "rtc_cntl.rtc_low_power_st",
                "rtc_cntl.rtc_diag0",
                "rtc_cntl.rtc_pad_hold",
                "rtc_cntl.dig_pad_hold",
                "rtc_cntl.rtc_brown_out",
                "rtc_cntl.rtc_time_low1",
                "rtc_cntl.rtc_time_high1",
                "rtc_cntl.rtc_xtal32k_clk_factor",
                "rtc_cntl.rtc_xtal32k_conf",
                "rtc_cntl.rtc_usb_conf",
                "rtc_cntl.rtc_slp_reject_cause",
                "rtc_cntl.rtc_option1",
                "rtc_cntl.rtc_slp_wakeup_cause",
                "rtc_cntl.rtc_ulp_cp_timer_1",
                "rtc_cntl.int_ena_rtc_w1ts",
                "rtc_cntl.int_ena_rtc_w1tc",
                "rtc_cntl.rtc_cntl_retention_ctrl",
                "rtc_cntl.rtc_fib_sel",
                "rtc_cntl.rtc_cntl_gpio_wakeup",
                "rtc_cntl.rtc_cntl_dbg_sel",
                "rtc_cntl.rtc_cntl_dbg_map",
                "rtc_cntl.rtc_cntl_sensor_ctrl",
                "rtc_cntl.rtc_cntl_dbg_sar_sel",
                "rtc_cntl.rtc_cntl_pg_ctrl",
                "rtc_cntl.date"
            ],
            "id": "rtc_cntl",
            "name": "rtc_cntl",
            "offset": "0x60008000",
            "doc": "Real-Time Clock Control"
        },
        "rtc_cntl.rtc_options0": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw_sys_rst",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "SW system reset"
                },
                {
                    "name": "dg_wrap_force_norst",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital core force no reset in deep sleep"
                },
                {
                    "name": "dg_wrap_force_rst",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital wrap force reset in deep sleep"
                },
                {
                    "name": "analog_force_noiso",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "analog configure"
                },
                {
                    "name": "pll_force_noiso",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "analog configure"
                },
                {
                    "name": "xtl_force_noiso",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "analog configure"
                },
                {
                    "name": "analog_force_iso",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "analog configure"
                },
                {
                    "name": "pll_force_iso",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "analog configure"
                },
                {
                    "name": "xtl_force_iso",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "analog configure"
                },
                {
                    "name": "xtl_ext_ctr_sel",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "analog configure"
                },
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "xtl_en_wait",
                    "lsb": 14,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "wait bias_sleep and current source wakeup"
                },
                {
                    "name": "xtl_force_pu",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "crystall force power up"
                },
                {
                    "name": "xtl_force_pd",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "crystall force power down"
                },
                {
                    "name": "bbpll_force_pu",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_PLL force power up"
                },
                {
                    "name": "bbpll_force_pd",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_PLL force power down"
                },
                {
                    "name": "bbpll_i2c_force_pu",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_PLL_I2C force power up"
                },
                {
                    "name": "bbpll_i2c_force_pd",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_PLL _I2C force power down"
                },
                {
                    "name": "bb_i2c_force_pu",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_I2C force power up"
                },
                {
                    "name": "bb_i2c_force_pd",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "BB_I2C force power down"
                },
                {
                    "name": "sw_procpu_rst",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "PRO CPU SW reset"
                },
                {
                    "name": "sw_appcpu_rst",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "APP CPU SW reset"
                },
                {
                    "name": "sw_stall_procpu_c0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "{reg_sw_stall_procpu_c1[5:0],  reg_sw_stall_procpu_c0[1:0]} == 0x86 will stall PRO CPU"
                },
                {
                    "name": "sw_stall_appcpu_c0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "{reg_sw_stall_appcpu_c1[5:0],  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU"
                }
            ],
            "id": "rtc_cntl.rtc_options0",
            "name": "rtc_options0",
            "offset": "0x0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slp_timer0": {
            "type": "reg",
            "fields": [
                {
                    "name": "slp_val_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure the  sleep time"
                }
            ],
            "id": "rtc_cntl.rtc_slp_timer0",
            "name": "rtc_slp_timer0",
            "offset": "0x4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slp_timer1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_alarm_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer alarm enable bit"
                },
                {
                    "name": "slp_val_hi",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "RTC sleep timer high 16 bits"
                }
            ],
            "id": "rtc_cntl.rtc_slp_timer1",
            "name": "rtc_slp_timer1",
            "offset": "0x8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_time_update": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_time_update",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set 1: to update register with RTC timer"
                },
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_sys_rst",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable to record system reset time"
                },
                {
                    "name": "timer_xtl_off",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable to record 40M XTAL OFF time"
                },
                {
                    "name": "timer_sys_stall",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable to record system stall time"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_time_update",
            "name": "rtc_time_update",
            "offset": "0xc",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_time_low0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_timer_value0_low",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC timer low 32 bits"
                }
            ],
            "id": "rtc_cntl.rtc_time_low0",
            "name": "rtc_time_low0",
            "offset": "0x10",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_time_high0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_timer_value0_high",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC timer high 16 bits"
                }
            ],
            "id": "rtc_cntl.rtc_time_high0",
            "name": "rtc_time_high0",
            "offset": "0x14",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_state0": {
            "type": "reg",
            "fields": [
                {
                    "name": "sleep_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "sleep enable bit"
                },
                {
                    "name": "slp_reject",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "leep reject bit"
                },
                {
                    "name": "slp_wakeup",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "leep wakeup bit"
                },
                {
                    "name": "sdio_active_ind",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "SDIO active indication"
                },
                {
                    "name": "rsvd1",
                    "lsb": 23,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb2rtc_bridge_sel",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: APB to RTC using bridge"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_slp_reject_cause_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear rtc sleep reject cause"
                },
                {
                    "name": "rtc_sw_cpu_int",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "rtc software interrupt to main cpu"
                }
            ],
            "id": "rtc_cntl.rtc_state0",
            "name": "rtc_state0",
            "offset": "0x18",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer1": {
            "type": "reg",
            "fields": [
                {
                    "name": "pll_buf_wait",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "40",
                    "doc": "PLL wait cycles in slow_clk_rtc"
                },
                {
                    "name": "xtl_buf_wait",
                    "lsb": 14,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "80",
                    "doc": "XTAL wait cycles in slow_clk_rtc"
                },
                {
                    "name": "ck8m_wait",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "CK8M wait cycles in slow_clk_rtc"
                },
                {
                    "name": "cpu_stall_wait",
                    "lsb": 1,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "CPU stall wait cycles in fast_clk_rtc"
                },
                {
                    "name": "cpu_stall_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "CPU stall enable bit"
                }
            ],
            "id": "rtc_cntl.rtc_timer1",
            "name": "rtc_timer1",
            "offset": "0x1c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer2": {
            "type": "reg",
            "fields": [
                {
                    "name": "min_time_ck8m_off",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "minimal cycles in slow_clk_rtc for CK8M in power down state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_timer2",
            "name": "rtc_timer2",
            "offset": "0x20",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer3": {
            "type": "reg",
            "fields": [
                {
                    "name": "bt_powerup_timer",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "bt power domain power on time"
                },
                {
                    "name": "bt_wait_timer",
                    "lsb": 16,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "bt power domain wakeup time"
                },
                {
                    "name": "wifi_powerup_timer",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "wifi power domain power on time"
                },
                {
                    "name": "wifi_wait_timer",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "wifi power domain wakeup time"
                }
            ],
            "id": "rtc_cntl.rtc_timer3",
            "name": "rtc_timer3",
            "offset": "0x24",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer4": {
            "type": "reg",
            "fields": [
                {
                    "name": "dg_wrap_powerup_timer",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "digital wrap power domain power on time"
                },
                {
                    "name": "dg_wrap_wait_timer",
                    "lsb": 16,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "32",
                    "doc": "digital wrap power domain wakeup time"
                },
                {
                    "name": "cpu_top_powerup_timer",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "cpu top power domain power on time"
                },
                {
                    "name": "cpu_top_wait_timer",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "cpu top power domain wakeup time"
                }
            ],
            "id": "rtc_cntl.rtc_timer4",
            "name": "rtc_timer4",
            "offset": "0x28",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "min_slp_val",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "minimal sleep cycles in slow_clk_rtc"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_timer5",
            "name": "rtc_timer5",
            "offset": "0x2c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_timer6": {
            "type": "reg",
            "fields": [
                {
                    "name": "dg_peri_powerup_timer",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "digital peri power domain power on time"
                },
                {
                    "name": "dg_peri_wait_timer",
                    "lsb": 16,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "digital peri power domain wakeup time"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_timer6",
            "name": "rtc_timer6",
            "offset": "0x30",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_ana_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "pll_i2c_pu",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "power up pll i2c"
                },
                {
                    "name": "ckgen_i2c_pu",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: CKGEN_I2C power up"
                },
                {
                    "name": "rsvd1",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rfrx_pbus_pu",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: RFRX_PBUS power up"
                },
                {
                    "name": "txrf_i2c_pu",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: TXRF_I2C power up"
                },
                {
                    "name": "pvtmon_pu",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: PVTMON power up"
                },
                {
                    "name": "bbpll_cal_slp_start",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "start BBPLL calibration during sleep"
                },
                {
                    "name": "plla_force_pu",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "PLLA force power up"
                },
                {
                    "name": "plla_force_pd",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "PLLA force power down"
                },
                {
                    "name": "sar_i2c_pu",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "PLLA force power up"
                },
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "glitch_rst_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable glitch reset"
                },
                {
                    "name": "reset_por_force_pu",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force bypass i2c power on reset"
                },
                {
                    "name": "reset_por_force_pd",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "force no bypass i2c power on reset"
                },
                {
                    "name": "rsvd2",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_ana_conf",
            "name": "rtc_ana_conf",
            "offset": "0x34",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_reset_state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_dreset_mask_procpu",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure dreset configure"
                },
                {
                    "name": "rtc_dreset_mask_appcpu",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure dreset configure"
                },
                {
                    "name": "jtag_reset_flag_clr_appcpu",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "configure jtag reset configure"
                },
                {
                    "name": "jtag_reset_flag_clr_procpu",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "configure jtag reset configure"
                },
                {
                    "name": "jtag_reset_flag_appcpu",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "configure jtag reset configure"
                },
                {
                    "name": "jtag_reset_flag_procpu",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "configure jtag reset configure"
                },
                {
                    "name": "ocd_halt_on_reset_procpu",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "PROCPU OcdHaltOnReset"
                },
                {
                    "name": "ocd_halt_on_reset_appcpu",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "APPCPU OcdHaltOnReset"
                },
                {
                    "name": "all_reset_flag_clr_appcpu",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear APP CPU reset flag"
                },
                {
                    "name": "all_reset_flag_clr_procpu",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear PRO CPU reset_flag"
                },
                {
                    "name": "all_reset_flag_appcpu",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "APP CPU reset flag"
                },
                {
                    "name": "all_reset_flag_procpu",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "PRO CPU reset_flag"
                },
                {
                    "name": "stat_vector_sel_procpu",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "PRO CPU state vector sel"
                },
                {
                    "name": "stat_vector_sel_appcpu",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "APP CPU state vector sel"
                },
                {
                    "name": "reset_cause_appcpu",
                    "lsb": 6,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reset cause of APP CPU"
                },
                {
                    "name": "reset_cause_procpu",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reset cause of PRO CPU"
                }
            ],
            "id": "rtc_cntl.rtc_reset_state",
            "name": "rtc_reset_state",
            "offset": "0x38",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wakeup_state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_wakeup_ena",
                    "lsb": 15,
                    "nbits": 17,
                    "access": "read-write",
                    "reset": "12",
                    "doc": "wakeup enable bitmap"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_wakeup_state",
            "name": "rtc_wakeup_state",
            "offset": "0x3c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_ena_rtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_ena",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enbale bbpll cal end interrupt"
                },
                {
                    "name": "rtc_glitch_det_int_ena",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enbale gitch det interrupt"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_ena",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable xtal32k_dead  interrupt"
                },
                {
                    "name": "rtc_swd_int_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable super watch dog interrupt"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable RTC main timer interrupt"
                },
                {
                    "name": "rtc_brown_out_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable brown out interrupt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable RTC WDT interrupt"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable sleep reject interrupt"
                },
                {
                    "name": "slp_wakeup_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable sleep wakeup interrupt"
                }
            ],
            "id": "rtc_cntl.int_ena_rtc",
            "name": "int_ena_rtc",
            "offset": "0x40",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_raw_rtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_raw",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "bbpll cal end interrupt state"
                },
                {
                    "name": "rtc_glitch_det_int_raw",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "glitch_det_interrupt_raw"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_raw",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "xtal32k dead detection interrupt raw"
                },
                {
                    "name": "rtc_swd_int_raw",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "super watch dog interrupt raw"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC main timer interrupt raw"
                },
                {
                    "name": "rtc_brown_out_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "brown out interrupt raw"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC WDT interrupt raw"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep reject interrupt raw"
                },
                {
                    "name": "slp_wakeup_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep wakeup interrupt raw"
                }
            ],
            "id": "rtc_cntl.int_raw_rtc",
            "name": "int_raw_rtc",
            "offset": "0x44",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_st_rtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_st",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "bbpll cal end interrupt state"
                },
                {
                    "name": "rtc_glitch_det_int_st",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "glitch_det_interrupt state"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_st",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "xtal32k dead detection interrupt state"
                },
                {
                    "name": "rtc_swd_int_st",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "super watch dog interrupt state"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC main timer interrupt state"
                },
                {
                    "name": "rtc_brown_out_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "brown out interrupt state"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC WDT interrupt state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep reject interrupt state"
                },
                {
                    "name": "slp_wakeup_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep wakeup interrupt state"
                }
            ],
            "id": "rtc_cntl.int_st_rtc",
            "name": "int_st_rtc",
            "offset": "0x48",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_clr_rtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_clr",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear bbpll cal end interrupt state"
                },
                {
                    "name": "rtc_glitch_det_int_clr",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear glitch det interrupt state"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_clr",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear RTC WDT interrupt state"
                },
                {
                    "name": "rtc_swd_int_clr",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear super watch dog interrupt state"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear RTC main timer interrupt state"
                },
                {
                    "name": "rtc_brown_out_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear brown out interrupt state"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear RTC WDT interrupt state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear sleep reject interrupt state"
                },
                {
                    "name": "slp_wakeup_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear sleep wakeup interrupt state"
                }
            ],
            "id": "rtc_cntl.int_clr_rtc",
            "name": "int_clr_rtc",
            "offset": "0x4c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store0",
            "name": "rtc_store0",
            "offset": "0x50",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store1",
            "name": "rtc_store1",
            "offset": "0x54",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store2",
            "name": "rtc_store2",
            "offset": "0x58",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store3",
            "name": "rtc_store3",
            "offset": "0x5c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_ext_xtl_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "xtl_ext_ctr_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable gpio configure xtal power on"
                },
                {
                    "name": "xtl_ext_ctr_lv",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0: power down XTAL at high level"
                },
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_gpio_sel",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "XTAL_32K sel. 0: external XTAL_32K"
                },
                {
                    "name": "rtc_wdt_state",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "state of 32k_wdt"
                },
                {
                    "name": "dac_xtal_32k",
                    "lsb": 17,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "DAC_XTAL_32K"
                },
                {
                    "name": "xpd_xtal_32k",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "XPD_XTAL_32K"
                },
                {
                    "name": "dres_xtal_32k",
                    "lsb": 13,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "DRES_XTAL_32K"
                },
                {
                    "name": "dgm_xtal_32k",
                    "lsb": 10,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "xtal_32k gm control"
                },
                {
                    "name": "dbuf_xtal_32k",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "0: single-end buffer 1: differential buffer"
                },
                {
                    "name": "enckinit_xtal_32k",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "apply an internal clock to help xtal 32k to start"
                },
                {
                    "name": "xtal32k_xpd_force",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Xtal 32k xpd control by sw or fsm"
                },
                {
                    "name": "xtal32k_auto_return",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k switch back xtal when xtal is restarted"
                },
                {
                    "name": "xtal32k_auto_restart",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k restart xtal when xtal is dead"
                },
                {
                    "name": "xtal32k_auto_backup",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k switch to back up clock when xtal is dead"
                },
                {
                    "name": "xtal32k_ext_clk_fo",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k external xtal clock force on"
                },
                {
                    "name": "xtal32k_wdt_reset",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k watch dog sw reset"
                },
                {
                    "name": "xtal32k_wdt_clk_fo",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k watch dog clock force on"
                },
                {
                    "name": "xtal32k_wdt_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k watch dog enable"
                }
            ],
            "id": "rtc_cntl.rtc_ext_xtl_conf",
            "name": "rtc_ext_xtl_conf",
            "offset": "0x60",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_ext_wakeup_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "gpio_wakeup_filter",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable filter for gpio wakeup event"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_ext_wakeup_conf",
            "name": "rtc_ext_wakeup_conf",
            "offset": "0x64",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slp_reject_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "deep_slp_reject_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable reject for deep sleep"
                },
                {
                    "name": "light_slp_reject_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable reject for light sleep"
                },
                {
                    "name": "rtc_sleep_reject_ena",
                    "lsb": 12,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "sleep reject enable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_slp_reject_conf",
            "name": "rtc_slp_reject_conf",
            "offset": "0x68",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cpu_period_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_cpuperiod_sel",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "CPU clk sel option"
                },
                {
                    "name": "rtc_cpusel_conf",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "CPU sel option"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cpu_period_conf",
            "name": "rtc_cpu_period_conf",
            "offset": "0x6c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_clk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "ana_clk_rtc_sel",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "slelect rtc slow clk"
                },
                {
                    "name": "fast_clk_rtc_sel",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "fast_clk_rtc sel. 0: XTAL div 4"
                },
                {
                    "name": "xtal_global_force_nogating",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "force bypass xtal clk gating"
                },
                {
                    "name": "xtal_global_force_gating",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force enable xtal clk gating"
                },
                {
                    "name": "ck8m_force_pu",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "CK8M force power up"
                },
                {
                    "name": "ck8m_force_pd",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "CK8M force power down"
                },
                {
                    "name": "ck8m_dfreq",
                    "lsb": 17,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "172",
                    "doc": "CK8M_DFREQ"
                },
                {
                    "name": "ck8m_force_nogating",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "CK8M force no gating during sleep"
                },
                {
                    "name": "xtal_force_nogating",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "XTAL force no gating during sleep"
                },
                {
                    "name": "ck8m_div_sel",
                    "lsb": 12,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "divider = reg_ck8m_div_sel + 1"
                },
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dig_clk8m_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable CK8M for digital core (no relationship with RTC core)"
                },
                {
                    "name": "dig_clk8m_d256_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "enable CK8M_D256_OUT for digital core (no relationship with RTC core)"
                },
                {
                    "name": "dig_xtal32k_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable CK_XTAL_32K for digital core (no relationship with RTC core)"
                },
                {
                    "name": "enb_ck8m_div",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: CK8M_D256_OUT is actually CK8M"
                },
                {
                    "name": "enb_ck8m",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "disable CK8M and CK8M_D256_OUT"
                },
                {
                    "name": "ck8m_div",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "CK8M_D256_OUT divider. 00: div128"
                },
                {
                    "name": "ck8m_div_sel_vld",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "used to sync reg_ck8m_div_sel bus. Clear vld before set reg_ck8m_div_sel"
                },
                {
                    "name": "efuse_clk_force_nogating",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "efuse_clk_force_nogating"
                },
                {
                    "name": "efuse_clk_force_gating",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "efuse_clk_force_gating"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_clk_conf",
            "name": "rtc_clk_conf",
            "offset": "0x70",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slow_clk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_slow_clk_next_edge",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "flag rtc_slow_clk_next_edge"
                },
                {
                    "name": "rtc_ana_clk_div",
                    "lsb": 23,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the clk divider num of RTC_CLK"
                },
                {
                    "name": "rtc_ana_clk_div_vld",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "used to sync div bus. clear vld before set reg_rtc_ana_clk_div"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_slow_clk_conf",
            "name": "rtc_slow_clk_conf",
            "offset": "0x74",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_sdio_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "xpd_sdio",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": ""
                },
                {
                    "name": "drefh_sdio",
                    "lsb": 29,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SW option for DREFH_SDIO. Only active when reg_sdio_force = 1"
                },
                {
                    "name": "drefm_sdio",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SW option for DREFM_SDIO. Only active when reg_sdio_force = 1"
                },
                {
                    "name": "drefl_sdio",
                    "lsb": 25,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SW option for DREFL_SDIO. Only active when reg_sdio_force = 1"
                },
                {
                    "name": "_1p8_ready",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "read only register for REG1P8_READY"
                },
                {
                    "name": "sdio_tieh",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SW option for SDIO_TIEH. Only active when reg_sdio_force = 1"
                },
                {
                    "name": "sdio_force",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: use SW option to control SDIO_REG"
                },
                {
                    "name": "sdio_reg_pd_en",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "power down SDIO_REG in sleep. Only active when reg_sdio_force = 0"
                },
                {
                    "name": "sdio_encurlim",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "enable current limit"
                },
                {
                    "name": "sdio_modecurlim",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "select current limit mode"
                },
                {
                    "name": "sdio_dcurlim",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "tune current limit threshold when tieh = 0. About 800mA/(8+d)"
                },
                {
                    "name": "sdio_en_initi",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "0 to set init[1:0]=0"
                },
                {
                    "name": "sdio_initi",
                    "lsb": 13,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "add resistor from ldo output to ground. 0: no res"
                },
                {
                    "name": "sdio_dcap",
                    "lsb": 11,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "ability to prevent LDO from overshoot"
                },
                {
                    "name": "sdio_dthdrv",
                    "lsb": 9,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "Tieh = 1 mode drive ability. Initially set to 0 to limit charge current"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sdio_timer_target",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "10",
                    "doc": "timer count to apply reg_sdio_dcap after sdio power on"
                }
            ],
            "id": "rtc_cntl.rtc_sdio_conf",
            "name": "rtc_sdio_conf",
            "offset": "0x78",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_bias_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dbg_atten_monitor",
                    "lsb": 22,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "DBG_ATTEN when rtc in monitor state"
                },
                {
                    "name": "dbg_atten_deep_slp",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "DBG_ATTEN when rtc in sleep state"
                },
                {
                    "name": "bias_sleep_monitor",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bias_sleep when rtc in monitor state"
                },
                {
                    "name": "bias_sleep_deep_slp",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "bias_sleep when rtc in sleep_state"
                },
                {
                    "name": "pd_cur_monitor",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xpd cur when rtc in monitor state"
                },
                {
                    "name": "pd_cur_deep_slp",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xpd cur when rtc in sleep_state"
                },
                {
                    "name": "bias_buf_monitor",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bias buf when rtc in monitor state"
                },
                {
                    "name": "bias_buf_deep_slp",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bias buf when rtc in sleep state"
                },
                {
                    "name": "bias_buf_wake",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "bias buf when rtc in wakeup state"
                },
                {
                    "name": "bias_buf_idle",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bias buf when rtc in normal work state"
                },
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dg_vdd_drv_b_slp_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": ""
                },
                {
                    "name": "dg_vdd_drv_b_slp",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": ""
                }
            ],
            "id": "rtc_cntl.rtc_bias_conf",
            "name": "rtc_bias_conf",
            "offset": "0x7c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "regulator_force_pu",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "RTC_REG force power up"
                },
                {
                    "name": "regulator_force_pd",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "RTC_REG force power down (for RTC_REG power down means decrease the voltage to 0.8v or lower )"
                },
                {
                    "name": "dboost_force_pu",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "RTC_DBOOST force power up"
                },
                {
                    "name": "dboost_force_pd",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "RTC_DBOOST force power down"
                },
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sck_dcap",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SCK_DCAP"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dig_reg_cal_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "software enable digital regulator cali"
                },
                {
                    "name": "rsvd2",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc",
            "name": "rtc",
            "offset": "0x80",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_pwc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_pad_force_hold",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "rtc pad force hold"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_pwc",
            "name": "rtc_pwc",
            "offset": "0x84",
            "doc": "rtc configure register"
        },
        "rtc_cntl.dig_pwc": {
            "type": "reg",
            "fields": [
                {
                    "name": "dg_wrap_pd_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down digital wrap in sleep"
                },
                {
                    "name": "wifi_pd_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down wifi in sleep"
                },
                {
                    "name": "cpu_top_pd_en",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down cpu in sleep"
                },
                {
                    "name": "dg_peri_pd_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down digital peri in sleep"
                },
                {
                    "name": "bt_pd_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down bt in sleep"
                },
                {
                    "name": "rsvd1",
                    "lsb": 23,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_top_force_pu",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "cpu force power up"
                },
                {
                    "name": "cpu_top_force_pd",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cpu core force power down"
                },
                {
                    "name": "dg_wrap_force_pu",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital core force power up"
                },
                {
                    "name": "dg_wrap_force_pd",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital core force power down"
                },
                {
                    "name": "wifi_force_pu",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "wifi force power up"
                },
                {
                    "name": "wifi_force_pd",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "wifi force power down"
                },
                {
                    "name": "rtc_fastmem_force_lpu",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "fastmemory donlt entry retention mode in sleep"
                },
                {
                    "name": "rtc_fastmem_force_lpd",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "fastmemory  retention mode in sleep"
                },
                {
                    "name": "dg_peri_force_pu",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital peri force power up"
                },
                {
                    "name": "dg_peri_force_pd",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital peri force power down"
                },
                {
                    "name": "bt_force_pu",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "bt force power up"
                },
                {
                    "name": "bt_force_pd",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bt force power down"
                },
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lslp_mem_force_pu",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "memories in digital core force PU in sleep"
                },
                {
                    "name": "lslp_mem_force_pd",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "memories in digital core force PD in sleep"
                },
                {
                    "name": "vdd_spi_pwr_force",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "vdd_spi drv use software value"
                },
                {
                    "name": "vdd_spi_pwr_drv",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "vdd_spi drv's software value"
                }
            ],
            "id": "rtc_cntl.dig_pwc",
            "name": "dig_pwc",
            "offset": "0x88",
            "doc": "rtc configure register"
        },
        "rtc_cntl.dig_iso": {
            "type": "reg",
            "fields": [
                {
                    "name": "dg_wrap_force_noiso",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital core force no ISO"
                },
                {
                    "name": "dg_wrap_force_iso",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital core force ISO"
                },
                {
                    "name": "wifi_force_noiso",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "wifi force no ISO"
                },
                {
                    "name": "wifi_force_iso",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "wifi force ISO"
                },
                {
                    "name": "cpu_top_force_noiso",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "cpu force no ISO"
                },
                {
                    "name": "cpu_top_force_iso",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cpu force ISO"
                },
                {
                    "name": "dg_peri_force_noiso",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital peri force no ISO"
                },
                {
                    "name": "dg_peri_force_iso",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Digital peri force ISO"
                },
                {
                    "name": "bt_force_noiso",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "bt force no ISO"
                },
                {
                    "name": "bt_force_iso",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "bt force ISO"
                },
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dg_pad_force_hold",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital pad force hold"
                },
                {
                    "name": "dg_pad_force_unhold",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital pad force un-hold"
                },
                {
                    "name": "dg_pad_force_iso",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital pad force ISO"
                },
                {
                    "name": "dg_pad_force_noiso",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "digital pad force no ISO"
                },
                {
                    "name": "dg_pad_autohold_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "digital pad enable auto-hold"
                },
                {
                    "name": "clr_dg_pad_autohold",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "wtite only register to clear digital pad auto-hold"
                },
                {
                    "name": "dg_pad_autohold",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "read only register to indicate digital pad auto-hold status"
                },
                {
                    "name": "force_on",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "DIG_ISO force on"
                },
                {
                    "name": "force_off",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "DIG_ISO force off"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.dig_iso",
            "name": "dig_iso",
            "offset": "0x8c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtconfig0": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable rtc wdt"
                },
                {
                    "name": "wdt_stg0",
                    "lsb": 28,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: interrupt stage en"
                },
                {
                    "name": "wdt_stg1",
                    "lsb": 25,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: interrupt stage en"
                },
                {
                    "name": "wdt_stg2",
                    "lsb": 22,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: interrupt stage en"
                },
                {
                    "name": "wdt_stg3",
                    "lsb": 19,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: interrupt stage en"
                },
                {
                    "name": "wdt_cpu_reset_length",
                    "lsb": 16,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "CPU reset counter length"
                },
                {
                    "name": "wdt_sys_reset_length",
                    "lsb": 13,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "system reset counter length"
                },
                {
                    "name": "wdt_flashboot_mod_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "enable WDT in flash boot"
                },
                {
                    "name": "wdt_procpu_reset_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable WDT reset PRO CPU"
                },
                {
                    "name": "wdt_appcpu_reset_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable WDT reset APP CPU"
                },
                {
                    "name": "wdt_pause_in_slp",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pause WDT in sleep"
                },
                {
                    "name": "wdt_chip_reset_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "wdt reset whole chip enable"
                },
                {
                    "name": "wdt_chip_reset_width",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "20",
                    "doc": "chip reset siginal pulse width"
                }
            ],
            "id": "rtc_cntl.rtc_wdtconfig0",
            "name": "rtc_wdtconfig0",
            "offset": "0x90",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtconfig1": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg0_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "200000",
                    "doc": "the hold time of stage0"
                }
            ],
            "id": "rtc_cntl.rtc_wdtconfig1",
            "name": "rtc_wdtconfig1",
            "offset": "0x94",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtconfig2": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg1_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "80000",
                    "doc": "the hold time of stage1"
                }
            ],
            "id": "rtc_cntl.rtc_wdtconfig2",
            "name": "rtc_wdtconfig2",
            "offset": "0x98",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtconfig3": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg2_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4095",
                    "doc": "the hold time of stage2"
                }
            ],
            "id": "rtc_cntl.rtc_wdtconfig3",
            "name": "rtc_wdtconfig3",
            "offset": "0x9c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtconfig4": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg3_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "4095",
                    "doc": "the hold time of stage3"
                }
            ],
            "id": "rtc_cntl.rtc_wdtconfig4",
            "name": "rtc_wdtconfig4",
            "offset": "0xa0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtfeed": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_wdt_feed",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "sw feed rtc wdt"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_wdtfeed",
            "name": "rtc_wdtfeed",
            "offset": "0xa4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_wdtwprotect": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_wkey",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the key of rtc wdt"
                }
            ],
            "id": "rtc_cntl.rtc_wdtwprotect",
            "name": "rtc_wdtwprotect",
            "offset": "0xa8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_swd_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "swd_auto_feed_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "automatically feed swd when int comes"
                },
                {
                    "name": "swd_disable",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "disabel SWD"
                },
                {
                    "name": "swd_feed",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Sw feed swd"
                },
                {
                    "name": "swd_rst_flag_clr",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reset swd reset flag"
                },
                {
                    "name": "swd_signal_width",
                    "lsb": 18,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "300",
                    "doc": "adjust signal width send to swd"
                },
                {
                    "name": "swd_bypass_rst",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Bypass swd rst"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "swd_feed_int",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "swd interrupt for feeding"
                },
                {
                    "name": "swd_reset_flag",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "swd reset flag"
                }
            ],
            "id": "rtc_cntl.rtc_swd_conf",
            "name": "rtc_swd_conf",
            "offset": "0xac",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_swd_wprotect": {
            "type": "reg",
            "fields": [
                {
                    "name": "swd_wkey",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the key of super wdt"
                }
            ],
            "id": "rtc_cntl.rtc_swd_wprotect",
            "name": "rtc_swd_wprotect",
            "offset": "0xb0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_sw_cpu_stall": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw_stall_procpu_c1",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "stall cpu by software"
                },
                {
                    "name": "sw_stall_appcpu_c1",
                    "lsb": 20,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "{reg_sw_stall_appcpu_c1[5:0]"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_sw_cpu_stall",
            "name": "rtc_sw_cpu_stall",
            "offset": "0xb4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store4",
            "name": "rtc_store4",
            "offset": "0xb8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store5",
            "name": "rtc_store5",
            "offset": "0xbc",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store6": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store6",
            "name": "rtc_store6",
            "offset": "0xc0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_store7": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_scratch7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved register"
                }
            ],
            "id": "rtc_cntl.rtc_store7",
            "name": "rtc_store7",
            "offset": "0xc4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_low_power_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_main_state",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine status"
                },
                {
                    "name": "rtc_main_state_in_idle",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in idle state"
                },
                {
                    "name": "rtc_main_state_in_slp",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in sleep state"
                },
                {
                    "name": "rtc_main_state_in_wait_xtl",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in wait xtal state"
                },
                {
                    "name": "rtc_main_state_in_wait_pll",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in wait pll state"
                },
                {
                    "name": "rtc_main_state_in_wait_8m",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in wait 8m state"
                },
                {
                    "name": "rtc_in_low_power_state",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in the states of low power"
                },
                {
                    "name": "rtc_in_wakeup_state",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in the states of wakeup process"
                },
                {
                    "name": "rtc_main_state_wait_end",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine has been waited for some cycles"
                },
                {
                    "name": "rtc_rdy_for_wakeup",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc is ready to receive wake up trigger from wake up source"
                },
                {
                    "name": "rtc_main_state_pll_on",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc main state machine is in states that pll should be running"
                },
                {
                    "name": "rtc_main_state_xtal_iso",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "no use any more"
                },
                {
                    "name": "rtc_cocpu_state_done",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "ulp/cocpu is done"
                },
                {
                    "name": "rtc_cocpu_state_slp",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "ulp/cocpu is in sleep state"
                },
                {
                    "name": "rtc_cocpu_state_switch",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "ulp/cocpu is about to working. Switch rtc main state"
                },
                {
                    "name": "rtc_cocpu_state_start",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "ulp/cocpu should start to work"
                },
                {
                    "name": "rtc_touch_state_done",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "touch is done"
                },
                {
                    "name": "rtc_touch_state_slp",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "touch is in sleep state"
                },
                {
                    "name": "rtc_touch_state_switch",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "touch is about to working. Switch rtc main state"
                },
                {
                    "name": "rtc_touch_state_start",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "touch should start to work"
                },
                {
                    "name": "xpd_dig",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "digital wrap power down"
                },
                {
                    "name": "dig_iso",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "digital wrap iso"
                },
                {
                    "name": "xpd_wifi",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "wifi wrap power down"
                },
                {
                    "name": "wifi_iso",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "wifi iso"
                },
                {
                    "name": "xpd_rtc_peri",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc peripheral power down"
                },
                {
                    "name": "rtc_peri_iso",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc peripheral iso"
                },
                {
                    "name": "xpd_dig_dcdc",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "External DCDC power down"
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "xpd_rom0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rom0 power down"
                }
            ],
            "id": "rtc_cntl.rtc_low_power_st",
            "name": "rtc_low_power_st",
            "offset": "0xc8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_diag0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_low_power_diag1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": ""
                }
            ],
            "id": "rtc_cntl.rtc_diag0",
            "name": "rtc_diag0",
            "offset": "0xcc",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_pad_hold": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_gpio_pin5_hold",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio5"
                },
                {
                    "name": "rtc_gpio_pin4_hold",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio4"
                },
                {
                    "name": "rtc_gpio_pin3_hold",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio3"
                },
                {
                    "name": "rtc_gpio_pin2_hold",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio2"
                },
                {
                    "name": "rtc_gpio_pin1_hold",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio1"
                },
                {
                    "name": "rtc_gpio_pin0_hold",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the hold configure of rtc gpio0"
                }
            ],
            "id": "rtc_cntl.rtc_pad_hold",
            "name": "rtc_pad_hold",
            "offset": "0xd0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.dig_pad_hold": {
            "type": "reg",
            "fields": [
                {
                    "name": "dig_pad_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the configure of digital pad"
                }
            ],
            "id": "rtc_cntl.dig_pad_hold",
            "name": "dig_pad_hold",
            "offset": "0xd4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_brown_out": {
            "type": "reg",
            "fields": [
                {
                    "name": "det",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "the flag of brown det from analog"
                },
                {
                    "name": "brown_out_ena",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "enable brown out"
                },
                {
                    "name": "brown_out_cnt_clr",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear brown out counter"
                },
                {
                    "name": "brown_out_ana_rst_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "brown_out origin reset enable"
                },
                {
                    "name": "brown_out_rst_sel",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1:  4-pos reset"
                },
                {
                    "name": "brown_out_rst_ena",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable brown out reset"
                },
                {
                    "name": "brown_out_rst_wait",
                    "lsb": 16,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "1023",
                    "doc": "brown out reset wait cycles"
                },
                {
                    "name": "brown_out_pd_rf_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power down RF when brown out happens"
                },
                {
                    "name": "brown_out_close_flash_ena",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable close flash when brown out happens"
                },
                {
                    "name": "brown_out_int_wait",
                    "lsb": 4,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "brown out interrupt wait cycles"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_brown_out",
            "name": "rtc_brown_out",
            "offset": "0xd8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_time_low1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_timer_value1_low",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC timer low 32 bits"
                }
            ],
            "id": "rtc_cntl.rtc_time_low1",
            "name": "rtc_time_low1",
            "offset": "0xdc",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_time_high1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_timer_value1_high",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "RTC timer high 16 bits"
                }
            ],
            "id": "rtc_cntl.rtc_time_high1",
            "name": "rtc_time_high1",
            "offset": "0xe0",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_xtal32k_clk_factor": {
            "type": "reg",
            "fields": [
                {
                    "name": "xtal32k_clk_factor",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "xtal 32k watch dog backup clock factor"
                }
            ],
            "id": "rtc_cntl.rtc_xtal32k_clk_factor",
            "name": "rtc_xtal32k_clk_factor",
            "offset": "0xe4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_xtal32k_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "xtal32k_stable_thres",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "if restarted xtal32k period is smaller than this"
                },
                {
                    "name": "xtal32k_wdt_timeout",
                    "lsb": 20,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "If no clock detected for this amount of time"
                },
                {
                    "name": "xtal32k_restart_wait",
                    "lsb": 4,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cycles to wait to repower on xtal 32k"
                },
                {
                    "name": "xtal32k_return_wait",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cycles to wait to return noral xtal 32k"
                }
            ],
            "id": "rtc_cntl.rtc_xtal32k_conf",
            "name": "rtc_xtal32k_conf",
            "offset": "0xe8",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_usb_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 19,
                    "nbits": 13,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "io_mux_reset_disable",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "disable io_mux reset"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_usb_conf",
            "name": "rtc_usb_conf",
            "offset": "0xec",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slp_reject_cause": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reject_cause",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep reject cause"
                }
            ],
            "id": "rtc_cntl.rtc_slp_reject_cause",
            "name": "rtc_slp_reject_cause",
            "offset": "0xf0",
            "doc": "RTC_CNTL_RTC_SLP_REJECT_CAUSE_REG"
        },
        "rtc_cntl.rtc_option1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "force_download_boot",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force chip entry download mode"
                }
            ],
            "id": "rtc_cntl.rtc_option1",
            "name": "rtc_option1",
            "offset": "0xf4",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_slp_wakeup_cause": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wakeup_cause",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "sleep wakeup cause"
                }
            ],
            "id": "rtc_cntl.rtc_slp_wakeup_cause",
            "name": "rtc_slp_wakeup_cause",
            "offset": "0xf8",
            "doc": "RTC_CNTL_RTC_SLP_WAKEUP_CAUSE_REG"
        },
        "rtc_cntl.rtc_ulp_cp_timer_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "ulp_cp_timer_slp_cycle",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "read-write",
                    "reset": "200",
                    "doc": "sleep cycles for ULP-coprocessor timer"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_ulp_cp_timer_1",
            "name": "rtc_ulp_cp_timer_1",
            "offset": "0xfc",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_ena_rtc_w1ts": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_ena_w1ts",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enbale bbpll cal interrupt"
                },
                {
                    "name": "rtc_glitch_det_int_ena_w1ts",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enbale gitch det interrupt"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_ena_w1ts",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable xtal32k_dead  interrupt"
                },
                {
                    "name": "rtc_swd_int_ena_w1ts",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable super watch dog interrupt"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_ena_w1ts",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable RTC main timer interrupt"
                },
                {
                    "name": "rtc_brown_out_int_ena_w1ts",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable brown out interrupt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_ena_w1ts",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable RTC WDT interrupt"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_ena_w1ts",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable sleep reject interrupt"
                },
                {
                    "name": "slp_wakeup_int_ena_w1ts",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "enable sleep wakeup interrupt"
                }
            ],
            "id": "rtc_cntl.int_ena_rtc_w1ts",
            "name": "int_ena_rtc_w1ts",
            "offset": "0x100",
            "doc": "rtc configure register"
        },
        "rtc_cntl.int_ena_rtc_w1tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_bbpll_cal_int_ena_w1tc",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear bbpll cal interrupt enable"
                },
                {
                    "name": "rtc_glitch_det_int_ena_w1tc",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear gitch det interrupt enable"
                },
                {
                    "name": "rsvd3",
                    "lsb": 17,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_xtal32k_dead_int_ena_w1tc",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear xtal32k_dead  interrupt enable"
                },
                {
                    "name": "rtc_swd_int_ena_w1tc",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear super watch dog interrupt enable"
                },
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_main_timer_int_ena_w1tc",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear RTC main timer interrupt enable"
                },
                {
                    "name": "rtc_brown_out_int_ena_w1tc",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear brown out interrupt enable"
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_wdt_int_ena_w1tc",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear RTC WDT interrupt enable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slp_reject_int_ena_w1tc",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear sleep reject interrupt enable"
                },
                {
                    "name": "slp_wakeup_int_ena_w1tc",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "clear sleep wakeup interrupt enable"
                }
            ],
            "id": "rtc_cntl.int_ena_rtc_w1tc",
            "name": "int_ena_rtc_w1tc",
            "offset": "0x104",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_retention_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "retention_wait",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "20",
                    "doc": "wait cycles for rention operation"
                },
                {
                    "name": "retention_en",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable cpu retention when light sleep"
                },
                {
                    "name": "retention_clkoff_wait",
                    "lsb": 22,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "Retention clkoff wait time"
                },
                {
                    "name": "retention_done_wait",
                    "lsb": 19,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "2",
                    "doc": "Retention done wait time"
                },
                {
                    "name": "retention_clk_sel",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Retention clk sel"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_retention_ctrl",
            "name": "rtc_cntl_retention_ctrl",
            "offset": "0x108",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_fib_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_fib_sel",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "select use analog fib signal"
                }
            ],
            "id": "rtc_cntl.rtc_fib_sel",
            "name": "rtc_fib_sel",
            "offset": "0x10c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_gpio_wakeup": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_gpio_pin0_wakeup_enable",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio0"
                },
                {
                    "name": "rtc_gpio_pin1_wakeup_enable",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio1"
                },
                {
                    "name": "rtc_gpio_pin2_wakeup_enable",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio2"
                },
                {
                    "name": "rtc_gpio_pin3_wakeup_enable",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio3"
                },
                {
                    "name": "rtc_gpio_pin4_wakeup_enable",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio4"
                },
                {
                    "name": "rtc_gpio_pin5_wakeup_enable",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable wakeup from rtc gpio5"
                },
                {
                    "name": "rtc_gpio_pin0_int_type",
                    "lsb": 23,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin1_int_type",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin2_int_type",
                    "lsb": 17,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin3_int_type",
                    "lsb": 14,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin4_int_type",
                    "lsb": 11,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin5_int_type",
                    "lsb": 8,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "configure gpio wakeup type"
                },
                {
                    "name": "rtc_gpio_pin_clk_gate",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable rtc io clk gate"
                },
                {
                    "name": "rtc_gpio_wakeup_status_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "clear rtc gpio wakeup flag"
                },
                {
                    "name": "rtc_gpio_wakeup_status",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc gpio wakeup flag"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_gpio_wakeup",
            "name": "rtc_cntl_gpio_wakeup",
            "offset": "0x110",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_dbg_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_debug_sel4",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_sel3",
                    "lsb": 22,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_sel2",
                    "lsb": 17,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_sel1",
                    "lsb": 12,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_sel0",
                    "lsb": 7,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_bit_sel",
                    "lsb": 2,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_debug_12m_no_gating",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_dbg_sel",
            "name": "rtc_cntl_dbg_sel",
            "offset": "0x114",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_dbg_map": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_gpio_pin0_fun_sel",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin1_fun_sel",
                    "lsb": 24,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin2_fun_sel",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin3_fun_sel",
                    "lsb": 16,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin4_fun_sel",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin5_fun_sel",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin0_mux_sel",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin1_mux_sel",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin2_mux_sel",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin3_mux_sel",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin4_mux_sel",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rtc_gpio_pin5_mux_sel",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_dbg_map",
            "name": "rtc_cntl_dbg_map",
            "offset": "0x118",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_sensor_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "force_xpd_sar",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force power up SAR"
                },
                {
                    "name": "sar2_pwdet_cct",
                    "lsb": 27,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sar2_pwdet_cct"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_sensor_ctrl",
            "name": "rtc_cntl_sensor_ctrl",
            "offset": "0x11c",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_dbg_sar_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "sar_debug_sel",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use for debug"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_dbg_sar_sel",
            "name": "rtc_cntl_dbg_sar_sel",
            "offset": "0x120",
            "doc": "rtc configure register"
        },
        "rtc_cntl.rtc_cntl_pg_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "power_glitch_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "enable power glitch"
                },
                {
                    "name": "power_glitch_efuse_sel",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "use efuse value control power glitch enable"
                },
                {
                    "name": "power_glitch_force_pu",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force enable power glitch"
                },
                {
                    "name": "power_glitch_force_pd",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "force disable power glitch"
                },
                {
                    "name": "power_glitch_dsense",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "power glitch desense"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "rtc_cntl.rtc_cntl_pg_ctrl",
            "name": "rtc_cntl_pg_ctrl",
            "offset": "0x124",
            "doc": "rtc configure register"
        },
        "rtc_cntl.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_cntl_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583728",
                    "doc": "verision"
                }
            ],
            "id": "rtc_cntl.date",
            "name": "date",
            "offset": "0x1fc",
            "doc": "rtc configure register"
        },
        "sensitive": {
            "type": "blk",
            "children": [
                "sensitive.rom_table_lock",
                "sensitive.rom_table",
                "sensitive.privilege_mode_sel_lock",
                "sensitive.privilege_mode_sel",
                "sensitive.apb_peripheral_access_0",
                "sensitive.apb_peripheral_access_1",
                "sensitive.internal_sram_usage_0",
                "sensitive.internal_sram_usage_1",
                "sensitive.internal_sram_usage_3",
                "sensitive.internal_sram_usage_4",
                "sensitive.cache_tag_access_0",
                "sensitive.cache_tag_access_1",
                "sensitive.cache_mmu_access_0",
                "sensitive.cache_mmu_access_1",
                "sensitive.dma_apbperi_spi2_pms_constrain_0",
                "sensitive.dma_apbperi_spi2_pms_constrain_1",
                "sensitive.dma_apbperi_uchi0_pms_constrain_0",
                "sensitive.dma_apbperi_uchi0_pms_constrain_1",
                "sensitive.dma_apbperi_i2s0_pms_constrain_0",
                "sensitive.dma_apbperi_i2s0_pms_constrain_1",
                "sensitive.dma_apbperi_mac_pms_constrain_0",
                "sensitive.dma_apbperi_mac_pms_constrain_1",
                "sensitive.dma_apbperi_backup_pms_constrain_0",
                "sensitive.dma_apbperi_backup_pms_constrain_1",
                "sensitive.dma_apbperi_lc_pms_constrain_0",
                "sensitive.dma_apbperi_lc_pms_constrain_1",
                "sensitive.dma_apbperi_aes_pms_constrain_0",
                "sensitive.dma_apbperi_aes_pms_constrain_1",
                "sensitive.dma_apbperi_sha_pms_constrain_0",
                "sensitive.dma_apbperi_sha_pms_constrain_1",
                "sensitive.dma_apbperi_adc_dac_pms_constrain_0",
                "sensitive.dma_apbperi_adc_dac_pms_constrain_1",
                "sensitive.dma_apbperi_pms_monitor_0",
                "sensitive.dma_apbperi_pms_monitor_1",
                "sensitive.dma_apbperi_pms_monitor_2",
                "sensitive.dma_apbperi_pms_monitor_3",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_0",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_1",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_2",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_3",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_4",
                "sensitive.core_x_iram0_dram0_dma_split_line_constrain_5",
                "sensitive.core_x_iram0_pms_constrain_0",
                "sensitive.core_x_iram0_pms_constrain_1",
                "sensitive.core_x_iram0_pms_constrain_2",
                "sensitive.core_0_iram0_pms_monitor_0",
                "sensitive.core_0_iram0_pms_monitor_1",
                "sensitive.core_0_iram0_pms_monitor_2",
                "sensitive.core_x_dram0_pms_constrain_0",
                "sensitive.core_x_dram0_pms_constrain_1",
                "sensitive.core_0_dram0_pms_monitor_0",
                "sensitive.core_0_dram0_pms_monitor_1",
                "sensitive.core_0_dram0_pms_monitor_2",
                "sensitive.core_0_dram0_pms_monitor_3",
                "sensitive.core_0_pif_pms_constrain_0",
                "sensitive.core_0_pif_pms_constrain_1",
                "sensitive.core_0_pif_pms_constrain_2",
                "sensitive.core_0_pif_pms_constrain_3",
                "sensitive.core_0_pif_pms_constrain_4",
                "sensitive.core_0_pif_pms_constrain_5",
                "sensitive.core_0_pif_pms_constrain_6",
                "sensitive.core_0_pif_pms_constrain_7",
                "sensitive.core_0_pif_pms_constrain_8",
                "sensitive.core_0_pif_pms_constrain_9",
                "sensitive.core_0_pif_pms_constrain_10",
                "sensitive.region_pms_constrain_0",
                "sensitive.region_pms_constrain_1",
                "sensitive.region_pms_constrain_2",
                "sensitive.region_pms_constrain_3",
                "sensitive.region_pms_constrain_4",
                "sensitive.region_pms_constrain_5",
                "sensitive.region_pms_constrain_6",
                "sensitive.region_pms_constrain_7",
                "sensitive.region_pms_constrain_8",
                "sensitive.region_pms_constrain_9",
                "sensitive.region_pms_constrain_10",
                "sensitive.core_0_pif_pms_monitor_0",
                "sensitive.core_0_pif_pms_monitor_1",
                "sensitive.core_0_pif_pms_monitor_2",
                "sensitive.core_0_pif_pms_monitor_3",
                "sensitive.core_0_pif_pms_monitor_4",
                "sensitive.core_0_pif_pms_monitor_5",
                "sensitive.core_0_pif_pms_monitor_6",
                "sensitive.backup_bus_pms_constrain_0",
                "sensitive.backup_bus_pms_constrain_1",
                "sensitive.backup_bus_pms_constrain_2",
                "sensitive.backup_bus_pms_constrain_3",
                "sensitive.backup_bus_pms_constrain_4",
                "sensitive.backup_bus_pms_monitor_0",
                "sensitive.backup_bus_pms_monitor_1",
                "sensitive.backup_bus_pms_monitor_2",
                "sensitive.backup_bus_pms_monitor_3",
                "sensitive.clock_gate",
                "sensitive.date"
            ],
            "id": "sensitive",
            "name": "sensitive",
            "offset": "0x600c1000",
            "doc": "Sensitive"
        },
        "sensitive.rom_table_lock": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rom_table_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "rom_table_lock"
                }
            ],
            "id": "sensitive.rom_table_lock",
            "name": "rom_table_lock",
            "offset": "0x0",
            "doc": "SENSITIVE_ROM_TABLE_LOCK_REG"
        },
        "sensitive.rom_table": {
            "type": "reg",
            "fields": [
                {
                    "name": "rom_table",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "rom_table"
                }
            ],
            "id": "sensitive.rom_table",
            "name": "rom_table",
            "offset": "0x4",
            "doc": "SENSITIVE_ROM_TABLE_REG"
        },
        "sensitive.privilege_mode_sel_lock": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "privilege_mode_sel_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "privilege_mode_sel_lock"
                }
            ],
            "id": "sensitive.privilege_mode_sel_lock",
            "name": "privilege_mode_sel_lock",
            "offset": "0x8",
            "doc": "SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_REG"
        },
        "sensitive.privilege_mode_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "privilege_mode_sel",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "privilege_mode_sel"
                }
            ],
            "id": "sensitive.privilege_mode_sel",
            "name": "privilege_mode_sel",
            "offset": "0xc",
            "doc": "SENSITIVE_PRIVILEGE_MODE_SEL_REG"
        },
        "sensitive.apb_peripheral_access_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_peripheral_access_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "apb_peripheral_access_lock"
                }
            ],
            "id": "sensitive.apb_peripheral_access_0",
            "name": "apb_peripheral_access_0",
            "offset": "0x10",
            "doc": "SENSITIVE_APB_PERIPHERAL_ACCESS_0_REG"
        },
        "sensitive.apb_peripheral_access_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_peripheral_access_split_burst",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "apb_peripheral_access_split_burst"
                }
            ],
            "id": "sensitive.apb_peripheral_access_1",
            "name": "apb_peripheral_access_1",
            "offset": "0x14",
            "doc": "SENSITIVE_APB_PERIPHERAL_ACCESS_1_REG"
        },
        "sensitive.internal_sram_usage_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "internal_sram_usage_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "internal_sram_usage_lock"
                }
            ],
            "id": "sensitive.internal_sram_usage_0",
            "name": "internal_sram_usage_0",
            "offset": "0x18",
            "doc": "SENSITIVE_INTERNAL_SRAM_USAGE_0_REG"
        },
        "sensitive.internal_sram_usage_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "internal_sram_usage_cpu_sram",
                    "lsb": 1,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "internal_sram_usage_cpu_sram"
                },
                {
                    "name": "internal_sram_usage_cpu_cache",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "internal_sram_usage_cpu_cache"
                }
            ],
            "id": "sensitive.internal_sram_usage_1",
            "name": "internal_sram_usage_1",
            "offset": "0x1c",
            "doc": "SENSITIVE_INTERNAL_SRAM_USAGE_1_REG"
        },
        "sensitive.internal_sram_usage_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "internal_sram_alloc_mac_dump",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "internal_sram_alloc_mac_dump"
                },
                {
                    "name": "internal_sram_usage_mac_dump_sram",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "internal_sram_usage_mac_dump_sram"
                }
            ],
            "id": "sensitive.internal_sram_usage_3",
            "name": "internal_sram_usage_3",
            "offset": "0x20",
            "doc": "SENSITIVE_INTERNAL_SRAM_USAGE_3_REG"
        },
        "sensitive.internal_sram_usage_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "internal_sram_usage_log_sram",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "internal_sram_usage_log_sram"
                }
            ],
            "id": "sensitive.internal_sram_usage_4",
            "name": "internal_sram_usage_4",
            "offset": "0x24",
            "doc": "SENSITIVE_INTERNAL_SRAM_USAGE_4_REG"
        },
        "sensitive.cache_tag_access_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_tag_access_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cache_tag_access_lock"
                }
            ],
            "id": "sensitive.cache_tag_access_0",
            "name": "cache_tag_access_0",
            "offset": "0x28",
            "doc": "SENSITIVE_CACHE_TAG_ACCESS_0_REG"
        },
        "sensitive.cache_tag_access_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pro_d_tag_wr_acs",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_d_tag_wr_acs"
                },
                {
                    "name": "pro_d_tag_rd_acs",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_d_tag_rd_acs"
                },
                {
                    "name": "pro_i_tag_wr_acs",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_i_tag_wr_acs"
                },
                {
                    "name": "pro_i_tag_rd_acs",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_i_tag_rd_acs"
                }
            ],
            "id": "sensitive.cache_tag_access_1",
            "name": "cache_tag_access_1",
            "offset": "0x2c",
            "doc": "SENSITIVE_CACHE_TAG_ACCESS_1_REG"
        },
        "sensitive.cache_mmu_access_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_mmu_access_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "cache_mmu_access_lock"
                }
            ],
            "id": "sensitive.cache_mmu_access_0",
            "name": "cache_mmu_access_0",
            "offset": "0x30",
            "doc": "SENSITIVE_CACHE_MMU_ACCESS_0_REG"
        },
        "sensitive.cache_mmu_access_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pro_mmu_wr_acs",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_mmu_wr_acs"
                },
                {
                    "name": "pro_mmu_rd_acs",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "pro_mmu_rd_acs"
                }
            ],
            "id": "sensitive.cache_mmu_access_1",
            "name": "cache_mmu_access_1",
            "offset": "0x34",
            "doc": "SENSITIVE_CACHE_MMU_ACCESS_1_REG"
        },
        "sensitive.dma_apbperi_spi2_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_spi2_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_spi2_pms_constrain_0",
            "name": "dma_apbperi_spi2_pms_constrain_0",
            "offset": "0x38",
            "doc": "SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_spi2_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_spi2_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_spi2_pms_constrain_1",
            "name": "dma_apbperi_spi2_pms_constrain_1",
            "offset": "0x3c",
            "doc": "SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_uchi0_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_uchi0_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_uchi0_pms_constrain_0",
            "name": "dma_apbperi_uchi0_pms_constrain_0",
            "offset": "0x40",
            "doc": "SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_uchi0_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_uchi0_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_uchi0_pms_constrain_1",
            "name": "dma_apbperi_uchi0_pms_constrain_1",
            "offset": "0x44",
            "doc": "SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_i2s0_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_i2s0_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_i2s0_pms_constrain_0",
            "name": "dma_apbperi_i2s0_pms_constrain_0",
            "offset": "0x48",
            "doc": "SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_i2s0_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_i2s0_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_i2s0_pms_constrain_1",
            "name": "dma_apbperi_i2s0_pms_constrain_1",
            "offset": "0x4c",
            "doc": "SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_mac_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_mac_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_mac_pms_constrain_0",
            "name": "dma_apbperi_mac_pms_constrain_0",
            "offset": "0x50",
            "doc": "SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_mac_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_mac_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_mac_pms_constrain_1",
            "name": "dma_apbperi_mac_pms_constrain_1",
            "offset": "0x54",
            "doc": "SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_backup_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_backup_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_backup_pms_constrain_0",
            "name": "dma_apbperi_backup_pms_constrain_0",
            "offset": "0x58",
            "doc": "SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_backup_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_backup_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_backup_pms_constrain_1",
            "name": "dma_apbperi_backup_pms_constrain_1",
            "offset": "0x5c",
            "doc": "SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_lc_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_lc_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_lc_pms_constrain_0",
            "name": "dma_apbperi_lc_pms_constrain_0",
            "offset": "0x60",
            "doc": "SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_lc_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_lc_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_lc_pms_constrain_1",
            "name": "dma_apbperi_lc_pms_constrain_1",
            "offset": "0x64",
            "doc": "SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_aes_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_aes_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_aes_pms_constrain_0",
            "name": "dma_apbperi_aes_pms_constrain_0",
            "offset": "0x68",
            "doc": "SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_aes_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_aes_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_aes_pms_constrain_1",
            "name": "dma_apbperi_aes_pms_constrain_1",
            "offset": "0x6c",
            "doc": "SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_sha_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_sha_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_sha_pms_constrain_0",
            "name": "dma_apbperi_sha_pms_constrain_0",
            "offset": "0x70",
            "doc": "SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_sha_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_sha_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_sha_pms_constrain_1",
            "name": "dma_apbperi_sha_pms_constrain_1",
            "offset": "0x74",
            "doc": "SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_adc_dac_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_adc_dac_pms_constrain_0",
            "name": "dma_apbperi_adc_dac_pms_constrain_0",
            "offset": "0x78",
            "doc": "SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.dma_apbperi_adc_dac_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "dma_apbperi_adc_dac_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.dma_apbperi_adc_dac_pms_constrain_1",
            "name": "dma_apbperi_adc_dac_pms_constrain_1",
            "offset": "0x7c",
            "doc": "SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.dma_apbperi_pms_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_pms_monitor_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_lock"
                }
            ],
            "id": "sensitive.dma_apbperi_pms_monitor_0",
            "name": "dma_apbperi_pms_monitor_0",
            "offset": "0x80",
            "doc": "SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_REG"
        },
        "sensitive.dma_apbperi_pms_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "dma_apbperi_pms_monitor_violate_en"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "dma_apbperi_pms_monitor_violate_clr"
                }
            ],
            "id": "sensitive.dma_apbperi_pms_monitor_1",
            "name": "dma_apbperi_pms_monitor_1",
            "offset": "0x84",
            "doc": "SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_REG"
        },
        "sensitive.dma_apbperi_pms_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_status_addr",
                    "lsb": 3,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_violate_status_addr"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_status_world",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_violate_status_world"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_violate_intr"
                }
            ],
            "id": "sensitive.dma_apbperi_pms_monitor_2",
            "name": "dma_apbperi_pms_monitor_2",
            "offset": "0x88",
            "doc": "SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_REG"
        },
        "sensitive.dma_apbperi_pms_monitor_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_status_byteen",
                    "lsb": 1,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_violate_status_byteen"
                },
                {
                    "name": "dma_apbperi_pms_monitor_violate_status_wr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "dma_apbperi_pms_monitor_violate_status_wr"
                }
            ],
            "id": "sensitive.dma_apbperi_pms_monitor_3",
            "name": "dma_apbperi_pms_monitor_3",
            "offset": "0x8c",
            "doc": "SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_dram0_dma_split_line_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_dram0_dma_split_line_constrain_lock"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_0",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_0",
            "offset": "0x90",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_dram0_dma_sram_splitaddr",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_dram0_dma_sram_splitaddr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_dram0_dma_sram_category_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_dram0_dma_sram_category_2"
                },
                {
                    "name": "core_x_iram0_dram0_dma_sram_category_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_dram0_dma_sram_category_1"
                },
                {
                    "name": "core_x_iram0_dram0_dma_sram_category_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_dram0_dma_sram_category_0"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_1",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_1",
            "offset": "0x94",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_sram_line_0_splitaddr",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_0_splitaddr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_sram_line_0_category_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_0_category_2"
                },
                {
                    "name": "core_x_iram0_sram_line_0_category_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_0_category_1"
                },
                {
                    "name": "core_x_iram0_sram_line_0_category_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_0_category_0"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_2",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_2",
            "offset": "0x98",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_sram_line_1_splitaddr",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_1_splitaddr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_sram_line_1_category_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_1_category_2"
                },
                {
                    "name": "core_x_iram0_sram_line_1_category_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_1_category_1"
                },
                {
                    "name": "core_x_iram0_sram_line_1_category_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_sram_line_1_category_0"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_3",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_3",
            "offset": "0x9c",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_0_splitaddr",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_0_splitaddr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_0_category_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_0_category_2"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_0_category_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_0_category_1"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_0_category_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_0_category_0"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_4",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_4",
            "offset": "0xa0",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_REG"
        },
        "sensitive.core_x_iram0_dram0_dma_split_line_constrain_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_1_splitaddr",
                    "lsb": 14,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_1_splitaddr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_1_category_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_1_category_2"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_1_category_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_1_category_1"
                },
                {
                    "name": "core_x_dram0_dma_sram_line_1_category_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_dma_sram_line_1_category_0"
                }
            ],
            "id": "sensitive.core_x_iram0_dram0_dma_split_line_constrain_5",
            "name": "core_x_iram0_dram0_dma_split_line_constrain_5",
            "offset": "0xa4",
            "doc": "SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_REG"
        },
        "sensitive.core_x_iram0_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_iram0_pms_constrain_lock"
                }
            ],
            "id": "sensitive.core_x_iram0_pms_constrain_0",
            "name": "core_x_iram0_pms_constrain_0",
            "offset": "0xa8",
            "doc": "SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.core_x_iram0_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_pms_constrain_rom_world_1_pms",
                    "lsb": 18,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_rom_world_1_pms"
                },
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_1_cachedataarray_pms_0",
                    "lsb": 12,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_1_cachedataarray_pms_0"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_1_pms_3",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_1_pms_2",
                    "lsb": 6,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_1_pms_1",
                    "lsb": 3,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_1_pms_0",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_1_pms_0"
                }
            ],
            "id": "sensitive.core_x_iram0_pms_constrain_1",
            "name": "core_x_iram0_pms_constrain_1",
            "offset": "0xac",
            "doc": "SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.core_x_iram0_pms_constrain_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_pms_constrain_rom_world_0_pms",
                    "lsb": 18,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_rom_world_0_pms"
                },
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_0_cachedataarray_pms_0",
                    "lsb": 12,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_0_cachedataarray_pms_0"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_0_pms_3",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_0_pms_2",
                    "lsb": 6,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_0_pms_1",
                    "lsb": 3,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "core_x_iram0_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_x_iram0_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.core_x_iram0_pms_constrain_2",
            "name": "core_x_iram0_pms_constrain_2",
            "offset": "0xb0",
            "doc": "SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_REG"
        },
        "sensitive.core_0_iram0_pms_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_pms_monitor_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_lock"
                }
            ],
            "id": "sensitive.core_0_iram0_pms_monitor_0",
            "name": "core_0_iram0_pms_monitor_0",
            "offset": "0xb4",
            "doc": "SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_REG"
        },
        "sensitive.core_0_iram0_pms_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_iram0_pms_monitor_violate_en"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_iram0_pms_monitor_violate_clr"
                }
            ],
            "id": "sensitive.core_0_iram0_pms_monitor_1",
            "name": "core_0_iram0_pms_monitor_1",
            "offset": "0xb8",
            "doc": "SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_REG"
        },
        "sensitive.core_0_iram0_pms_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_status_addr",
                    "lsb": 5,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_violate_status_addr"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_status_world",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_violate_status_world"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_status_loadstore",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_violate_status_loadstore"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_status_wr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_violate_status_wr"
                },
                {
                    "name": "core_0_iram0_pms_monitor_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_iram0_pms_monitor_violate_intr"
                }
            ],
            "id": "sensitive.core_0_iram0_pms_monitor_2",
            "name": "core_0_iram0_pms_monitor_2",
            "offset": "0xbc",
            "doc": "SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_REG"
        },
        "sensitive.core_x_dram0_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_x_dram0_pms_constrain_lock"
                }
            ],
            "id": "sensitive.core_x_dram0_pms_constrain_0",
            "name": "core_x_dram0_pms_constrain_0",
            "offset": "0xc0",
            "doc": "SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.core_x_dram0_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_pms_constrain_rom_world_1_pms",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_rom_world_1_pms"
                },
                {
                    "name": "core_x_dram0_pms_constrain_rom_world_0_pms",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_rom_world_0_pms"
                },
                {
                    "name": "rsvd1",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_1_pms_3",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_1_pms_3"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_1_pms_2",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_1_pms_2"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_1_pms_1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_1_pms_1"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_1_pms_0",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_1_pms_0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_0_pms_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_0_pms_3"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_0_pms_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_0_pms_2"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_0_pms_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_0_pms_1"
                },
                {
                    "name": "core_x_dram0_pms_constrain_sram_world_0_pms_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_x_dram0_pms_constrain_sram_world_0_pms_0"
                }
            ],
            "id": "sensitive.core_x_dram0_pms_constrain_1",
            "name": "core_x_dram0_pms_constrain_1",
            "offset": "0xc4",
            "doc": "SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.core_0_dram0_pms_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_pms_monitor_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_lock"
                }
            ],
            "id": "sensitive.core_0_dram0_pms_monitor_0",
            "name": "core_0_dram0_pms_monitor_0",
            "offset": "0xc8",
            "doc": "SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_REG"
        },
        "sensitive.core_0_dram0_pms_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_dram0_pms_monitor_violate_en"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_dram0_pms_monitor_violate_clr"
                }
            ],
            "id": "sensitive.core_0_dram0_pms_monitor_1",
            "name": "core_0_dram0_pms_monitor_1",
            "offset": "0xcc",
            "doc": "SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_REG"
        },
        "sensitive.core_0_dram0_pms_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_status_addr",
                    "lsb": 4,
                    "nbits": 24,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_status_addr"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_status_world",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_status_world"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_status_lock",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_status_lock"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_intr"
                }
            ],
            "id": "sensitive.core_0_dram0_pms_monitor_2",
            "name": "core_0_dram0_pms_monitor_2",
            "offset": "0xd0",
            "doc": "SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_REG"
        },
        "sensitive.core_0_dram0_pms_monitor_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_status_byteen",
                    "lsb": 1,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_status_byteen"
                },
                {
                    "name": "core_0_dram0_pms_monitor_violate_status_wr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_dram0_pms_monitor_violate_status_wr"
                }
            ],
            "id": "sensitive.core_0_dram0_pms_monitor_3",
            "name": "core_0_dram0_pms_monitor_3",
            "offset": "0xd4",
            "doc": "SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_REG"
        },
        "sensitive.core_0_pif_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_0_pif_pms_constrain_lock"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_0",
            "name": "core_0_pif_pms_constrain_0",
            "offset": "0xd8",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.core_0_pif_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_0_uart1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_uart1"
                },
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_i2c",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_i2c"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_misc",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_misc"
                },
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_wdg",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_wdg"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_io_mux",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_io_mux"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_rtc",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_rtc"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_timer",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_timer"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_fe",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_fe"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_fe2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_fe2"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_gpio",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_gpio"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_g0spi_0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_g0spi_0"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_g0spi_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_g0spi_1"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_uart",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_uart"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_1",
            "name": "core_0_pif_pms_constrain_1",
            "offset": "0xdc",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.core_0_pif_pms_constrain_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_0_systimer",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_systimer"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_timergroup1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_timergroup1"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_timergroup",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_timergroup"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_bb",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_bb"
                },
                {
                    "name": "rsvd3",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_ledc",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_ledc"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_rmt",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_rmt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_uhci0",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_uhci0"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_i2c_ext0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_i2c_ext0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_bt",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_bt"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_2",
            "name": "core_0_pif_pms_constrain_2",
            "offset": "0xe0",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_REG"
        },
        "sensitive.core_0_pif_pms_constrain_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_pwr",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_pwr"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_wifimac",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_wifimac"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_rwbt",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_rwbt"
                },
                {
                    "name": "rsvd3",
                    "lsb": 16,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_i2s1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_i2s1"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_can",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_can"
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_apb_ctrl",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_apb_ctrl"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_spi_2",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_spi_2"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_3",
            "name": "core_0_pif_pms_constrain_3",
            "offset": "0xe4",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_REG"
        },
        "sensitive.core_0_pif_pms_constrain_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_0_world_controller",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_world_controller"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_dio",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_dio"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_ad",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_ad"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_cache_config",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_cache_config"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_dma_copy",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_dma_copy"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_interrupt",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_interrupt"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_sensitive",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_sensitive"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_system",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_system"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_usb_device",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_usb_device"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_bt_pwr",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_bt_pwr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_apb_adc",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_apb_adc"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_crypto_dma",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_crypto_dma"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_crypto_peri",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_crypto_peri"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_0_usb_wrap",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_0_usb_wrap"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_4",
            "name": "core_0_pif_pms_constrain_4",
            "offset": "0xe8",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_REG"
        },
        "sensitive.core_0_pif_pms_constrain_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_1_uart1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_uart1"
                },
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_i2c",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_i2c"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_misc",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_misc"
                },
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_wdg",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_wdg"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_io_mux",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_io_mux"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_rtc",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_rtc"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_timer",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_timer"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_fe",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_fe"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_fe2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_fe2"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_gpio",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_gpio"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_g0spi_0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_g0spi_0"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_g0spi_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_g0spi_1"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_uart",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_uart"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_5",
            "name": "core_0_pif_pms_constrain_5",
            "offset": "0xec",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_REG"
        },
        "sensitive.core_0_pif_pms_constrain_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_1_systimer",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_systimer"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_timergroup1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_timergroup1"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_timergroup",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_timergroup"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_bb",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_bb"
                },
                {
                    "name": "rsvd3",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_ledc",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_ledc"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_rmt",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_rmt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_uhci0",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_uhci0"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_i2c_ext0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_i2c_ext0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_bt",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_bt"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_6",
            "name": "core_0_pif_pms_constrain_6",
            "offset": "0xf0",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_REG"
        },
        "sensitive.core_0_pif_pms_constrain_7": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_pwr",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_pwr"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_wifimac",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_wifimac"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_rwbt",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_rwbt"
                },
                {
                    "name": "rsvd3",
                    "lsb": 16,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_i2s1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_i2s1"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_can",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_can"
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_apb_ctrl",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_apb_ctrl"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_spi_2",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_spi_2"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_7",
            "name": "core_0_pif_pms_constrain_7",
            "offset": "0xf4",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_REG"
        },
        "sensitive.core_0_pif_pms_constrain_8": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_constrain_world_1_world_controller",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_world_controller"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_dio",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_dio"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_ad",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_ad"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_cache_config",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_cache_config"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_dma_copy",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_dma_copy"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_interrupt",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_interrupt"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_sensitive",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_sensitive"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_system",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_system"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_usb_device",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_usb_device"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_bt_pwr",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_bt_pwr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_apb_adc",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_apb_adc"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_crypto_dma",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_crypto_dma"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_crypto_peri",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_crypto_peri"
                },
                {
                    "name": "core_0_pif_pms_constrain_world_1_usb_wrap",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "core_0_pif_pms_constrain_world_1_usb_wrap"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_8",
            "name": "core_0_pif_pms_constrain_8",
            "offset": "0xf8",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_REG"
        },
        "sensitive.core_0_pif_pms_constrain_9": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_spltaddr_world_1",
                    "lsb": 11,
                    "nbits": 11,
                    "access": "read-write",
                    "reset": "2047",
                    "doc": "core_0_pif_pms_constrain_rtcfast_spltaddr_world_1"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_spltaddr_world_0",
                    "lsb": 0,
                    "nbits": 11,
                    "access": "read-write",
                    "reset": "2047",
                    "doc": "core_0_pif_pms_constrain_rtcfast_spltaddr_world_0"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_9",
            "name": "core_0_pif_pms_constrain_9",
            "offset": "0xfc",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_REG"
        },
        "sensitive.core_0_pif_pms_constrain_10": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_world_1_h",
                    "lsb": 9,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_0_pif_pms_constrain_rtcfast_world_1_h"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_world_1_l",
                    "lsb": 6,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_0_pif_pms_constrain_rtcfast_world_1_l"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_world_0_h",
                    "lsb": 3,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_0_pif_pms_constrain_rtcfast_world_0_h"
                },
                {
                    "name": "core_0_pif_pms_constrain_rtcfast_world_0_l",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "core_0_pif_pms_constrain_rtcfast_world_0_l"
                }
            ],
            "id": "sensitive.core_0_pif_pms_constrain_10",
            "name": "core_0_pif_pms_constrain_10",
            "offset": "0x100",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_REG"
        },
        "sensitive.region_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_lock"
                }
            ],
            "id": "sensitive.region_pms_constrain_0",
            "name": "region_pms_constrain_0",
            "offset": "0x104",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.region_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_world_0_area_6",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_6"
                },
                {
                    "name": "region_pms_constrain_world_0_area_5",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_5"
                },
                {
                    "name": "region_pms_constrain_world_0_area_4",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_4"
                },
                {
                    "name": "region_pms_constrain_world_0_area_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_3"
                },
                {
                    "name": "region_pms_constrain_world_0_area_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_2"
                },
                {
                    "name": "region_pms_constrain_world_0_area_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_1"
                },
                {
                    "name": "region_pms_constrain_world_0_area_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_0_area_0"
                }
            ],
            "id": "sensitive.region_pms_constrain_1",
            "name": "region_pms_constrain_1",
            "offset": "0x108",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.region_pms_constrain_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 14,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_world_1_area_6",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_6"
                },
                {
                    "name": "region_pms_constrain_world_1_area_5",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_5"
                },
                {
                    "name": "region_pms_constrain_world_1_area_4",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_4"
                },
                {
                    "name": "region_pms_constrain_world_1_area_3",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_3"
                },
                {
                    "name": "region_pms_constrain_world_1_area_2",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_2"
                },
                {
                    "name": "region_pms_constrain_world_1_area_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_1"
                },
                {
                    "name": "region_pms_constrain_world_1_area_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "region_pms_constrain_world_1_area_0"
                }
            ],
            "id": "sensitive.region_pms_constrain_2",
            "name": "region_pms_constrain_2",
            "offset": "0x10c",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_2_REG"
        },
        "sensitive.region_pms_constrain_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_0",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_0"
                }
            ],
            "id": "sensitive.region_pms_constrain_3",
            "name": "region_pms_constrain_3",
            "offset": "0x110",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_3_REG"
        },
        "sensitive.region_pms_constrain_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_1",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_1"
                }
            ],
            "id": "sensitive.region_pms_constrain_4",
            "name": "region_pms_constrain_4",
            "offset": "0x114",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_4_REG"
        },
        "sensitive.region_pms_constrain_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_2",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_2"
                }
            ],
            "id": "sensitive.region_pms_constrain_5",
            "name": "region_pms_constrain_5",
            "offset": "0x118",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_5_REG"
        },
        "sensitive.region_pms_constrain_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_3",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_3"
                }
            ],
            "id": "sensitive.region_pms_constrain_6",
            "name": "region_pms_constrain_6",
            "offset": "0x11c",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_6_REG"
        },
        "sensitive.region_pms_constrain_7": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_4",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_4"
                }
            ],
            "id": "sensitive.region_pms_constrain_7",
            "name": "region_pms_constrain_7",
            "offset": "0x120",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_7_REG"
        },
        "sensitive.region_pms_constrain_8": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_5",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_5"
                }
            ],
            "id": "sensitive.region_pms_constrain_8",
            "name": "region_pms_constrain_8",
            "offset": "0x124",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_8_REG"
        },
        "sensitive.region_pms_constrain_9": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_6",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_6"
                }
            ],
            "id": "sensitive.region_pms_constrain_9",
            "name": "region_pms_constrain_9",
            "offset": "0x128",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_9_REG"
        },
        "sensitive.region_pms_constrain_10": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "region_pms_constrain_addr_7",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "region_pms_constrain_addr_7"
                }
            ],
            "id": "sensitive.region_pms_constrain_10",
            "name": "region_pms_constrain_10",
            "offset": "0x12c",
            "doc": "SENSITIVE_REGION_PMS_CONSTRAIN_10_REG"
        },
        "sensitive.core_0_pif_pms_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_lock"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_0",
            "name": "core_0_pif_pms_monitor_0",
            "offset": "0x130",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_REG"
        },
        "sensitive.core_0_pif_pms_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_pif_pms_monitor_violate_en"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_pif_pms_monitor_violate_clr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_1",
            "name": "core_0_pif_pms_monitor_1",
            "offset": "0x134",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_REG"
        },
        "sensitive.core_0_pif_pms_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_status_hworld",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_status_hworld"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_status_hwrite",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_status_hwrite"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_status_hsize",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_status_hsize"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_status_hport_0",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_status_hport_0"
                },
                {
                    "name": "core_0_pif_pms_monitor_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_intr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_2",
            "name": "core_0_pif_pms_monitor_2",
            "offset": "0x138",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_REG"
        },
        "sensitive.core_0_pif_pms_monitor_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_monitor_violate_status_haddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_violate_status_haddr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_3",
            "name": "core_0_pif_pms_monitor_3",
            "offset": "0x13c",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_3_REG"
        },
        "sensitive.core_0_pif_pms_monitor_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_en"
                },
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_clr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_4",
            "name": "core_0_pif_pms_monitor_4",
            "offset": "0x140",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_REG"
        },
        "sensitive.core_0_pif_pms_monitor_5": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_status_hworld",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_status_hworld"
                },
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_status_hsize",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_status_hsize"
                },
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_intr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_5",
            "name": "core_0_pif_pms_monitor_5",
            "offset": "0x144",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_REG"
        },
        "sensitive.core_0_pif_pms_monitor_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "core_0_pif_pms_monitor_nonword_violate_status_haddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "core_0_pif_pms_monitor_nonword_violate_status_haddr"
                }
            ],
            "id": "sensitive.core_0_pif_pms_monitor_6",
            "name": "core_0_pif_pms_monitor_6",
            "offset": "0x148",
            "doc": "SENSITIVE_CORE_0_PIF_PMS_MONITOR_6_REG"
        },
        "sensitive.backup_bus_pms_constrain_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "backup_bus_pms_constrain_lock"
                }
            ],
            "id": "sensitive.backup_bus_pms_constrain_0",
            "name": "backup_bus_pms_constrain_0",
            "offset": "0x14c",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_REG"
        },
        "sensitive.backup_bus_pms_constrain_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "backup_bus_pms_constrain_uart1",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_uart1"
                },
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_i2c",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_i2c"
                },
                {
                    "name": "backup_bus_pms_constrain_misc",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_misc"
                },
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_wdg",
                    "lsb": 18,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_wdg"
                },
                {
                    "name": "backup_bus_pms_constrain_io_mux",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_io_mux"
                },
                {
                    "name": "backup_bus_pms_constrain_rtc",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_rtc"
                },
                {
                    "name": "backup_bus_pms_constrain_timer",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_timer"
                },
                {
                    "name": "backup_bus_pms_constrain_fe",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_fe"
                },
                {
                    "name": "backup_bus_pms_constrain_fe2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_fe2"
                },
                {
                    "name": "backup_bus_pms_constrain_gpio",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_gpio"
                },
                {
                    "name": "backup_bus_pms_constrain_g0spi_0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_g0spi_0"
                },
                {
                    "name": "backup_bus_pms_constrain_g0spi_1",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_g0spi_1"
                },
                {
                    "name": "backup_bus_pms_constrain_uart",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_uart"
                }
            ],
            "id": "sensitive.backup_bus_pms_constrain_1",
            "name": "backup_bus_pms_constrain_1",
            "offset": "0x150",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_REG"
        },
        "sensitive.backup_bus_pms_constrain_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "backup_bus_pms_constrain_systimer",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_systimer"
                },
                {
                    "name": "backup_bus_pms_constrain_timergroup1",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_timergroup1"
                },
                {
                    "name": "backup_bus_pms_constrain_timergroup",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_timergroup"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_bb",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_bb"
                },
                {
                    "name": "rsvd3",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_ledc",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_ledc"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_rmt",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_rmt"
                },
                {
                    "name": "rsvd1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_uhci0",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_uhci0"
                },
                {
                    "name": "backup_bus_pms_constrain_i2c_ext0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_i2c_ext0"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_bt",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_bt"
                }
            ],
            "id": "sensitive.backup_bus_pms_constrain_2",
            "name": "backup_bus_pms_constrain_2",
            "offset": "0x154",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_REG"
        },
        "sensitive.backup_bus_pms_constrain_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_pwr",
                    "lsb": 28,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_pwr"
                },
                {
                    "name": "backup_bus_pms_constrain_wifimac",
                    "lsb": 26,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_wifimac"
                },
                {
                    "name": "rsvd4",
                    "lsb": 24,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_rwbt",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_rwbt"
                },
                {
                    "name": "rsvd3",
                    "lsb": 16,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_i2s1",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_i2s1"
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_can",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_can"
                },
                {
                    "name": "rsvd1",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_apb_ctrl",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_apb_ctrl"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_spi_2",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_spi_2"
                }
            ],
            "id": "sensitive.backup_bus_pms_constrain_3",
            "name": "backup_bus_pms_constrain_3",
            "offset": "0x158",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_REG"
        },
        "sensitive.backup_bus_pms_constrain_4": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_usb_device",
                    "lsb": 14,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_usb_device"
                },
                {
                    "name": "backup_bus_pms_constrain_bt_pwr",
                    "lsb": 12,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_bt_pwr"
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_constrain_apb_adc",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_apb_adc"
                },
                {
                    "name": "backup_bus_pms_constrain_crypto_dma",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_crypto_dma"
                },
                {
                    "name": "backup_bus_pms_constrain_crypto_peri",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_crypto_peri"
                },
                {
                    "name": "backup_bus_pms_constrain_usb_wrap",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "backup_bus_pms_constrain_usb_wrap"
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "sensitive.backup_bus_pms_constrain_4",
            "name": "backup_bus_pms_constrain_4",
            "offset": "0x15c",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_REG"
        },
        "sensitive.backup_bus_pms_monitor_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_monitor_lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_lock"
                }
            ],
            "id": "sensitive.backup_bus_pms_monitor_0",
            "name": "backup_bus_pms_monitor_0",
            "offset": "0x160",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_REG"
        },
        "sensitive.backup_bus_pms_monitor_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "backup_bus_pms_monitor_violate_en"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "backup_bus_pms_monitor_violate_clr"
                }
            ],
            "id": "sensitive.backup_bus_pms_monitor_1",
            "name": "backup_bus_pms_monitor_1",
            "offset": "0x164",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_REG"
        },
        "sensitive.backup_bus_pms_monitor_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_status_hwrite",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_violate_status_hwrite"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_status_hsize",
                    "lsb": 3,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_violate_status_hsize"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_status_htrans",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_violate_status_htrans"
                },
                {
                    "name": "backup_bus_pms_monitor_violate_intr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_violate_intr"
                }
            ],
            "id": "sensitive.backup_bus_pms_monitor_2",
            "name": "backup_bus_pms_monitor_2",
            "offset": "0x168",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_REG"
        },
        "sensitive.backup_bus_pms_monitor_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "backup_bus_pms_monitor_violate_haddr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "backup_bus_pms_monitor_violate_haddr"
                }
            ],
            "id": "sensitive.backup_bus_pms_monitor_3",
            "name": "backup_bus_pms_monitor_3",
            "offset": "0x16c",
            "doc": "SENSITIVE_BACKUP_BUS_PMS_MONITOR_3_REG"
        },
        "sensitive.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "clk_en"
                }
            ],
            "id": "sensitive.clock_gate",
            "name": "clock_gate",
            "offset": "0x170",
            "doc": "SENSITIVE_CLOCK_GATE_REG"
        },
        "sensitive.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33620480",
                    "doc": "reg_date"
                }
            ],
            "id": "sensitive.date",
            "name": "date",
            "offset": "0xffc",
            "doc": "SENSITIVE_DATE_REG"
        },
        "sha": {
            "type": "blk",
            "children": [
                "sha.mode",
                "sha.t_string",
                "sha.t_length",
                "sha.dma_block_num",
                "sha.start",
                "sha.continue",
                "sha.busy",
                "sha.dma_start",
                "sha.dma_continue",
                "sha.clear_irq",
                "sha.irq_ena",
                "sha.date",
                "sha.h_mem0",
                "sha.h_mem1",
                "sha.h_mem2",
                "sha.h_mem3",
                "sha.h_mem4",
                "sha.h_mem5",
                "sha.h_mem6",
                "sha.h_mem7",
                "sha.h_mem8",
                "sha.h_mem9",
                "sha.h_mem10",
                "sha.h_mem11",
                "sha.h_mem12",
                "sha.h_mem13",
                "sha.h_mem14",
                "sha.h_mem15",
                "sha.h_mem16",
                "sha.h_mem17",
                "sha.h_mem18",
                "sha.h_mem19",
                "sha.h_mem20",
                "sha.h_mem21",
                "sha.h_mem22",
                "sha.h_mem23",
                "sha.h_mem24",
                "sha.h_mem25",
                "sha.h_mem26",
                "sha.h_mem27",
                "sha.h_mem28",
                "sha.h_mem29",
                "sha.h_mem30",
                "sha.h_mem31",
                "sha.h_mem32",
                "sha.h_mem33",
                "sha.h_mem34",
                "sha.h_mem35",
                "sha.h_mem36",
                "sha.h_mem37",
                "sha.h_mem38",
                "sha.h_mem39",
                "sha.h_mem40",
                "sha.h_mem41",
                "sha.h_mem42",
                "sha.h_mem43",
                "sha.h_mem44",
                "sha.h_mem45",
                "sha.h_mem46",
                "sha.h_mem47",
                "sha.h_mem48",
                "sha.h_mem49",
                "sha.h_mem50",
                "sha.h_mem51",
                "sha.h_mem52",
                "sha.h_mem53",
                "sha.h_mem54",
                "sha.h_mem55",
                "sha.h_mem56",
                "sha.h_mem57",
                "sha.h_mem58",
                "sha.h_mem59",
                "sha.h_mem60",
                "sha.h_mem61",
                "sha.h_mem62",
                "sha.h_mem63",
                "sha.m_mem0",
                "sha.m_mem1",
                "sha.m_mem2",
                "sha.m_mem3",
                "sha.m_mem4",
                "sha.m_mem5",
                "sha.m_mem6",
                "sha.m_mem7",
                "sha.m_mem8",
                "sha.m_mem9",
                "sha.m_mem10",
                "sha.m_mem11",
                "sha.m_mem12",
                "sha.m_mem13",
                "sha.m_mem14",
                "sha.m_mem15",
                "sha.m_mem16",
                "sha.m_mem17",
                "sha.m_mem18",
                "sha.m_mem19",
                "sha.m_mem20",
                "sha.m_mem21",
                "sha.m_mem22",
                "sha.m_mem23",
                "sha.m_mem24",
                "sha.m_mem25",
                "sha.m_mem26",
                "sha.m_mem27",
                "sha.m_mem28",
                "sha.m_mem29",
                "sha.m_mem30",
                "sha.m_mem31",
                "sha.m_mem32",
                "sha.m_mem33",
                "sha.m_mem34",
                "sha.m_mem35",
                "sha.m_mem36",
                "sha.m_mem37",
                "sha.m_mem38",
                "sha.m_mem39",
                "sha.m_mem40",
                "sha.m_mem41",
                "sha.m_mem42",
                "sha.m_mem43",
                "sha.m_mem44",
                "sha.m_mem45",
                "sha.m_mem46",
                "sha.m_mem47",
                "sha.m_mem48",
                "sha.m_mem49",
                "sha.m_mem50",
                "sha.m_mem51",
                "sha.m_mem52",
                "sha.m_mem53",
                "sha.m_mem54",
                "sha.m_mem55",
                "sha.m_mem56",
                "sha.m_mem57",
                "sha.m_mem58",
                "sha.m_mem59",
                "sha.m_mem60",
                "sha.m_mem61",
                "sha.m_mem62",
                "sha.m_mem63"
            ],
            "id": "sha",
            "name": "sha",
            "offset": "0x6003b000",
            "doc": "SHA (Secure Hash Algorithm) Accelerator"
        },
        "sha.mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mode",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sha mode."
                }
            ],
            "id": "sha.mode",
            "name": "mode",
            "offset": "0x0",
            "doc": "Initial configuration register."
        },
        "sha.t_string": {
            "type": "reg",
            "fields": [
                {
                    "name": "t_string",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sha t_string (used if and only if mode == SHA_512/t)."
                }
            ],
            "id": "sha.t_string",
            "name": "t_string",
            "offset": "0x4",
            "doc": "SHA 512/t configuration register 0."
        },
        "sha.t_length": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "t_length",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sha t_length (used if and only if mode == SHA_512/t)."
                }
            ],
            "id": "sha.t_length",
            "name": "t_length",
            "offset": "0x8",
            "doc": "SHA 512/t configuration register 1."
        },
        "sha.dma_block_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_block_num",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Dma-sha block number."
                }
            ],
            "id": "sha.dma_block_num",
            "name": "dma_block_num",
            "offset": "0xc",
            "doc": "DMA configuration register 0."
        },
        "sha.start": {
            "type": "reg",
            "fields": [
                {
                    "name": "start",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "sha.start",
            "name": "start",
            "offset": "0x10",
            "doc": "Typical SHA configuration register 0."
        },
        "sha.continue": {
            "type": "reg",
            "fields": [
                {
                    "name": "continue",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "sha.continue",
            "name": "continue",
            "offset": "0x14",
            "doc": "Typical SHA configuration register 1."
        },
        "sha.busy": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "state",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Sha busy state. 1'b0: idle. 1'b1: busy."
                }
            ],
            "id": "sha.busy",
            "name": "busy",
            "offset": "0x18",
            "doc": "Busy register."
        },
        "sha.dma_start": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_start",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Start dma-sha."
                }
            ],
            "id": "sha.dma_start",
            "name": "dma_start",
            "offset": "0x1c",
            "doc": "DMA configuration register 1."
        },
        "sha.dma_continue": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dma_continue",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Continue dma-sha."
                }
            ],
            "id": "sha.dma_continue",
            "name": "dma_continue",
            "offset": "0x20",
            "doc": "DMA configuration register 2."
        },
        "sha.clear_irq": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clear_interrupt",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Clear sha interrupt."
                }
            ],
            "id": "sha.clear_irq",
            "name": "clear_irq",
            "offset": "0x24",
            "doc": "Interrupt clear register."
        },
        "sha.irq_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "interrupt_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sha interrupt enable register. 1'b0: disable(default). 1'b1: enable."
                }
            ],
            "id": "sha.irq_ena",
            "name": "irq_ena",
            "offset": "0x28",
            "doc": "Interrupt enable register."
        },
        "sha.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "538969622",
                    "doc": "Sha date information/ sha version information."
                }
            ],
            "id": "sha.date",
            "name": "date",
            "offset": "0x2c",
            "doc": "Date register."
        },
        "sha.h_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem0",
            "name": "h_mem0",
            "offset": "0x40",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem1",
            "name": "h_mem1",
            "offset": "0x41",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem2",
            "name": "h_mem2",
            "offset": "0x42",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem3",
            "name": "h_mem3",
            "offset": "0x43",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem4",
            "name": "h_mem4",
            "offset": "0x44",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem5",
            "name": "h_mem5",
            "offset": "0x45",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem6",
            "name": "h_mem6",
            "offset": "0x46",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem7",
            "name": "h_mem7",
            "offset": "0x47",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem8",
            "name": "h_mem8",
            "offset": "0x48",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem9",
            "name": "h_mem9",
            "offset": "0x49",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem10",
            "name": "h_mem10",
            "offset": "0x4a",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem11",
            "name": "h_mem11",
            "offset": "0x4b",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem12",
            "name": "h_mem12",
            "offset": "0x4c",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem13",
            "name": "h_mem13",
            "offset": "0x4d",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem14",
            "name": "h_mem14",
            "offset": "0x4e",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem15",
            "name": "h_mem15",
            "offset": "0x4f",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem16",
            "name": "h_mem16",
            "offset": "0x50",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem17",
            "name": "h_mem17",
            "offset": "0x51",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem18",
            "name": "h_mem18",
            "offset": "0x52",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem19",
            "name": "h_mem19",
            "offset": "0x53",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem20",
            "name": "h_mem20",
            "offset": "0x54",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem21",
            "name": "h_mem21",
            "offset": "0x55",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem22",
            "name": "h_mem22",
            "offset": "0x56",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem23",
            "name": "h_mem23",
            "offset": "0x57",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem24",
            "name": "h_mem24",
            "offset": "0x58",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem25",
            "name": "h_mem25",
            "offset": "0x59",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem26",
            "name": "h_mem26",
            "offset": "0x5a",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem27",
            "name": "h_mem27",
            "offset": "0x5b",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem28",
            "name": "h_mem28",
            "offset": "0x5c",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem29",
            "name": "h_mem29",
            "offset": "0x5d",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem30",
            "name": "h_mem30",
            "offset": "0x5e",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem31",
            "name": "h_mem31",
            "offset": "0x5f",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem32",
            "name": "h_mem32",
            "offset": "0x60",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem33",
            "name": "h_mem33",
            "offset": "0x61",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem34",
            "name": "h_mem34",
            "offset": "0x62",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem35",
            "name": "h_mem35",
            "offset": "0x63",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem36",
            "name": "h_mem36",
            "offset": "0x64",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem37",
            "name": "h_mem37",
            "offset": "0x65",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem38",
            "name": "h_mem38",
            "offset": "0x66",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem39",
            "name": "h_mem39",
            "offset": "0x67",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem40",
            "name": "h_mem40",
            "offset": "0x68",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem41",
            "name": "h_mem41",
            "offset": "0x69",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem42",
            "name": "h_mem42",
            "offset": "0x6a",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem43",
            "name": "h_mem43",
            "offset": "0x6b",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem44",
            "name": "h_mem44",
            "offset": "0x6c",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem45",
            "name": "h_mem45",
            "offset": "0x6d",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem46",
            "name": "h_mem46",
            "offset": "0x6e",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem47",
            "name": "h_mem47",
            "offset": "0x6f",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem48",
            "name": "h_mem48",
            "offset": "0x70",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem49",
            "name": "h_mem49",
            "offset": "0x71",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem50",
            "name": "h_mem50",
            "offset": "0x72",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem51",
            "name": "h_mem51",
            "offset": "0x73",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem52",
            "name": "h_mem52",
            "offset": "0x74",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem53",
            "name": "h_mem53",
            "offset": "0x75",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem54",
            "name": "h_mem54",
            "offset": "0x76",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem55",
            "name": "h_mem55",
            "offset": "0x77",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem56",
            "name": "h_mem56",
            "offset": "0x78",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem57",
            "name": "h_mem57",
            "offset": "0x79",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem58",
            "name": "h_mem58",
            "offset": "0x7a",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem59",
            "name": "h_mem59",
            "offset": "0x7b",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem60",
            "name": "h_mem60",
            "offset": "0x7c",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem61",
            "name": "h_mem61",
            "offset": "0x7d",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem62",
            "name": "h_mem62",
            "offset": "0x7e",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.h_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.h_mem63",
            "name": "h_mem63",
            "offset": "0x7f",
            "doc": "Sha H memory which contains intermediate hash or finial hash."
        },
        "sha.m_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem0",
            "name": "m_mem0",
            "offset": "0x80",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem1",
            "name": "m_mem1",
            "offset": "0x81",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem2",
            "name": "m_mem2",
            "offset": "0x82",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem3",
            "name": "m_mem3",
            "offset": "0x83",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem4",
            "name": "m_mem4",
            "offset": "0x84",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem5",
            "name": "m_mem5",
            "offset": "0x85",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem6",
            "name": "m_mem6",
            "offset": "0x86",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem7",
            "name": "m_mem7",
            "offset": "0x87",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem8",
            "name": "m_mem8",
            "offset": "0x88",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem9",
            "name": "m_mem9",
            "offset": "0x89",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem10",
            "name": "m_mem10",
            "offset": "0x8a",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem11",
            "name": "m_mem11",
            "offset": "0x8b",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem12",
            "name": "m_mem12",
            "offset": "0x8c",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem13",
            "name": "m_mem13",
            "offset": "0x8d",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem14",
            "name": "m_mem14",
            "offset": "0x8e",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem15",
            "name": "m_mem15",
            "offset": "0x8f",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem16": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem16",
            "name": "m_mem16",
            "offset": "0x90",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem17": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem17",
            "name": "m_mem17",
            "offset": "0x91",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem18": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem18",
            "name": "m_mem18",
            "offset": "0x92",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem19": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem19",
            "name": "m_mem19",
            "offset": "0x93",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem20": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem20",
            "name": "m_mem20",
            "offset": "0x94",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem21": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem21",
            "name": "m_mem21",
            "offset": "0x95",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem22": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem22",
            "name": "m_mem22",
            "offset": "0x96",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem23": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem23",
            "name": "m_mem23",
            "offset": "0x97",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem24": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem24",
            "name": "m_mem24",
            "offset": "0x98",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem25": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem25",
            "name": "m_mem25",
            "offset": "0x99",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem26": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem26",
            "name": "m_mem26",
            "offset": "0x9a",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem27": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem27",
            "name": "m_mem27",
            "offset": "0x9b",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem28": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem28",
            "name": "m_mem28",
            "offset": "0x9c",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem29": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem29",
            "name": "m_mem29",
            "offset": "0x9d",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem30": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem30",
            "name": "m_mem30",
            "offset": "0x9e",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem31": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem31",
            "name": "m_mem31",
            "offset": "0x9f",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem32": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem32",
            "name": "m_mem32",
            "offset": "0xa0",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem33": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem33",
            "name": "m_mem33",
            "offset": "0xa1",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem34": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem34",
            "name": "m_mem34",
            "offset": "0xa2",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem35": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem35",
            "name": "m_mem35",
            "offset": "0xa3",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem36": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem36",
            "name": "m_mem36",
            "offset": "0xa4",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem37": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem37",
            "name": "m_mem37",
            "offset": "0xa5",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem38": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem38",
            "name": "m_mem38",
            "offset": "0xa6",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem39": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem39",
            "name": "m_mem39",
            "offset": "0xa7",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem40": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem40",
            "name": "m_mem40",
            "offset": "0xa8",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem41": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem41",
            "name": "m_mem41",
            "offset": "0xa9",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem42": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem42",
            "name": "m_mem42",
            "offset": "0xaa",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem43": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem43",
            "name": "m_mem43",
            "offset": "0xab",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem44": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem44",
            "name": "m_mem44",
            "offset": "0xac",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem45": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem45",
            "name": "m_mem45",
            "offset": "0xad",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem46": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem46",
            "name": "m_mem46",
            "offset": "0xae",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem47": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem47",
            "name": "m_mem47",
            "offset": "0xaf",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem48": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem48",
            "name": "m_mem48",
            "offset": "0xb0",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem49": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem49",
            "name": "m_mem49",
            "offset": "0xb1",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem50": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem50",
            "name": "m_mem50",
            "offset": "0xb2",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem51": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem51",
            "name": "m_mem51",
            "offset": "0xb3",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem52": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem52",
            "name": "m_mem52",
            "offset": "0xb4",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem53": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem53",
            "name": "m_mem53",
            "offset": "0xb5",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem54": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem54",
            "name": "m_mem54",
            "offset": "0xb6",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem55": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem55",
            "name": "m_mem55",
            "offset": "0xb7",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem56": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem56",
            "name": "m_mem56",
            "offset": "0xb8",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem57": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem57",
            "name": "m_mem57",
            "offset": "0xb9",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem58": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem58",
            "name": "m_mem58",
            "offset": "0xba",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem59": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem59",
            "name": "m_mem59",
            "offset": "0xbb",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem60": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem60",
            "name": "m_mem60",
            "offset": "0xbc",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem61": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem61",
            "name": "m_mem61",
            "offset": "0xbd",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem62": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem62",
            "name": "m_mem62",
            "offset": "0xbe",
            "doc": "Sha M memory which contains message."
        },
        "sha.m_mem63": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "sha.m_mem63",
            "name": "m_mem63",
            "offset": "0xbf",
            "doc": "Sha M memory which contains message."
        },
        "spi0": {
            "type": "blk",
            "children": [
                "spi0.ctrl",
                "spi0.ctrl1",
                "spi0.ctrl2",
                "spi0.clock",
                "spi0.user",
                "spi0.user1",
                "spi0.user2",
                "spi0.rd_status",
                "spi0.misc",
                "spi0.cache_fctrl",
                "spi0.fsm",
                "spi0.timing_cali",
                "spi0.din_mode",
                "spi0.din_num",
                "spi0.dout_mode",
                "spi0.clock_gate",
                "spi0.core_clk_sel",
                "spi0.date"
            ],
            "id": "spi0",
            "name": "spi0",
            "offset": "0x60003000",
            "doc": "SPI (Serial Peripheral Interface) Controller"
        },
        "spi0.ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fread_qio",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable."
                },
                {
                    "name": "fread_dio",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable."
                },
                {
                    "name": "rsvd3",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wp",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Write protect signal output when SPI is idle.  1: output high, 0: output low."
                },
                {
                    "name": "fread_quad",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations read-data phase apply 4 signals. 1: enable 0: disable."
                },
                {
                    "name": "d_pol",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MOSI line polarity, 1: high 0, low"
                },
                {
                    "name": "q_pol",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MISO line polarity, 1: high 0, low"
                },
                {
                    "name": "rsvd2",
                    "lsb": 15,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fread_dual",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations, read-data phase apply 2 signals. 1: enable 0: disable."
                },
                {
                    "name": "fastrd_mode",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This bit enable the bits: spi_mem_fread_qio, spi_mem_fread_dio, spi_mem_fread_qout and spi_mem_fread_dout. 1: enable 0: disable."
                },
                {
                    "name": "rsvd1",
                    "lsb": 9,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fcmd_quad",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 4 signals during command phase 1:enable 0: disable"
                },
                {
                    "name": "fcmd_dual",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 2 signals during command phase 1:enable 0: disable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fdummy_out",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the dummy phase the signal level of spi is output by the spi controller."
                },
                {
                    "name": "rsvd4",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi0.ctrl",
            "name": "ctrl",
            "offset": "0x8",
            "doc": "SPI0 control register."
        },
        "spi0.ctrl1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxfifo_rst",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "SPI0 RX FIFO reset signal."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_mode",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on."
                }
            ],
            "id": "spi0.ctrl1",
            "name": "ctrl1",
            "offset": "0xc",
            "doc": "SPI0 control1 register."
        },
        "spi0.ctrl2": {
            "type": "reg",
            "fields": [
                {
                    "name": "sync_reset",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The FSM will be reset."
                },
                {
                    "name": "cs_hold_delay",
                    "lsb": 25,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "These bits are used to set the minimum CS high time tSHSL between SPI burst transfer when accesses to flash. tSHSL is (SPI_MEM_CS_HOLD_DELAY[5:0] + 1) MSPI core clock cycles."
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs_hold_time",
                    "lsb": 5,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Spi cs signal is delayed to inactive by spi clock this bits are combined with spi_mem_cs_hold bit."
                },
                {
                    "name": "cs_setup_time",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "(cycles-1) of prepare phase by spi clock this bits are combined with spi_mem_cs_setup bit."
                }
            ],
            "id": "spi0.ctrl2",
            "name": "ctrl2",
            "offset": "0x10",
            "doc": "SPI0 control2 register."
        },
        "spi0.clock": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_equ_sysclk",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit in 1-division mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clkcnt_n",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)"
                },
                {
                    "name": "clkcnt_h",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "In the master mode it must be floor((spi_mem_clkcnt_N+1)/2-1)."
                },
                {
                    "name": "clkcnt_l",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it must be equal to spi_mem_clkcnt_N."
                }
            ],
            "id": "spi0.clock",
            "name": "clock",
            "offset": "0x14",
            "doc": "SPI clock division control register."
        },
        "spi0.user": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd4",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_dummy",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the dummy phase of an operation."
                },
                {
                    "name": "rsvd2",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_dummy_idle",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi clock is disable in dummy phase when the bit is enable."
                },
                {
                    "name": "rsvd1",
                    "lsb": 10,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ck_out_edge",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the bit combined with spi_mem_mosi_delay_mode bits to set mosi signal delay mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs_setup",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable."
                },
                {
                    "name": "cs_hold",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi cs keep low when spi is in  done  phase. 1: enable 0: disable."
                },
                {
                    "name": "rsvd3",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi0.user",
            "name": "user",
            "offset": "0x18",
            "doc": "SPI0 user register."
        },
        "spi0.user1": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_addr_bitlen",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "23",
                    "doc": "The length in bits of address phase. The register value shall be (bit_num-1)."
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_dummy_cyclelen",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in spi_mem_clk cycles of dummy phase. The register value shall be (cycle_num-1)."
                }
            ],
            "id": "spi0.user1",
            "name": "user1",
            "offset": "0x1c",
            "doc": "SPI0 user1 register."
        },
        "spi0.user2": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_command_bitlen",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in bits of command phase. The register value shall be (bit_num-1)"
                },
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_command_value",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The value of  command."
                }
            ],
            "id": "spi0.user2",
            "name": "user2",
            "offset": "0x20",
            "doc": "SPI0 user2 register."
        },
        "spi0.rd_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wb_mode",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Mode bits in the flash fast read mode  it is combined with spi_mem_fastrd_mode bit."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi0.rd_status",
            "name": "rd_status",
            "offset": "0x2c",
            "doc": "SPI0 read control register."
        },
        "spi0.misc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs_keep_active",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi cs line keep low when the bit is set."
                },
                {
                    "name": "ck_idle_edge",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi clk line is high when idle     0: spi clk line is low when idle"
                },
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cspi_st_trans_end_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the interrupt of spi0_slv_st controlled transmitting is done."
                },
                {
                    "name": "cspi_st_trans_end",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to indicate the  spi0_slv_st controlled transmitting is done."
                },
                {
                    "name": "trans_end_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable the interrupt of  spi0_mst_st controlled transmitting is done."
                },
                {
                    "name": "trans_end",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to indicate the  spi0_mst_st controlled transmitting is done."
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi0.misc",
            "name": "misc",
            "offset": "0x34",
            "doc": "SPI0 misc register"
        },
        "spi0.cache_fctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "faddr_quad",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, address phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "fdout_quad",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, dout phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "fdin_quad",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, din phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "faddr_dual",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, address phase apply 2 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "fdout_dual",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "fdin_dual",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0 flash, din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "cache_flash_usr_cmd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0,  cache  read flash for user define command, 1: enable, 0:disable."
                },
                {
                    "name": "cache_usr_addr_4byte",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0,  cache  read flash with 4 bytes address, 1: enable, 0:disable."
                },
                {
                    "name": "cache_req_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI0, Cache access enable, 1: enable, 0:disable."
                }
            ],
            "id": "spi0.cache_fctrl",
            "name": "cache_fctrl",
            "offset": "0x3c",
            "doc": "SPI0 bit mode control register."
        },
        "spi0.fsm": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cspi_lock_delay_time",
                    "lsb": 7,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "4",
                    "doc": "The lock delay time of SPI0/1 arbiter by spi0_slv_st, after PER is sent by SPI1."
                },
                {
                    "name": "em_st",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The current status of SPI0 master FSM: spi0_mst_st. 0: idle state, 1:EM_CACHE_GRANT , 2: program/erase suspend state, 3: SPI0 read data state, 4: wait cache/EDMA sent data is stored in SPI0 TX FIFO, 5: SPI0 write data state."
                },
                {
                    "name": "cspi_st",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The current status of SPI0 slave FSM: spi0_slv_st. 0: idle state, 1: preparation state, 2: send command state, 3: send address state, 4: wait state, 5: read data state, 6:write data state, 7: done state, 8: read data end state."
                }
            ],
            "id": "spi0.fsm",
            "name": "fsm",
            "offset": "0x54",
            "doc": "SPI0 FSM status register"
        },
        "spi0.timing_cali": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "extra_dummy_cyclelen",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "add extra dummy spi clock cycle length for spi clock calibration."
                },
                {
                    "name": "timing_cali",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable timing auto-calibration for all reading operations."
                },
                {
                    "name": "timing_clk_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to enable timing adjust clock for all reading operations."
                }
            ],
            "id": "spi0.timing_cali",
            "name": "timing_cali",
            "offset": "0xa8",
            "doc": "SPI0 timing calibration register"
        },
        "spi0.din_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "din3_mode",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge"
                },
                {
                    "name": "din2_mode",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge"
                },
                {
                    "name": "din1_mode",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge"
                },
                {
                    "name": "din0_mode",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb,  3: input with the posedge of clk_160, 4 input with the negedge of clk_160, 5: input with the spi_clk high edge,  6: input with the spi_clk low edge"
                }
            ],
            "id": "spi0.din_mode",
            "name": "din_mode",
            "offset": "0xac",
            "doc": "SPI0 input delay mode control register"
        },
        "spi0.din_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "din3_num",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,..."
                },
                {
                    "name": "din2_num",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,..."
                },
                {
                    "name": "din1_num",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,..."
                },
                {
                    "name": "din0_num",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by system clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,..."
                }
            ],
            "id": "spi0.din_num",
            "name": "din_num",
            "offset": "0xb0",
            "doc": "SPI0 input delay number control register"
        },
        "spi0.dout_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dout3_mode",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
                },
                {
                    "name": "dout2_mode",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
                },
                {
                    "name": "dout1_mode",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
                },
                {
                    "name": "dout0_mode",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the output signals are delayed by system clock cycles, 0: output without delayed, 1: output with the posedge of clk_apb,2 output with the negedge of clk_apb, 3: output with the posedge of clk_160,4 output with the negedge of clk_160,5: output with the spi_clk high edge ,6: output with the spi_clk low edge"
                }
            ],
            "id": "spi0.dout_mode",
            "name": "dout_mode",
            "offset": "0xb4",
            "doc": "SPI0 output delay mode control register"
        },
        "spi0.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Register clock gate enable signal. 1: Enable. 0: Disable."
                }
            ],
            "id": "spi0.clock_gate",
            "name": "clock_gate",
            "offset": "0xdc",
            "doc": "SPI0 clk_gate register"
        },
        "spi0.core_clk_sel": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi01_clk_sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "When the digital system clock selects PLL clock and the frequency of PLL clock is 480MHz, the value of reg_spi01_clk_sel:  0: SPI0/1 module clock (clk) is 80MHz. 1: SPI0/1 module clock (clk) is 120MHz.  2: SPI0/1 module clock (clk) 160MHz. 3: Not used. When the digital system clock selects PLL clock and the frequency of PLL clock is 320MHz, the value of reg_spi01_clk_sel:  0: SPI0/1 module clock (clk) is 80MHz. 1: SPI0/1 module clock (clk) is 80MHz.  2: SPI0/1 module clock (clk) 160MHz. 3: Not used."
                }
            ],
            "id": "spi0.core_clk_sel",
            "name": "core_clk_sel",
            "offset": "0xe0",
            "doc": "SPI0 module clock select register"
        },
        "spi0.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583408",
                    "doc": "SPI register version."
                }
            ],
            "id": "spi0.date",
            "name": "date",
            "offset": "0x3fc",
            "doc": "Version control register"
        },
        "spi1": {
            "type": "blk",
            "children": [
                "spi1.cmd",
                "spi1.addr",
                "spi1.ctrl",
                "spi1.ctrl1",
                "spi1.ctrl2",
                "spi1.clock",
                "spi1.user",
                "spi1.user1",
                "spi1.user2",
                "spi1.mosi_dlen",
                "spi1.miso_dlen",
                "spi1.rd_status",
                "spi1.misc",
                "spi1.tx_crc",
                "spi1.cache_fctrl",
                "spi1.w0",
                "spi1.w1",
                "spi1.w2",
                "spi1.w3",
                "spi1.w4",
                "spi1.w5",
                "spi1.w6",
                "spi1.w7",
                "spi1.w8",
                "spi1.w9",
                "spi1.w10",
                "spi1.w11",
                "spi1.w12",
                "spi1.w13",
                "spi1.w14",
                "spi1.w15",
                "spi1.flash_waiti_ctrl",
                "spi1.flash_sus_ctrl",
                "spi1.flash_sus_cmd",
                "spi1.sus_status",
                "spi1.timing_cali",
                "spi1.int_ena",
                "spi1.int_clr",
                "spi1.int_raw",
                "spi1.int_st",
                "spi1.clock_gate",
                "spi1.date"
            ],
            "id": "spi1",
            "name": "spi1",
            "offset": "0x60002000",
            "doc": "SPI (Serial Peripheral Interface) Controller"
        },
        "spi1.cmd": {
            "type": "reg",
            "fields": [
                {
                    "name": "flash_read",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Read flash enable. Read flash operation will be triggered when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable."
                },
                {
                    "name": "flash_wren",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write flash enable.  Write enable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable."
                },
                {
                    "name": "flash_wrdi",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write flash disable. Write disable command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable."
                },
                {
                    "name": "flash_rdid",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Read JEDEC ID . Read ID command will be sent when the bit is set. The bit will be cleared once the operation done. 1: enable 0: disable."
                },
                {
                    "name": "flash_rdsr",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Read status register-1.  Read status operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_wrsr",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write status register enable.   Write status operation  will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_pp",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Page program enable(1 byte ~256 bytes data to be programmed). Page program operation  will be triggered when the bit is set. The bit will be cleared once the operation done .1: enable 0: disable."
                },
                {
                    "name": "flash_se",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Sector erase enable(4KB). Sector erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_be",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Block erase enable(32KB) .  Block erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_ce",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Chip erase enable. Chip erase operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_dp",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Drive Flash into power down.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_res",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit combined with reg_resandres bit releases Flash from the power-down state or high performance mode and obtains the devices ID. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_hpm",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Drive Flash into high performance mode.  The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "usr",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_pe",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In user mode, it is set to indicate that program/erase operation will be triggered. The bit is combined with spi_mem_usr bit. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mspi_st",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The current status of SPI1 slave FSM: mspi_st. 0: idle state, 1: preparation state, 2: send command state, 3: send address state, 4: wait state, 5: read data state, 6:write data state, 7: done state, 8: read data end state."
                },
                {
                    "name": "spi1_mst_st",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The current status of SPI1 master FSM."
                }
            ],
            "id": "spi1.cmd",
            "name": "cmd",
            "offset": "0x0",
            "doc": "SPI1 memory command register"
        },
        "spi1.addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_addr_value",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In user mode, it is the memory address. other then the bit0-bit23 is the memory address, the bit24-bit31 are the byte length of a transfer."
                }
            ],
            "id": "spi1.addr",
            "name": "addr",
            "offset": "0x4",
            "doc": "SPI1 address register"
        },
        "spi1.ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd5",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fread_qio",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations address phase and read-data phase apply 4 signals. 1: enable 0: disable."
                },
                {
                    "name": "fread_dio",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations address phase and read-data phase apply 2 signals. 1: enable 0: disable."
                },
                {
                    "name": "wrsr_2b",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "two bytes data will be written to status register when it is set. 1: enable 0: disable."
                },
                {
                    "name": "wp",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Write protect signal output when SPI is idle.  1: output high, 0: output low."
                },
                {
                    "name": "fread_quad",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations read-data phase apply 4 signals. 1: enable 0: disable."
                },
                {
                    "name": "d_pol",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MOSI line polarity, 1: high 0, low"
                },
                {
                    "name": "q_pol",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MISO line polarity, 1: high 0, low"
                },
                {
                    "name": "rsvd3",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "resandres",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The Device ID is read out to SPI_MEM_RD_STATUS register,  this bit combine with spi_mem_flash_res bit. 1: enable 0: disable."
                },
                {
                    "name": "fread_dual",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations, read-data phase apply 2 signals. 1: enable 0: disable."
                },
                {
                    "name": "fastrd_mode",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This bit enable the bits: spi_mem_fread_qio, spi_mem_fread_dio, spi_mem_fread_qout and spi_mem_fread_dout. 1: enable 0: disable."
                },
                {
                    "name": "rsvd2",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_crc_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1,  enable crc32 when writing encrypted data to flash. 1: enable 0:disable"
                },
                {
                    "name": "fcs_crc_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1,  initialize crc32 module before writing encrypted data to flash. Active low."
                },
                {
                    "name": "rsvd1",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fcmd_quad",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 4 signals during command phase 1:enable 0: disable"
                },
                {
                    "name": "fcmd_dual",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 2 signals during command phase 1:enable 0: disable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fdummy_out",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the dummy phase the signal level of spi is output by the spi controller."
                },
                {
                    "name": "rsvd4",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.ctrl",
            "name": "ctrl",
            "offset": "0x8",
            "doc": "SPI1 control register."
        },
        "spi1.ctrl1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs_hold_dly_res",
                    "lsb": 2,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "1023",
                    "doc": "After RES/DP/HPM command is sent, SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 512) SPI_CLK cycles."
                },
                {
                    "name": "clk_mode",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on."
                }
            ],
            "id": "spi1.ctrl1",
            "name": "ctrl1",
            "offset": "0xc",
            "doc": "SPI1 control1 register."
        },
        "spi1.ctrl2": {
            "type": "reg",
            "fields": [
                {
                    "name": "sync_reset",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The FSM will be reset."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.ctrl2",
            "name": "ctrl2",
            "offset": "0x10",
            "doc": "SPI1 control2 register."
        },
        "spi1.clock": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_equ_sysclk",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clkcnt_n",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it is the divider of spi_mem_clk. So spi_mem_clk frequency is system/(spi_mem_clkcnt_N+1)"
                },
                {
                    "name": "clkcnt_h",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "In the master mode it must be floor((spi_mem_clkcnt_N+1)/2-1)."
                },
                {
                    "name": "clkcnt_l",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it must be equal to spi_mem_clkcnt_N."
                }
            ],
            "id": "spi1.clock",
            "name": "clock",
            "offset": "0x14",
            "doc": "SPI1 clock division control register."
        },
        "spi1.user": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_command",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This bit enable the command phase of an operation."
                },
                {
                    "name": "usr_addr",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the address phase of an operation."
                },
                {
                    "name": "usr_dummy",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the dummy phase of an operation."
                },
                {
                    "name": "usr_miso",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the read-data phase of an operation."
                },
                {
                    "name": "usr_mosi",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the write-data phase of an operation."
                },
                {
                    "name": "usr_dummy_idle",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI clock is disable in dummy phase when the bit is enable."
                },
                {
                    "name": "usr_mosi_highpart",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "write-data phase only access to high-part of the buffer spi_mem_w8~spi_mem_w15. 1: enable 0: disable."
                },
                {
                    "name": "usr_miso_highpart",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "read-data phase only access to high-part of the buffer spi_mem_w8~spi_mem_w15. 1: enable 0: disable."
                },
                {
                    "name": "rsvd1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fwrite_qio",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations address phase and read-data phase apply 4 signals."
                },
                {
                    "name": "fwrite_dio",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations address phase and read-data phase apply 2 signals."
                },
                {
                    "name": "fwrite_quad",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations read-data phase apply 4 signals"
                },
                {
                    "name": "fwrite_dual",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations read-data phase apply 2 signals"
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ck_out_edge",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the bit combined with spi_mem_mosi_delay_mode bits to set mosi signal delay mode."
                },
                {
                    "name": "rsvd2",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.user",
            "name": "user",
            "offset": "0x18",
            "doc": "SPI1 user register."
        },
        "spi1.user1": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_addr_bitlen",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "23",
                    "doc": "The length in bits of address phase. The register value shall be (bit_num-1)."
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_dummy_cyclelen",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in spi_mem_clk cycles of dummy phase. The register value shall be (cycle_num-1)."
                }
            ],
            "id": "spi1.user1",
            "name": "user1",
            "offset": "0x1c",
            "doc": "SPI1 user1 register."
        },
        "spi1.user2": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_command_bitlen",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in bits of command phase. The register value shall be (bit_num-1)"
                },
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_command_value",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The value of  command."
                }
            ],
            "id": "spi1.user2",
            "name": "user2",
            "offset": "0x20",
            "doc": "SPI1 user2 register."
        },
        "spi1.mosi_dlen": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_mosi_dbitlen",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The length in bits of write-data. The register value shall be (bit_num-1)."
                }
            ],
            "id": "spi1.mosi_dlen",
            "name": "mosi_dlen",
            "offset": "0x24",
            "doc": "SPI1 send data bit length control register."
        },
        "spi1.miso_dlen": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_miso_dbitlen",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The length in bits of  read-data. The register value shall be (bit_num-1)."
                }
            ],
            "id": "spi1.miso_dlen",
            "name": "miso_dlen",
            "offset": "0x28",
            "doc": "SPI1 receive data bit length control register."
        },
        "spi1.rd_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wb_mode",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Mode bits in the flash fast read mode  it is combined with spi_mem_fastrd_mode bit."
                },
                {
                    "name": "status",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The value is stored when set spi_mem_flash_rdsr bit and spi_mem_flash_res bit."
                }
            ],
            "id": "spi1.rd_status",
            "name": "rd_status",
            "offset": "0x2c",
            "doc": "SPI1 status register."
        },
        "spi1.misc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs_keep_active",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi cs line keep low when the bit is set."
                },
                {
                    "name": "ck_idle_edge",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi clk line is high when idle     0: spi clk line is low when idle"
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cs1_dis",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI_CS1 pin enable, 1: disable SPI_CS1, 0: SPI_CS1 pin is active to select SPI device, such as flash, external RAM and so on."
                },
                {
                    "name": "cs0_dis",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI_CS0 pin enable, 1: disable SPI_CS0, 0: SPI_CS0 pin is active to select SPI device, such as flash, external RAM and so on."
                }
            ],
            "id": "spi1.misc",
            "name": "misc",
            "offset": "0x34",
            "doc": "SPI1 misc register"
        },
        "spi1.tx_crc": {
            "type": "reg",
            "fields": [
                {
                    "name": "data",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "4294967295",
                    "doc": "For SPI1, the value of crc32."
                }
            ],
            "id": "spi1.tx_crc",
            "name": "tx_crc",
            "offset": "0x38",
            "doc": "SPI1 TX CRC data register."
        },
        "spi1.cache_fctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "faddr_quad",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, address phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "fdout_quad",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, dout phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "fdin_quad",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, din phase apply 4 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_qio."
                },
                {
                    "name": "faddr_dual",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, address phase apply 2 signals. 1: enable 0: disable.  The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "fdout_dual",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, dout phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "fdin_dual",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1, din phase apply 2 signals. 1: enable 0: disable. The bit is the same with spi_mem_fread_dio."
                },
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cache_usr_addr_4byte",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "For SPI1,  cache  read flash with 4 bytes address, 1: enable, 0:disable."
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.cache_fctrl",
            "name": "cache_fctrl",
            "offset": "0x3c",
            "doc": "SPI1 bit mode control register."
        },
        "spi1.w0": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w0",
            "name": "w0",
            "offset": "0x58",
            "doc": "SPI1 memory data buffer0"
        },
        "spi1.w1": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w1",
            "name": "w1",
            "offset": "0x5c",
            "doc": "SPI1 memory data buffer1"
        },
        "spi1.w2": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w2",
            "name": "w2",
            "offset": "0x60",
            "doc": "SPI1 memory data buffer2"
        },
        "spi1.w3": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w3",
            "name": "w3",
            "offset": "0x64",
            "doc": "SPI1 memory data buffer3"
        },
        "spi1.w4": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w4",
            "name": "w4",
            "offset": "0x68",
            "doc": "SPI1 memory data buffer4"
        },
        "spi1.w5": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w5",
            "name": "w5",
            "offset": "0x6c",
            "doc": "SPI1 memory data buffer5"
        },
        "spi1.w6": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w6",
            "name": "w6",
            "offset": "0x70",
            "doc": "SPI1 memory data buffer6"
        },
        "spi1.w7": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w7",
            "name": "w7",
            "offset": "0x74",
            "doc": "SPI1 memory data buffer7"
        },
        "spi1.w8": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf8",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w8",
            "name": "w8",
            "offset": "0x78",
            "doc": "SPI1 memory data buffer8"
        },
        "spi1.w9": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf9",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w9",
            "name": "w9",
            "offset": "0x7c",
            "doc": "SPI1 memory data buffer9"
        },
        "spi1.w10": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf10",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w10",
            "name": "w10",
            "offset": "0x80",
            "doc": "SPI1 memory data buffer10"
        },
        "spi1.w11": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf11",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w11",
            "name": "w11",
            "offset": "0x84",
            "doc": "SPI1 memory data buffer11"
        },
        "spi1.w12": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf12",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w12",
            "name": "w12",
            "offset": "0x88",
            "doc": "SPI1 memory data buffer12"
        },
        "spi1.w13": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf13",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w13",
            "name": "w13",
            "offset": "0x8c",
            "doc": "SPI1 memory data buffer13"
        },
        "spi1.w14": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf14",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w14",
            "name": "w14",
            "offset": "0x90",
            "doc": "SPI1 memory data buffer14"
        },
        "spi1.w15": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf15",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi1.w15",
            "name": "w15",
            "offset": "0x94",
            "doc": "SPI1 memory data buffer15"
        },
        "spi1.flash_waiti_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "waiti_dummy_cyclelen",
                    "lsb": 10,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The dummy cycle length when wait flash idle(RDSR)."
                },
                {
                    "name": "waiti_cmd",
                    "lsb": 2,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "The command to wait flash idle(RDSR)."
                },
                {
                    "name": "waiti_dummy",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The dummy phase enable when wait flash idle (RDSR)"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.flash_waiti_ctrl",
            "name": "flash_waiti_ctrl",
            "offset": "0x98",
            "doc": "SPI1 wait idle control register"
        },
        "spi1.flash_sus_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "sus_timeout_cnt",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "read-write",
                    "reset": "4",
                    "doc": "When SPI1 checks SUS/SUS1/SUS2 bits fail for SPI_MEM_SUS_TIMEOUT_CNT[6:0] times, it will be treated as check pass."
                },
                {
                    "name": "pes_end_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Both WIP and SUS/SUS1/SUS2 bits should be checked to insure the suspend status of flash. 0: Only need to check WIP is 0."
                },
                {
                    "name": "per_end_en",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Both WIP and SUS/SUS1/SUS2 bits should be checked to insure the resume status of flash. 0: Only need to check WIP is 0."
                },
                {
                    "name": "rd_sus_2b",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Read two bytes when check flash SUS/SUS1/SUS2 status bit. 0:  Read one byte when check flash SUS/SUS1/SUS2 status bit"
                },
                {
                    "name": "pesr_end_msk",
                    "lsb": 6,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "The mask value when check SUS/SUS1/SUS2 status bit. If the read status value is status_in[15:0](only status_in[7:0] is valid when only one byte of data is read out, status_in[15:0] is valid when two bytes of data are read out), SUS/SUS1/SUS2 = status_in[15:0]^ SPI_MEM_PESR_END_MSK[15:0]."
                },
                {
                    "name": "flash_pes_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable Auto-suspending function."
                },
                {
                    "name": "pes_per_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable PES end triggers PER transfer option. If this bit is 0, application should send PER after PES is done."
                },
                {
                    "name": "flash_pes_wait_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4 or *128) SPI_CLK cycles after program erase suspend command is sent. 0: SPI1 does not wait after program erase suspend command is sent."
                },
                {
                    "name": "flash_per_wait_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4 or *128) SPI_CLK cycles after program erase resume command is sent. 0: SPI1 does not wait after program erase resume command is sent."
                },
                {
                    "name": "flash_pes",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "program erase suspend bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                },
                {
                    "name": "flash_per",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "program erase resume bit, program erase suspend operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable."
                }
            ],
            "id": "spi1.flash_sus_ctrl",
            "name": "flash_sus_ctrl",
            "offset": "0x9c",
            "doc": "SPI1 flash suspend control register"
        },
        "spi1.flash_sus_cmd": {
            "type": "reg",
            "fields": [
                {
                    "name": "wait_pesr_command",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "5",
                    "doc": "Flash SUS/SUS1/SUS2 status bit read command. The command should be sent when SUS/SUS1/SUS2 bit should be checked to insure the suspend or resume status of flash."
                },
                {
                    "name": "flash_pes_command",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "117",
                    "doc": "Program/Erase suspend command."
                },
                {
                    "name": "flash_per_command",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "122",
                    "doc": "Program/Erase resume command."
                }
            ],
            "id": "spi1.flash_sus_cmd",
            "name": "flash_sus_cmd",
            "offset": "0xa0",
            "doc": "SPI1 flash suspend command register"
        },
        "spi1.sus_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "spi0_lock_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable SPI0 lock SPI0/1 arbiter option. 0: Disable it."
                },
                {
                    "name": "flash_pes_dly_128",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Valid when SPI_MEM_FLASH_PES_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after PES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PES command is sent."
                },
                {
                    "name": "flash_per_dly_128",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Valid when SPI_MEM_FLASH_PER_WAIT_EN is 1. 1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after PER command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after PER command is sent."
                },
                {
                    "name": "flash_dp_dly_128",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after DP command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after DP command is sent."
                },
                {
                    "name": "flash_res_dly_128",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after RES command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after RES command is sent."
                },
                {
                    "name": "flash_hpm_dly_128",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 128) SPI_CLK cycles after HPM command is sent. 0: SPI1 waits (SPI_MEM_CS_HOLD_DELAY_RES[9:0] * 4) SPI_CLK cycles after HPM command is sent."
                },
                {
                    "name": "wait_pesr_cmd_2b",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI1 sends out SPI_MEM_WAIT_PESR_COMMAND[15:0] to check SUS/SUS1/SUS2 bit. 0: SPI1 sends out SPI_MEM_WAIT_PESR_COMMAND[7:0] to check SUS/SUS1/SUS2 bit."
                },
                {
                    "name": "flash_sus",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The status of flash suspend, only used in SPI1."
                }
            ],
            "id": "spi1.sus_status",
            "name": "sus_status",
            "offset": "0xa4",
            "doc": "SPI1 flash suspend status register"
        },
        "spi1.timing_cali": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "extra_dummy_cyclelen",
                    "lsb": 2,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "add extra dummy spi clock cycle length for spi clock calibration."
                },
                {
                    "name": "timing_cali",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The bit is used to enable timing auto-calibration for all reading operations."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi1.timing_cali",
            "name": "timing_cali",
            "offset": "0xa8",
            "doc": "SPI1 timing control register"
        },
        "spi1.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mst_st_end_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MEM_MST_ST_END_INT interrupt."
                },
                {
                    "name": "slv_st_end_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MEM_SLV_ST_END_INT interrupt."
                },
                {
                    "name": "wpe_end_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MEM_WPE_END_INT interrupt."
                },
                {
                    "name": "pes_end_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MEM_PES_END_INT interrupt."
                },
                {
                    "name": "per_end_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MEM_PER_END_INT interrupt."
                }
            ],
            "id": "spi1.int_ena",
            "name": "int_ena",
            "offset": "0xc0",
            "doc": "SPI1 interrupt enable register"
        },
        "spi1.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mst_st_end_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MEM_MST_ST_END_INT interrupt."
                },
                {
                    "name": "slv_st_end_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MEM_SLV_ST_END_INT interrupt."
                },
                {
                    "name": "wpe_end_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MEM_WPE_END_INT interrupt."
                },
                {
                    "name": "pes_end_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MEM_PES_END_INT interrupt."
                },
                {
                    "name": "per_end_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MEM_PER_END_INT interrupt."
                }
            ],
            "id": "spi1.int_clr",
            "name": "int_clr",
            "offset": "0xc4",
            "doc": "SPI1 interrupt clear register"
        },
        "spi1.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mst_st_end_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MEM_MST_ST_END_INT interrupt. 1: Triggered when spi1_mst_st is changed from non idle state to idle state. 0: Others."
                },
                {
                    "name": "slv_st_end_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MEM_SLV_ST_END_INT interrupt. 1: Triggered when spi1_slv_st is changed from non idle state to idle state. It means that SPI_CS raises high. 0: Others"
                },
                {
                    "name": "wpe_end_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MEM_WPE_END_INT interrupt. 1: Triggered when WRSR/PP/SE/BE/CE is sent and flash is already idle. 0: Others."
                },
                {
                    "name": "pes_end_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MEM_PES_END_INT interrupt.1: Triggered when Auto Suspend command (0x75) is sent and flash is suspended. 0: Others."
                },
                {
                    "name": "per_end_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MEM_PER_END_INT interrupt. 1: Triggered when Auto Resume command (0x7A) is sent and flash is resumed. 0: Others."
                }
            ],
            "id": "spi1.int_raw",
            "name": "int_raw",
            "offset": "0xc8",
            "doc": "SPI1 interrupt raw register"
        },
        "spi1.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mst_st_end_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MEM_MST_ST_END_INT interrupt."
                },
                {
                    "name": "slv_st_end_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MEM_SLV_ST_END_INT interrupt."
                },
                {
                    "name": "wpe_end_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MEM_WPE_END_INT interrupt."
                },
                {
                    "name": "pes_end_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MEM_PES_END_INT interrupt."
                },
                {
                    "name": "per_end_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MEM_PER_END_INT interrupt."
                }
            ],
            "id": "spi1.int_st",
            "name": "int_st",
            "offset": "0xcc",
            "doc": "SPI1 interrupt status register"
        },
        "spi1.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Register clock gate enable signal. 1: Enable. 0: Disable."
                }
            ],
            "id": "spi1.clock_gate",
            "name": "clock_gate",
            "offset": "0xdc",
            "doc": "SPI1 clk_gate register"
        },
        "spi1.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583472",
                    "doc": "Version control register"
                }
            ],
            "id": "spi1.date",
            "name": "date",
            "offset": "0x3fc",
            "doc": "Version control register"
        },
        "spi2": {
            "type": "blk",
            "children": [
                "spi2.cmd",
                "spi2.addr",
                "spi2.ctrl",
                "spi2.clock",
                "spi2.user",
                "spi2.user1",
                "spi2.user2",
                "spi2.ms_dlen",
                "spi2.misc",
                "spi2.din_mode",
                "spi2.din_num",
                "spi2.dout_mode",
                "spi2.dma_conf",
                "spi2.dma_int_ena",
                "spi2.dma_int_clr",
                "spi2.dma_int_raw",
                "spi2.dma_int_st",
                "spi2.w0",
                "spi2.w1",
                "spi2.w2",
                "spi2.w3",
                "spi2.w4",
                "spi2.w5",
                "spi2.w6",
                "spi2.w7",
                "spi2.w8",
                "spi2.w9",
                "spi2.w10",
                "spi2.w11",
                "spi2.w12",
                "spi2.w13",
                "spi2.w14",
                "spi2.w15",
                "spi2.slave",
                "spi2.slave1",
                "spi2.clk_gate",
                "spi2.date"
            ],
            "id": "spi2",
            "name": "spi2",
            "offset": "0x60024000",
            "doc": "SPI (Serial Peripheral Interface) Controller"
        },
        "spi2.cmd": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 25,
                    "nbits": 7,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "User define command enable.  An operation will be triggered when the bit is set. The bit will be cleared once the operation done.1: enable 0: disable. Can not be changed by CONF_buf."
                },
                {
                    "name": "update",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to synchronize SPI registers from APB clock domain into SPI module clock domain, which is only used in SPI master mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "conf_bitlen",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Define the APB cycles of  SPI_CONF state. Can be configured in CONF state."
                }
            ],
            "id": "spi2.cmd",
            "name": "cmd",
            "offset": "0x0",
            "doc": "Command control register"
        },
        "spi2.addr": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_addr_value",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Address to slave. Can be configured in CONF state."
                }
            ],
            "id": "spi2.addr",
            "name": "addr",
            "offset": "0x4",
            "doc": "Address value register"
        },
        "spi2.ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd6",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wr_bit_order",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In command address write-data (MOSI) phases 1: LSB firs 0: MSB first. Can be configured in CONF state."
                },
                {
                    "name": "rd_bit_order",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In read-data (MISO) phase 1: LSB first 0: MSB first. Can be configured in CONF state."
                },
                {
                    "name": "rsvd4",
                    "lsb": 22,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wp_pol",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Write protect signal output when SPI is idle.  1: output high, 0: output low.  Can be configured in CONF state."
                },
                {
                    "name": "hold_pol",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI_HOLD output value when SPI is idle. 1: output high, 0: output low. Can be configured in CONF state."
                },
                {
                    "name": "d_pol",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MOSI line polarity, 1: high 0, low. Can be configured in CONF state."
                },
                {
                    "name": "q_pol",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The bit is used to set MISO line polarity, 1: high 0, low. Can be configured in CONF state."
                },
                {
                    "name": "rsvd3",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fread_quad",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations read-data phase apply 4 signals. 1: enable 0: disable.  Can be configured in CONF state."
                },
                {
                    "name": "fread_dual",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the read operations, read-data phase apply 2 signals. 1: enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "rsvd2",
                    "lsb": 10,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fcmd_quad",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 4 signals during command phase 1:enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "fcmd_dual",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 2 signals during command phase 1:enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "rsvd1",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "faddr_quad",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 4 signals during addr phase 1:enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "faddr_dual",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Apply 2 signals during addr phase 1:enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dummy_out",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the dummy phase the signal level of spi is output by the spi controller. Can be configured in CONF state."
                },
                {
                    "name": "rsvd5",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi2.ctrl",
            "name": "ctrl",
            "offset": "0x8",
            "doc": "SPI control register"
        },
        "spi2.clock": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_equ_sysclk",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "In the master mode 1: spi_clk is eqaul to system 0: spi_clk is divided from system clock. Can be configured in CONF state."
                },
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clkdiv_pre",
                    "lsb": 18,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the master mode it is pre-divider of spi_clk.  Can be configured in CONF state."
                },
                {
                    "name": "clkcnt_n",
                    "lsb": 12,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it is the divider of spi_clk. So spi_clk frequency is system/(spi_clkdiv_pre+1)/(spi_clkcnt_N+1). Can be configured in CONF state."
                },
                {
                    "name": "clkcnt_h",
                    "lsb": 6,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "In the master mode it must be floor((spi_clkcnt_N+1)/2-1). In the slave mode it must be 0. Can be configured in CONF state."
                },
                {
                    "name": "clkcnt_l",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "In the master mode it must be equal to spi_clkcnt_N. In the slave mode it must be 0. Can be configured in CONF state."
                }
            ],
            "id": "spi2.clock",
            "name": "clock",
            "offset": "0xc",
            "doc": "SPI clock control register"
        },
        "spi2.user": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_command",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This bit enable the command phase of an operation. Can be configured in CONF state."
                },
                {
                    "name": "usr_addr",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the address phase of an operation. Can be configured in CONF state."
                },
                {
                    "name": "usr_dummy",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the dummy phase of an operation. Can be configured in CONF state."
                },
                {
                    "name": "usr_miso",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the read-data phase of an operation. Can be configured in CONF state."
                },
                {
                    "name": "usr_mosi",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit enable the write-data phase of an operation. Can be configured in CONF state."
                },
                {
                    "name": "usr_dummy_idle",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi clock is disable in dummy phase when the bit is enable. Can be configured in CONF state."
                },
                {
                    "name": "usr_mosi_highpart",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "write-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable.  Can be configured in CONF state."
                },
                {
                    "name": "usr_miso_highpart",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "read-data phase only access to high-part of the buffer spi_w8~spi_w15. 1: enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "rsvd5",
                    "lsb": 18,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sio",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set the bit to enable 3-line half duplex communication mosi and miso signals share the same pin. 1: enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "rsvd4",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_conf_nxt",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable the DMA CONF phase of next seg-trans operation, which means seg-trans will continue. 0: The seg-trans will end after the current SPI seg-trans or this is not seg-trans mode. Can be configured in CONF state."
                },
                {
                    "name": "rsvd3",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "fwrite_quad",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations read-data phase apply 4 signals. Can be configured in CONF state."
                },
                {
                    "name": "fwrite_dual",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the write operations read-data phase apply 2 signals. Can be configured in CONF state."
                },
                {
                    "name": "rsvd2",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ck_out_edge",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the bit combined with spi_mosi_delay_mode bits to set mosi signal delay mode. Can be configured in CONF state."
                },
                {
                    "name": "rsck_i_edge",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the slave mode, this bit can be used to change the polarity of rsck. 0: rsck = !spi_ck_i. 1:rsck = spi_ck_i."
                },
                {
                    "name": "cs_setup",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "spi cs is enable when spi is in  prepare  phase. 1: enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "cs_hold",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "spi cs keep low when spi is in  done  phase. 1: enable 0: disable. Can be configured in CONF state."
                },
                {
                    "name": "tsck_i_edge",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the slave mode, this bit can be used to change the polarity of tsck. 0: tsck = spi_ck_i. 1:tsck = !spi_ck_i."
                },
                {
                    "name": "rsvd1",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "qpi_mode",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Both for master mode and slave mode. 1: spi controller is in QPI mode. 0: others. Can be configured in CONF state."
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "doutdin",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set the bit to enable full duplex communication. 1: enable 0: disable. Can be configured in CONF state."
                }
            ],
            "id": "spi2.user",
            "name": "user",
            "offset": "0x10",
            "doc": "SPI USER control register"
        },
        "spi2.user1": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_addr_bitlen",
                    "lsb": 27,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "23",
                    "doc": "The length in bits of address phase. The register value shall be (bit_num-1). Can be configured in CONF state."
                },
                {
                    "name": "cs_hold_time",
                    "lsb": 22,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "delay cycles of cs pin by spi clock this bits are combined with spi_cs_hold bit. Can be configured in CONF state."
                },
                {
                    "name": "cs_setup_time",
                    "lsb": 17,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "(cycles+1) of prepare phase by spi clock this bits are combined with spi_cs_setup bit. Can be configured in CONF state."
                },
                {
                    "name": "mst_wfull_err_end_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: SPI transfer is ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI RX AFIFO wfull error is valid in GP-SPI master FD/HD-mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_dummy_cyclelen",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in spi_clk cycles of dummy phase. The register value shall be (cycle_num-1). Can be configured in CONF state."
                }
            ],
            "id": "spi2.user1",
            "name": "user1",
            "offset": "0x14",
            "doc": "SPI USER control register 1"
        },
        "spi2.user2": {
            "type": "reg",
            "fields": [
                {
                    "name": "usr_command_bitlen",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "7",
                    "doc": "The length in bits of command phase. The register value shall be (bit_num-1). Can be configured in CONF state."
                },
                {
                    "name": "mst_rempty_err_end_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: SPI transfer is ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode. 0: SPI transfer is not ended when SPI TX AFIFO read empty error is valid in GP-SPI master FD/HD-mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_command_value",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The value of  command. Can be configured in CONF state."
                }
            ],
            "id": "spi2.user2",
            "name": "user2",
            "offset": "0x18",
            "doc": "SPI USER control register 2"
        },
        "spi2.ms_dlen": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ms_data_bitlen",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The value of these bits is the configured SPI transmission data bit length in master mode DMA controlled transfer or CPU controlled transfer. The value is also the configured bit length in slave mode DMA RX controlled transfer. The register value shall be (bit_num-1). Can be configured in CONF state."
                }
            ],
            "id": "spi2.ms_dlen",
            "name": "ms_dlen",
            "offset": "0x1c",
            "doc": "SPI data bit length control register"
        },
        "spi2.misc": {
            "type": "reg",
            "fields": [
                {
                    "name": "quad_din_pin_swap",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1:  spi quad input swap enable  0:  spi quad input swap disable. Can be configured in CONF state."
                },
                {
                    "name": "cs_keep_active",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi cs line keep low when the bit is set. Can be configured in CONF state."
                },
                {
                    "name": "ck_idle_edge",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi clk line is high when idle     0: spi clk line is low when idle. Can be configured in CONF state."
                },
                {
                    "name": "rsvd1",
                    "lsb": 24,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slave_cs_pol",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "spi slave input cs polarity select. 1: inv  0: not change. Can be configured in CONF state."
                },
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "master_cs_pol",
                    "lsb": 7,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the master mode the bits are the polarity of spi cs line, the value is equivalent to spi_cs ^ spi_master_cs_pol. Can be configured in CONF state."
                },
                {
                    "name": "ck_dis",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi clk out disable,  0: spi clk out enable. Can be configured in CONF state."
                },
                {
                    "name": "cs5_dis",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI CS5 pin enable, 1: disable CS5, 0: spi_cs5 signal is from/to CS5 pin. Can be configured in CONF state."
                },
                {
                    "name": "cs4_dis",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI CS4 pin enable, 1: disable CS4, 0: spi_cs4 signal is from/to CS4 pin. Can be configured in CONF state."
                },
                {
                    "name": "cs3_dis",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI CS3 pin enable, 1: disable CS3, 0: spi_cs3 signal is from/to CS3 pin. Can be configured in CONF state."
                },
                {
                    "name": "cs2_dis",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI CS2 pin enable, 1: disable CS2, 0: spi_cs2 signal is from/to CS2 pin. Can be configured in CONF state."
                },
                {
                    "name": "cs1_dis",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "SPI CS1 pin enable, 1: disable CS1, 0: spi_cs1 signal is from/to CS1 pin. Can be configured in CONF state."
                },
                {
                    "name": "cs0_dis",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI CS0 pin enable, 1: disable CS0, 0: spi_cs0 signal is from/to CS0 pin. Can be configured in CONF state."
                }
            ],
            "id": "spi2.misc",
            "name": "misc",
            "offset": "0x20",
            "doc": "SPI misc register"
        },
        "spi2.din_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timing_hclk_active",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1:enable hclk in SPI input timing module.  0: disable it. Can be configured in CONF state."
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "din3_mode",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state."
                },
                {
                    "name": "din2_mode",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state."
                },
                {
                    "name": "din1_mode",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state."
                },
                {
                    "name": "din0_mode",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: input without delayed, 1: input with the posedge of clk_apb,2 input with the negedge of clk_apb, 3: input with the spi_clk. Can be configured in CONF state."
                }
            ],
            "id": "spi2.din_mode",
            "name": "din_mode",
            "offset": "0x24",
            "doc": "SPI input delay mode configuration"
        },
        "spi2.din_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "din3_num",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state."
                },
                {
                    "name": "din2_num",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state."
                },
                {
                    "name": "din1_num",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state."
                },
                {
                    "name": "din0_num",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "the input signals are delayed by SPI module clock cycles, 0: delayed by 1 cycle, 1: delayed by 2 cycles,...  Can be configured in CONF state."
                }
            ],
            "id": "spi2.din_num",
            "name": "din_num",
            "offset": "0x28",
            "doc": "SPI input delay number configuration"
        },
        "spi2.dout_mode": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dout3_mode",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The output signal 3 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state."
                },
                {
                    "name": "dout2_mode",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The output signal 2 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state."
                },
                {
                    "name": "dout1_mode",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The output signal 1 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state."
                },
                {
                    "name": "dout0_mode",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The output signal 0 is delayed by the SPI module clock, 0: output without delayed, 1: output delay for a SPI module clock cycle at its negative edge. Can be configured in CONF state."
                }
            ],
            "id": "spi2.dout_mode",
            "name": "dout_mode",
            "offset": "0x2c",
            "doc": "SPI output delay mode configuration"
        },
        "spi2.dma_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "dma_afifo_rst",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset DMA TX AFIFO, which is used to send data out in SPI slave DMA controlled mode transfer."
                },
                {
                    "name": "buf_afifo_rst",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset BUF TX AFIFO, which is used send data out in SPI slave CPU controlled mode transfer and master mode transfer."
                },
                {
                    "name": "rx_afifo_rst",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to reset RX AFIFO, which is used to receive data in SPI master and slave mode transfer."
                },
                {
                    "name": "dma_tx_ena",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable SPI DMA controlled send data mode."
                },
                {
                    "name": "dma_rx_ena",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable SPI DMA controlled receive data mode."
                },
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 5,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_eof_en",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi_dma_inlink_eof is set when the number of dma pushed data bytes is equal to the value of spi_slv/mst_dma_rd_bytelen[19:0] in spi dma transition.  0: spi_dma_inlink_eof is set by spi_trans_done in non-seg-trans or spi_dma_seg_trans_done in seg-trans."
                },
                {
                    "name": "slv_tx_seg_trans_clr_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi_dma_outfifo_empty_vld is cleared by spi slave cmd 6. 0: spi_dma_outfifo_empty_vld is cleared by spi_trans_done."
                },
                {
                    "name": "slv_rx_seg_trans_clr_en",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: spi_dma_infifo_full_vld is cleared by spi slave cmd 5. 0: spi_dma_infifo_full_vld is cleared by spi_trans_done."
                },
                {
                    "name": "dma_slv_seg_trans_en",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable dma segment transfer in spi dma half slave mode. 1: enable. 0: disable."
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "spi2.dma_conf",
            "name": "dma_conf",
            "offset": "0x30",
            "doc": "SPI DMA control register"
        },
        "spi2.dma_int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app1_int_ena",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_APP1_INT interrupt."
                },
                {
                    "name": "app2_int_ena",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_APP2_INT interrupt."
                },
                {
                    "name": "mst_tx_afifo_rempty_err_int_ena",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt."
                },
                {
                    "name": "mst_rx_afifo_wfull_err_int_ena",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt."
                },
                {
                    "name": "slv_cmd_err_int_ena",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_CMD_ERR_INT interrupt."
                },
                {
                    "name": "slv_buf_addr_err_int_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt."
                },
                {
                    "name": "seg_magic_err_int_ena",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SEG_MAGIC_ERR_INT interrupt."
                },
                {
                    "name": "dma_seg_trans_done_int_ena",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "trans_done_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_buf_done_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_WR_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_buf_done_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_RD_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_dma_done_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_WR_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_dma_done_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_SLV_RD_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_cmda_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave CMDA interrupt."
                },
                {
                    "name": "slv_cmd9_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave CMD9 interrupt."
                },
                {
                    "name": "slv_cmd8_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave CMD8 interrupt."
                },
                {
                    "name": "slv_cmd7_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave CMD7 interrupt."
                },
                {
                    "name": "slv_en_qpi_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave En_QPI interrupt."
                },
                {
                    "name": "slv_ex_qpi_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI slave Ex_QPI interrupt."
                },
                {
                    "name": "dma_outfifo_empty_err_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt."
                },
                {
                    "name": "dma_infifo_full_err_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The enable bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt."
                }
            ],
            "id": "spi2.dma_int_ena",
            "name": "dma_int_ena",
            "offset": "0x34",
            "doc": "SPI DMA interrupt enable register"
        },
        "spi2.dma_int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app1_int_clr",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_APP1_INT interrupt."
                },
                {
                    "name": "app2_int_clr",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_APP2_INT interrupt."
                },
                {
                    "name": "mst_tx_afifo_rempty_err_int_clr",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt."
                },
                {
                    "name": "mst_rx_afifo_wfull_err_int_clr",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt."
                },
                {
                    "name": "slv_cmd_err_int_clr",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_CMD_ERR_INT interrupt."
                },
                {
                    "name": "slv_buf_addr_err_int_clr",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt."
                },
                {
                    "name": "seg_magic_err_int_clr",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SEG_MAGIC_ERR_INT interrupt."
                },
                {
                    "name": "dma_seg_trans_done_int_clr",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "trans_done_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_buf_done_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_WR_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_buf_done_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_RD_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_dma_done_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_WR_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_dma_done_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_SLV_RD_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_cmda_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave CMDA interrupt."
                },
                {
                    "name": "slv_cmd9_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave CMD9 interrupt."
                },
                {
                    "name": "slv_cmd8_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave CMD8 interrupt."
                },
                {
                    "name": "slv_cmd7_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave CMD7 interrupt."
                },
                {
                    "name": "slv_en_qpi_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave En_QPI interrupt."
                },
                {
                    "name": "slv_ex_qpi_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI slave Ex_QPI interrupt."
                },
                {
                    "name": "dma_outfifo_empty_err_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt."
                },
                {
                    "name": "dma_infifo_full_err_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "The clear bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt."
                }
            ],
            "id": "spi2.dma_int_clr",
            "name": "dma_int_clr",
            "offset": "0x38",
            "doc": "SPI DMA interrupt clear register"
        },
        "spi2.dma_int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app1_int_raw",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_APP1_INT interrupt. The value is only controlled by application."
                },
                {
                    "name": "app2_int_raw",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_APP2_INT interrupt. The value is only controlled by application."
                },
                {
                    "name": "mst_tx_afifo_rempty_err_int_raw",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt. 1: There is a TX BUF AFIFO read-empty error when SPI outputs data in master mode. 0: Others."
                },
                {
                    "name": "mst_rx_afifo_wfull_err_int_raw",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt. 1: There is a RX AFIFO write-full error when SPI inputs data in master mode. 0: Others."
                },
                {
                    "name": "slv_cmd_err_int_raw",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_CMD_ERR_INT interrupt. 1: The slave command value in the current SPI slave HD mode transmission is not supported. 0: Others."
                },
                {
                    "name": "slv_buf_addr_err_int_raw",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt. 1: The accessing data address of the current SPI slave mode CPU controlled FD, Wr_BUF or Rd_BUF transmission is bigger than 63. 0: Others."
                },
                {
                    "name": "seg_magic_err_int_raw",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SEG_MAGIC_ERR_INT interrupt. 1: The magic value in CONF buffer is error in the DMA seg-conf-trans. 0: others."
                },
                {
                    "name": "dma_seg_trans_done_int_raw",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt. 1:  spi master DMA full-duplex/half-duplex seg-conf-trans ends or slave half-duplex seg-trans ends. And data has been pushed to corresponding memory.  0:  seg-conf-trans or seg-trans is not ended or not occurred."
                },
                {
                    "name": "trans_done_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_TRANS_DONE_INT interrupt. 1: SPI master mode transmission is ended. 0: others."
                },
                {
                    "name": "slv_wr_buf_done_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_WR_BUF_DONE_INT interrupt. 1: SPI slave mode Wr_BUF transmission is ended. 0: Others."
                },
                {
                    "name": "slv_rd_buf_done_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_RD_BUF_DONE_INT interrupt. 1: SPI slave mode Rd_BUF transmission is ended. 0: Others."
                },
                {
                    "name": "slv_wr_dma_done_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_WR_DMA_DONE_INT interrupt. 1: SPI slave mode Wr_DMA transmission is ended. 0: Others."
                },
                {
                    "name": "slv_rd_dma_done_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI_SLV_RD_DMA_DONE_INT interrupt. 1: SPI slave mode Rd_DMA transmission is ended. 0: Others."
                },
                {
                    "name": "slv_cmda_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave CMDA interrupt. 1: SPI slave mode CMDA transmission is ended. 0: Others."
                },
                {
                    "name": "slv_cmd9_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave CMD9 interrupt. 1: SPI slave mode CMD9 transmission is ended. 0: Others."
                },
                {
                    "name": "slv_cmd8_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave CMD8 interrupt. 1: SPI slave mode CMD8 transmission is ended. 0: Others."
                },
                {
                    "name": "slv_cmd7_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave CMD7 interrupt. 1: SPI slave mode CMD7 transmission is ended. 0: Others."
                },
                {
                    "name": "slv_en_qpi_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave En_QPI interrupt. 1: SPI slave mode En_QPI transmission is ended. 0: Others."
                },
                {
                    "name": "slv_ex_qpi_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The raw bit for SPI slave Ex_QPI interrupt. 1: SPI slave mode Ex_QPI transmission is ended. 0: Others."
                },
                {
                    "name": "dma_outfifo_empty_err_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: The current data rate of DMA TX is smaller than that of SPI. SPI will stop in master mode and send out all 0 in slave mode.  0: Others."
                },
                {
                    "name": "dma_infifo_full_err_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: The current data rate of DMA Rx is smaller than that of SPI, which will lose the receive data.  0: Others."
                }
            ],
            "id": "spi2.dma_int_raw",
            "name": "dma_int_raw",
            "offset": "0x3c",
            "doc": "SPI DMA interrupt raw register"
        },
        "spi2.dma_int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app1_int_st",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_APP1_INT interrupt."
                },
                {
                    "name": "app2_int_st",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_APP2_INT interrupt."
                },
                {
                    "name": "mst_tx_afifo_rempty_err_int_st",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MST_TX_AFIFO_REMPTY_ERR_INT interrupt."
                },
                {
                    "name": "mst_rx_afifo_wfull_err_int_st",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_MST_RX_AFIFO_WFULL_ERR_INT interrupt."
                },
                {
                    "name": "slv_cmd_err_int_st",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_CMD_ERR_INT interrupt."
                },
                {
                    "name": "slv_buf_addr_err_int_st",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_BUF_ADDR_ERR_INT interrupt."
                },
                {
                    "name": "seg_magic_err_int_st",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SEG_MAGIC_ERR_INT interrupt."
                },
                {
                    "name": "dma_seg_trans_done_int_st",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_DMA_SEG_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "trans_done_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_TRANS_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_buf_done_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_WR_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_buf_done_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_RD_BUF_DONE_INT interrupt."
                },
                {
                    "name": "slv_wr_dma_done_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_WR_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_rd_dma_done_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_SLV_RD_DMA_DONE_INT interrupt."
                },
                {
                    "name": "slv_cmda_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave CMDA interrupt."
                },
                {
                    "name": "slv_cmd9_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave CMD9 interrupt."
                },
                {
                    "name": "slv_cmd8_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave CMD8 interrupt."
                },
                {
                    "name": "slv_cmd7_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave CMD7 interrupt."
                },
                {
                    "name": "slv_en_qpi_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave En_QPI interrupt."
                },
                {
                    "name": "slv_ex_qpi_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI slave Ex_QPI interrupt."
                },
                {
                    "name": "dma_outfifo_empty_err_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_DMA_OUTFIFO_EMPTY_ERR_INT interrupt."
                },
                {
                    "name": "dma_infifo_full_err_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The status bit for SPI_DMA_INFIFO_FULL_ERR_INT interrupt."
                }
            ],
            "id": "spi2.dma_int_st",
            "name": "dma_int_st",
            "offset": "0x40",
            "doc": "SPI DMA interrupt status register"
        },
        "spi2.w0": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w0",
            "name": "w0",
            "offset": "0x98",
            "doc": "SPI CPU-controlled buffer0"
        },
        "spi2.w1": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w1",
            "name": "w1",
            "offset": "0x9c",
            "doc": "SPI CPU-controlled buffer1"
        },
        "spi2.w2": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf2",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w2",
            "name": "w2",
            "offset": "0xa0",
            "doc": "SPI CPU-controlled buffer2"
        },
        "spi2.w3": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf3",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w3",
            "name": "w3",
            "offset": "0xa4",
            "doc": "SPI CPU-controlled buffer3"
        },
        "spi2.w4": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf4",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w4",
            "name": "w4",
            "offset": "0xa8",
            "doc": "SPI CPU-controlled buffer4"
        },
        "spi2.w5": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf5",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w5",
            "name": "w5",
            "offset": "0xac",
            "doc": "SPI CPU-controlled buffer5"
        },
        "spi2.w6": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf6",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w6",
            "name": "w6",
            "offset": "0xb0",
            "doc": "SPI CPU-controlled buffer6"
        },
        "spi2.w7": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf7",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w7",
            "name": "w7",
            "offset": "0xb4",
            "doc": "SPI CPU-controlled buffer7"
        },
        "spi2.w8": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf8",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w8",
            "name": "w8",
            "offset": "0xb8",
            "doc": "SPI CPU-controlled buffer8"
        },
        "spi2.w9": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf9",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w9",
            "name": "w9",
            "offset": "0xbc",
            "doc": "SPI CPU-controlled buffer9"
        },
        "spi2.w10": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf10",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w10",
            "name": "w10",
            "offset": "0xc0",
            "doc": "SPI CPU-controlled buffer10"
        },
        "spi2.w11": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf11",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w11",
            "name": "w11",
            "offset": "0xc4",
            "doc": "SPI CPU-controlled buffer11"
        },
        "spi2.w12": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf12",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w12",
            "name": "w12",
            "offset": "0xc8",
            "doc": "SPI CPU-controlled buffer12"
        },
        "spi2.w13": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf13",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w13",
            "name": "w13",
            "offset": "0xcc",
            "doc": "SPI CPU-controlled buffer13"
        },
        "spi2.w14": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf14",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w14",
            "name": "w14",
            "offset": "0xd0",
            "doc": "SPI CPU-controlled buffer14"
        },
        "spi2.w15": {
            "type": "reg",
            "fields": [
                {
                    "name": "buf15",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "data buffer"
                }
            ],
            "id": "spi2.w15",
            "name": "w15",
            "offset": "0xd4",
            "doc": "SPI CPU-controlled buffer15"
        },
        "spi2.slave": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd2",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usr_conf",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: Enable the DMA CONF phase of current seg-trans operation, which means seg-trans will start. 0: This is not seg-trans mode."
                },
                {
                    "name": "soft_reset",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Software reset enable, reset the spi clock line cs line and data lines. Can be configured in CONF state."
                },
                {
                    "name": "mode",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set SPI work mode. 1: slave mode 0: master mode."
                },
                {
                    "name": "dma_seg_magic_value",
                    "lsb": 22,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "10",
                    "doc": "The magic value of BM table in master DMA seg-trans."
                },
                {
                    "name": "rsvd1",
                    "lsb": 12,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "slv_wrbuf_bitlen_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in CPU controlled mode(Wr_BUF). 0: others"
                },
                {
                    "name": "slv_rdbuf_bitlen_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in CPU controlled mode(Rd_BUF). 0: others"
                },
                {
                    "name": "slv_wrdma_bitlen_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI_SLV_DATA_BITLEN stores data bit length of master-write-to-slave data length in DMA controlled mode(Wr_DMA). 0: others"
                },
                {
                    "name": "slv_rddma_bitlen_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: SPI_SLV_DATA_BITLEN stores data bit length of master-read-slave data length in DMA controlled mode(Rd_DMA). 0: others"
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsck_data_out",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "It saves half a cycle when tsck is the same as rsck. 1: output data at rsck posedge   0: output data at tsck posedge"
                },
                {
                    "name": "clk_mode_13",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "{CPOL, CPHA},1: support spi clk mode 1 and 3, first edge output data B[0]/B[7].  0: support spi clk mode 0 and 2, first edge output data B[1]/B[6]."
                },
                {
                    "name": "clk_mode",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "SPI clock mode bits. 0: SPI clock is off when CS inactive 1: SPI clock is delayed one cycle after CS inactive 2: SPI clock is delayed two cycles after CS inactive 3: SPI clock is alwasy on. Can be configured in CONF state."
                }
            ],
            "id": "spi2.slave",
            "name": "slave",
            "offset": "0xe0",
            "doc": "SPI slave control register"
        },
        "spi2.slave1": {
            "type": "reg",
            "fields": [
                {
                    "name": "slv_last_addr",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the slave mode it is the value of address."
                },
                {
                    "name": "slv_last_command",
                    "lsb": 18,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "In the slave mode it is the value of command."
                },
                {
                    "name": "slv_data_bitlen",
                    "lsb": 0,
                    "nbits": 18,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The transferred data bit length in SPI slave FD and HD mode."
                }
            ],
            "id": "spi2.slave1",
            "name": "slave1",
            "offset": "0xe4",
            "doc": "SPI slave control register 1"
        },
        "spi2.clk_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mst_clk_sel",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit is used to select SPI module clock source in master mode. 1: PLL_CLK_80M. 0: XTAL CLK."
                },
                {
                    "name": "mst_clk_active",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to power on the SPI module clock."
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable clk gate"
                }
            ],
            "id": "spi2.clk_gate",
            "name": "clk_gate",
            "offset": "0xe8",
            "doc": "SPI module clock and register clock control"
        },
        "spi2.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583648",
                    "doc": "SPI register version."
                }
            ],
            "id": "spi2.date",
            "name": "date",
            "offset": "0xf0",
            "doc": "Version control"
        },
        "system": {
            "type": "blk",
            "children": [
                "system.cpu_peri_clk_en",
                "system.cpu_peri_rst_en",
                "system.cpu_per_conf",
                "system.mem_pd_mask",
                "system.perip_clk_en0",
                "system.perip_clk_en1",
                "system.perip_rst_en0",
                "system.perip_rst_en1",
                "system.bt_lpck_div_int",
                "system.bt_lpck_div_frac",
                "system.cpu_intr_from_cpu_0",
                "system.cpu_intr_from_cpu_1",
                "system.cpu_intr_from_cpu_2",
                "system.cpu_intr_from_cpu_3",
                "system.rsa_pd_ctrl",
                "system.edma_ctrl",
                "system.cache_control",
                "system.external_device_encrypt_decrypt_control",
                "system.rtc_fastmem_config",
                "system.rtc_fastmem_crc",
                "system.redundant_eco_ctrl",
                "system.clock_gate",
                "system.sysclk_conf",
                "system.mem_pvt",
                "system.comb_pvt_lvt_conf",
                "system.comb_pvt_nvt_conf",
                "system.comb_pvt_hvt_conf",
                "system.comb_pvt_err_lvt_site0",
                "system.comb_pvt_err_nvt_site0",
                "system.comb_pvt_err_hvt_site0",
                "system.comb_pvt_err_lvt_site1",
                "system.comb_pvt_err_nvt_site1",
                "system.comb_pvt_err_hvt_site1",
                "system.comb_pvt_err_lvt_site2",
                "system.comb_pvt_err_nvt_site2",
                "system.comb_pvt_err_hvt_site2",
                "system.comb_pvt_err_lvt_site3",
                "system.comb_pvt_err_nvt_site3",
                "system.comb_pvt_err_hvt_site3",
                "system.system_reg_date"
            ],
            "id": "system",
            "name": "system",
            "offset": "0x600c0000",
            "doc": "System"
        },
        "system.cpu_peri_clk_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en_dedicated_gpio",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en_dedicated_gpio"
                },
                {
                    "name": "clk_en_assist_debug",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en_assist_debug"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "system.cpu_peri_clk_en",
            "name": "cpu_peri_clk_en",
            "offset": "0x0",
            "doc": "cpu_peripheral clock gating register"
        },
        "system.cpu_peri_rst_en": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rst_en_dedicated_gpio",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rst_en_dedicated_gpio"
                },
                {
                    "name": "rst_en_assist_debug",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rst_en_assist_debug"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "system.cpu_peri_rst_en",
            "name": "cpu_peri_rst_en",
            "offset": "0x4",
            "doc": "cpu_peripheral reset register"
        },
        "system.cpu_per_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_waiti_delay_num",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpu_waiti_delay_num"
                },
                {
                    "name": "cpu_wait_mode_force_on",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_cpu_wait_mode_force_on"
                },
                {
                    "name": "pll_freq_sel",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_pll_freq_sel"
                },
                {
                    "name": "cpuperiod_sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpuperiod_sel"
                }
            ],
            "id": "system.cpu_per_conf",
            "name": "cpu_per_conf",
            "offset": "0x8",
            "doc": "cpu clock config register"
        },
        "system.mem_pd_mask": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lslp_mem_pd_mask",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lslp_mem_pd_mask"
                }
            ],
            "id": "system.mem_pd_mask",
            "name": "mem_pd_mask",
            "offset": "0xc",
            "doc": "memory power down mask register"
        },
        "system.perip_clk_en0": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi4_clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi4_clk_en"
                },
                {
                    "name": "adc2_arb_clk_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_adc2_arb_clk_en"
                },
                {
                    "name": "systimer_clk_en",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_systimer_clk_en"
                },
                {
                    "name": "apb_saradc_clk_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_apb_saradc_clk_en"
                },
                {
                    "name": "spi3_dma_clk_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi3_dma_clk_en"
                },
                {
                    "name": "pwm3_clk_en",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm3_clk_en"
                },
                {
                    "name": "pwm2_clk_en",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm2_clk_en"
                },
                {
                    "name": "uart_mem_clk_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_uart_mem_clk_en"
                },
                {
                    "name": "usb_device_clk_en",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_usb_device_clk_en"
                },
                {
                    "name": "spi2_dma_clk_en",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi2_dma_clk_en"
                },
                {
                    "name": "i2s1_clk_en",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_i2s1_clk_en"
                },
                {
                    "name": "pwm1_clk_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm1_clk_en"
                },
                {
                    "name": "can_clk_en",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_can_clk_en"
                },
                {
                    "name": "ext1_clk_en",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ext1_clk_en"
                },
                {
                    "name": "pwm0_clk_en",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm0_clk_en"
                },
                {
                    "name": "spi3_clk_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi3_clk_en"
                },
                {
                    "name": "timergroup1_clk_en",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_timergroup1_clk_en"
                },
                {
                    "name": "efuse_clk_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_efuse_clk_en"
                },
                {
                    "name": "timergroup_clk_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_timergroup_clk_en"
                },
                {
                    "name": "uhci1_clk_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uhci1_clk_en"
                },
                {
                    "name": "ledc_clk_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ledc_clk_en"
                },
                {
                    "name": "pcnt_clk_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pcnt_clk_en"
                },
                {
                    "name": "rmt_clk_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_clk_en"
                },
                {
                    "name": "uhci0_clk_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uhci0_clk_en"
                },
                {
                    "name": "ext0_clk_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ext0_clk_en"
                },
                {
                    "name": "spi2_clk_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi2_clk_en"
                },
                {
                    "name": "uart1_clk_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_uart1_clk_en"
                },
                {
                    "name": "i2s0_clk_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_i2s0_clk_en"
                },
                {
                    "name": "wdg_clk_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdg_clk_en"
                },
                {
                    "name": "uart_clk_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_uart_clk_en"
                },
                {
                    "name": "spi01_clk_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_spi01_clk_en"
                },
                {
                    "name": "timers_clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_timers_clk_en"
                }
            ],
            "id": "system.perip_clk_en0",
            "name": "perip_clk_en0",
            "offset": "0x10",
            "doc": "peripheral clock gating register"
        },
        "system.perip_clk_en1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tsens_clk_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tsens_clk_en"
                },
                {
                    "name": "uart2_clk_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_uart2_clk_en"
                },
                {
                    "name": "lcd_cam_clk_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lcd_cam_clk_en"
                },
                {
                    "name": "sdio_host_clk_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_sdio_host_clk_en"
                },
                {
                    "name": "dma_clk_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_dma_clk_en"
                },
                {
                    "name": "crypto_hmac_clk_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_crypto_hmac_clk_en"
                },
                {
                    "name": "crypto_ds_clk_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_crypto_ds_clk_en"
                },
                {
                    "name": "crypto_rsa_clk_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_crypto_rsa_clk_en"
                },
                {
                    "name": "crypto_sha_clk_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_crypto_sha_clk_en"
                },
                {
                    "name": "crypto_aes_clk_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_crypto_aes_clk_en"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "system.perip_clk_en1",
            "name": "perip_clk_en1",
            "offset": "0x14",
            "doc": "peripheral clock gating register"
        },
        "system.perip_rst_en0": {
            "type": "reg",
            "fields": [
                {
                    "name": "spi4_rst",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi4_rst"
                },
                {
                    "name": "adc2_arb_rst",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_adc2_arb_rst"
                },
                {
                    "name": "systimer_rst",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_systimer_rst"
                },
                {
                    "name": "apb_saradc_rst",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_apb_saradc_rst"
                },
                {
                    "name": "spi3_dma_rst",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi3_dma_rst"
                },
                {
                    "name": "pwm3_rst",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm3_rst"
                },
                {
                    "name": "pwm2_rst",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm2_rst"
                },
                {
                    "name": "uart_mem_rst",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uart_mem_rst"
                },
                {
                    "name": "usb_device_rst",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_usb_device_rst"
                },
                {
                    "name": "spi2_dma_rst",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi2_dma_rst"
                },
                {
                    "name": "i2s1_rst",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_i2s1_rst"
                },
                {
                    "name": "pwm1_rst",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm1_rst"
                },
                {
                    "name": "can_rst",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_can_rst"
                },
                {
                    "name": "ext1_rst",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ext1_rst"
                },
                {
                    "name": "pwm0_rst",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pwm0_rst"
                },
                {
                    "name": "spi3_rst",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi3_rst"
                },
                {
                    "name": "timergroup1_rst",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timergroup1_rst"
                },
                {
                    "name": "efuse_rst",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_efuse_rst"
                },
                {
                    "name": "timergroup_rst",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timergroup_rst"
                },
                {
                    "name": "uhci1_rst",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uhci1_rst"
                },
                {
                    "name": "ledc_rst",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ledc_rst"
                },
                {
                    "name": "pcnt_rst",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_pcnt_rst"
                },
                {
                    "name": "rmt_rst",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rmt_rst"
                },
                {
                    "name": "uhci0_rst",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uhci0_rst"
                },
                {
                    "name": "ext0_rst",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_ext0_rst"
                },
                {
                    "name": "spi2_rst",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi2_rst"
                },
                {
                    "name": "uart1_rst",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uart1_rst"
                },
                {
                    "name": "i2s0_rst",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_i2s0_rst"
                },
                {
                    "name": "wdg_rst",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdg_rst"
                },
                {
                    "name": "uart_rst",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uart_rst"
                },
                {
                    "name": "spi01_rst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_spi01_rst"
                },
                {
                    "name": "timers_rst",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_timers_rst"
                }
            ],
            "id": "system.perip_rst_en0",
            "name": "perip_rst_en0",
            "offset": "0x18",
            "doc": "reserved"
        },
        "system.perip_rst_en1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tsens_rst",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_tsens_rst"
                },
                {
                    "name": "uart2_rst",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_uart2_rst"
                },
                {
                    "name": "lcd_cam_rst",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lcd_cam_rst"
                },
                {
                    "name": "sdio_host_rst",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_sdio_host_rst"
                },
                {
                    "name": "dma_rst",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_dma_rst"
                },
                {
                    "name": "crypto_hmac_rst",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_crypto_hmac_rst"
                },
                {
                    "name": "crypto_ds_rst",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_crypto_ds_rst"
                },
                {
                    "name": "crypto_rsa_rst",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_crypto_rsa_rst"
                },
                {
                    "name": "crypto_sha_rst",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_crypto_sha_rst"
                },
                {
                    "name": "crypto_aes_rst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_crypto_aes_rst"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "system.perip_rst_en1",
            "name": "perip_rst_en1",
            "offset": "0x1c",
            "doc": "peripheral reset register"
        },
        "system.bt_lpck_div_int": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bt_lpck_div_num",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "255",
                    "doc": "reg_bt_lpck_div_num"
                }
            ],
            "id": "system.bt_lpck_div_int",
            "name": "bt_lpck_div_int",
            "offset": "0x20",
            "doc": "clock config register"
        },
        "system.bt_lpck_div_frac": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lpclk_rtc_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lpclk_rtc_en"
                },
                {
                    "name": "lpclk_sel_xtal32k",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lpclk_sel_xtal32k"
                },
                {
                    "name": "lpclk_sel_xtal",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lpclk_sel_xtal"
                },
                {
                    "name": "lpclk_sel_8m",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_lpclk_sel_8m"
                },
                {
                    "name": "lpclk_sel_rtc_slow",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_lpclk_sel_rtc_slow"
                },
                {
                    "name": "bt_lpck_div_a",
                    "lsb": 12,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_bt_lpck_div_a"
                },
                {
                    "name": "bt_lpck_div_b",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_bt_lpck_div_b"
                }
            ],
            "id": "system.bt_lpck_div_frac",
            "name": "bt_lpck_div_frac",
            "offset": "0x24",
            "doc": "clock config register"
        },
        "system.cpu_intr_from_cpu_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpu_intr_from_cpu_0"
                }
            ],
            "id": "system.cpu_intr_from_cpu_0",
            "name": "cpu_intr_from_cpu_0",
            "offset": "0x28",
            "doc": "interrupt generate register"
        },
        "system.cpu_intr_from_cpu_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_1",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpu_intr_from_cpu_1"
                }
            ],
            "id": "system.cpu_intr_from_cpu_1",
            "name": "cpu_intr_from_cpu_1",
            "offset": "0x2c",
            "doc": "interrupt generate register"
        },
        "system.cpu_intr_from_cpu_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_2",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpu_intr_from_cpu_2"
                }
            ],
            "id": "system.cpu_intr_from_cpu_2",
            "name": "cpu_intr_from_cpu_2",
            "offset": "0x30",
            "doc": "interrupt generate register"
        },
        "system.cpu_intr_from_cpu_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cpu_intr_from_cpu_3",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_cpu_intr_from_cpu_3"
                }
            ],
            "id": "system.cpu_intr_from_cpu_3",
            "name": "cpu_intr_from_cpu_3",
            "offset": "0x34",
            "doc": "interrupt generate register"
        },
        "system.rsa_pd_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsa_mem_force_pd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rsa_mem_force_pd"
                },
                {
                    "name": "rsa_mem_force_pu",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rsa_mem_force_pu"
                },
                {
                    "name": "rsa_mem_pd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rsa_mem_pd"
                }
            ],
            "id": "system.rsa_pd_ctrl",
            "name": "rsa_pd_ctrl",
            "offset": "0x38",
            "doc": "rsa memory power control register"
        },
        "system.edma_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "edma_reset",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_edma_reset"
                },
                {
                    "name": "edma_clk_on",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_edma_clk_on"
                }
            ],
            "id": "system.edma_ctrl",
            "name": "edma_ctrl",
            "offset": "0x3c",
            "doc": "edma clcok and reset register"
        },
        "system.cache_control": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dcache_reset",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_dcache_reset"
                },
                {
                    "name": "dcache_clk_on",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_dcache_clk_on"
                },
                {
                    "name": "icache_reset",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_icache_reset"
                },
                {
                    "name": "icache_clk_on",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_icache_clk_on"
                }
            ],
            "id": "system.cache_control",
            "name": "cache_control",
            "offset": "0x40",
            "doc": "cache control register"
        },
        "system.external_device_encrypt_decrypt_control": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "enable_download_manual_encrypt",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_enable_download_manual_encrypt"
                },
                {
                    "name": "enable_download_g0cb_decrypt",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_enable_download_g0cb_decrypt"
                },
                {
                    "name": "enable_download_db_encrypt",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_enable_download_db_encrypt"
                },
                {
                    "name": "enable_spi_manual_encrypt",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_enable_spi_manual_encrypt"
                }
            ],
            "id": "system.external_device_encrypt_decrypt_control",
            "name": "external_device_encrypt_decrypt_control",
            "offset": "0x44",
            "doc": "SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_REG"
        },
        "system.rtc_fastmem_config": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_mem_crc_finish",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rtc_mem_crc_finish"
                },
                {
                    "name": "rtc_mem_crc_len",
                    "lsb": 20,
                    "nbits": 11,
                    "access": "read-write",
                    "reset": "2047",
                    "doc": "reg_rtc_mem_crc_len"
                },
                {
                    "name": "rtc_mem_crc_addr",
                    "lsb": 9,
                    "nbits": 11,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rtc_mem_crc_addr"
                },
                {
                    "name": "rtc_mem_crc_start",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rtc_mem_crc_start"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "system.rtc_fastmem_config",
            "name": "rtc_fastmem_config",
            "offset": "0x48",
            "doc": "fast memory config register"
        },
        "system.rtc_fastmem_crc": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_mem_crc_res",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_rtc_mem_crc_res"
                }
            ],
            "id": "system.rtc_fastmem_crc",
            "name": "rtc_fastmem_crc",
            "offset": "0x4c",
            "doc": "reserved"
        },
        "system.redundant_eco_ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "redundant_eco_result",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_redundant_eco_result"
                },
                {
                    "name": "redundant_eco_drive",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_redundant_eco_drive"
                }
            ],
            "id": "system.redundant_eco_ctrl",
            "name": "redundant_eco_ctrl",
            "offset": "0x50",
            "doc": "eco register"
        },
        "system.clock_gate": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_clk_en"
                }
            ],
            "id": "system.clock_gate",
            "name": "clock_gate",
            "offset": "0x54",
            "doc": "clock gating register"
        },
        "system.sysclk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_div_en",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_clk_div_en"
                },
                {
                    "name": "clk_xtal_freq",
                    "lsb": 12,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_clk_xtal_freq"
                },
                {
                    "name": "soc_clk_sel",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_soc_clk_sel"
                },
                {
                    "name": "pre_div_cnt",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_pre_div_cnt"
                }
            ],
            "id": "system.sysclk_conf",
            "name": "sysclk_conf",
            "offset": "0x58",
            "doc": "system clock config register"
        },
        "system.mem_pvt": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_vt_sel",
                    "lsb": 22,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_vt_sel"
                },
                {
                    "name": "mem_timing_err_cnt",
                    "lsb": 6,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_mem_timing_err_cnt"
                },
                {
                    "name": "monitor_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_mem_pvt_monitor_en"
                },
                {
                    "name": "mem_err_cnt_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_mem_err_cnt_clr"
                },
                {
                    "name": "mem_path_len",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_mem_path_len"
                }
            ],
            "id": "system.mem_pvt",
            "name": "mem_pvt",
            "offset": "0x5c",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_lvt_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_pvt_monitor_en_lvt",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_comb_pvt_monitor_en_lvt"
                },
                {
                    "name": "comb_err_cnt_clr_lvt",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_comb_err_cnt_clr_lvt"
                },
                {
                    "name": "comb_path_len_lvt",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_comb_path_len_lvt"
                }
            ],
            "id": "system.comb_pvt_lvt_conf",
            "name": "comb_pvt_lvt_conf",
            "offset": "0x60",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_nvt_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_pvt_monitor_en_nvt",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_comb_pvt_monitor_en_nvt"
                },
                {
                    "name": "comb_err_cnt_clr_nvt",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_comb_err_cnt_clr_nvt"
                },
                {
                    "name": "comb_path_len_nvt",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_comb_path_len_nvt"
                }
            ],
            "id": "system.comb_pvt_nvt_conf",
            "name": "comb_pvt_nvt_conf",
            "offset": "0x64",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_hvt_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_pvt_monitor_en_hvt",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_comb_pvt_monitor_en_hvt"
                },
                {
                    "name": "comb_err_cnt_clr_hvt",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_comb_err_cnt_clr_hvt"
                },
                {
                    "name": "comb_path_len_hvt",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_comb_path_len_hvt"
                }
            ],
            "id": "system.comb_pvt_hvt_conf",
            "name": "comb_pvt_hvt_conf",
            "offset": "0x68",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_lvt_site0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_lvt_site0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_lvt_site0"
                }
            ],
            "id": "system.comb_pvt_err_lvt_site0",
            "name": "comb_pvt_err_lvt_site0",
            "offset": "0x6c",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_nvt_site0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_nvt_site0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_nvt_site0"
                }
            ],
            "id": "system.comb_pvt_err_nvt_site0",
            "name": "comb_pvt_err_nvt_site0",
            "offset": "0x70",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_hvt_site0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_hvt_site0",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_hvt_site0"
                }
            ],
            "id": "system.comb_pvt_err_hvt_site0",
            "name": "comb_pvt_err_hvt_site0",
            "offset": "0x74",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_lvt_site1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_lvt_site1",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_lvt_site1"
                }
            ],
            "id": "system.comb_pvt_err_lvt_site1",
            "name": "comb_pvt_err_lvt_site1",
            "offset": "0x78",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_nvt_site1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_nvt_site1",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_nvt_site1"
                }
            ],
            "id": "system.comb_pvt_err_nvt_site1",
            "name": "comb_pvt_err_nvt_site1",
            "offset": "0x7c",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_hvt_site1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_hvt_site1",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_hvt_site1"
                }
            ],
            "id": "system.comb_pvt_err_hvt_site1",
            "name": "comb_pvt_err_hvt_site1",
            "offset": "0x80",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_lvt_site2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_lvt_site2",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_lvt_site2"
                }
            ],
            "id": "system.comb_pvt_err_lvt_site2",
            "name": "comb_pvt_err_lvt_site2",
            "offset": "0x84",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_nvt_site2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_nvt_site2",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_nvt_site2"
                }
            ],
            "id": "system.comb_pvt_err_nvt_site2",
            "name": "comb_pvt_err_nvt_site2",
            "offset": "0x88",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_hvt_site2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_hvt_site2",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_hvt_site2"
                }
            ],
            "id": "system.comb_pvt_err_hvt_site2",
            "name": "comb_pvt_err_hvt_site2",
            "offset": "0x8c",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_lvt_site3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_lvt_site3",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_lvt_site3"
                }
            ],
            "id": "system.comb_pvt_err_lvt_site3",
            "name": "comb_pvt_err_lvt_site3",
            "offset": "0x90",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_nvt_site3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_nvt_site3",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_nvt_site3"
                }
            ],
            "id": "system.comb_pvt_err_nvt_site3",
            "name": "comb_pvt_err_nvt_site3",
            "offset": "0x94",
            "doc": "mem pvt register"
        },
        "system.comb_pvt_err_hvt_site3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "comb_timing_err_cnt_hvt_site3",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_comb_timing_err_cnt_hvt_site3"
                }
            ],
            "id": "system.comb_pvt_err_hvt_site3",
            "name": "comb_pvt_err_hvt_site3",
            "offset": "0x98",
            "doc": "mem pvt register"
        },
        "system.system_reg_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "system_reg_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33583440",
                    "doc": "reg_system_reg_date"
                }
            ],
            "id": "system.system_reg_date",
            "name": "system_reg_date",
            "offset": "0xffc",
            "doc": "Version register"
        },
        "systimer": {
            "type": "blk",
            "children": [
                "systimer.conf",
                "systimer.unit0_op",
                "systimer.unit1_op",
                "systimer.unit0_load_hi",
                "systimer.unit0_load_lo",
                "systimer.unit1_load_hi",
                "systimer.unit1_load_lo",
                "systimer.target0_hi",
                "systimer.target0_lo",
                "systimer.target1_hi",
                "systimer.target1_lo",
                "systimer.target2_hi",
                "systimer.target2_lo",
                "systimer.target0_conf",
                "systimer.target1_conf",
                "systimer.target2_conf",
                "systimer.unit0_value_hi",
                "systimer.unit0_value_lo",
                "systimer.unit1_value_hi",
                "systimer.unit1_value_lo",
                "systimer.comp0_load",
                "systimer.comp1_load",
                "systimer.comp2_load",
                "systimer.unit0_load",
                "systimer.unit1_load",
                "systimer.int_ena",
                "systimer.int_raw",
                "systimer.int_clr",
                "systimer.int_st",
                "systimer.date"
            ],
            "id": "systimer",
            "name": "systimer",
            "offset": "0x60023000",
            "doc": "System Timer"
        },
        "systimer.conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "register file clk gating"
                },
                {
                    "name": "timer_unit0_work_en",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "timer unit0 work enable"
                },
                {
                    "name": "timer_unit1_work_en",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer unit1 work enable"
                },
                {
                    "name": "timer_unit0_core0_stall_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "If timer unit0 is stalled when core0 stalled"
                },
                {
                    "name": "timer_unit0_core1_stall_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "If timer unit0 is stalled when core1 stalled"
                },
                {
                    "name": "timer_unit1_core0_stall_en",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "If timer unit1 is stalled when core0 stalled"
                },
                {
                    "name": "timer_unit1_core1_stall_en",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "If timer unit1 is stalled when core1 stalled"
                },
                {
                    "name": "target0_work_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target0 work enable"
                },
                {
                    "name": "target1_work_en",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target1 work enable"
                },
                {
                    "name": "target2_work_en",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target2 work enable"
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "systimer_clk_fo",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "systimer clock force on"
                }
            ],
            "id": "systimer.conf",
            "name": "conf",
            "offset": "0x0",
            "doc": "SYSTIMER_CONF."
        },
        "systimer.unit0_op": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit0_update",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "update timer_unit0"
                },
                {
                    "name": "timer_unit0_value_valid",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_timer_unit0_value_valid"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "systimer.unit0_op",
            "name": "unit0_op",
            "offset": "0x4",
            "doc": "SYSTIMER_UNIT0_OP."
        },
        "systimer.unit1_op": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit1_update",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "update timer unit1"
                },
                {
                    "name": "timer_unit1_value_valid",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timer value is sync and valid"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "systimer.unit1_op",
            "name": "unit1_op",
            "offset": "0x8",
            "doc": "SYSTIMER_UNIT1_OP."
        },
        "systimer.unit0_load_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit0_load_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer unit0 load high 32 bit"
                }
            ],
            "id": "systimer.unit0_load_hi",
            "name": "unit0_load_hi",
            "offset": "0xc",
            "doc": "SYSTIMER_UNIT0_LOAD_HI."
        },
        "systimer.unit0_load_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_unit0_load_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer unit0 load low 32 bit"
                }
            ],
            "id": "systimer.unit0_load_lo",
            "name": "unit0_load_lo",
            "offset": "0x10",
            "doc": "SYSTIMER_UNIT0_LOAD_LO."
        },
        "systimer.unit1_load_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit1_load_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer unit1 load high 32 bit"
                }
            ],
            "id": "systimer.unit1_load_hi",
            "name": "unit1_load_hi",
            "offset": "0x14",
            "doc": "SYSTIMER_UNIT1_LOAD_HI."
        },
        "systimer.unit1_load_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_unit1_load_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer unit1 load low 32 bit"
                }
            ],
            "id": "systimer.unit1_load_lo",
            "name": "unit1_load_lo",
            "offset": "0x18",
            "doc": "SYSTIMER_UNIT1_LOAD_LO."
        },
        "systimer.target0_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_target0_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget0 high 32 bit"
                }
            ],
            "id": "systimer.target0_hi",
            "name": "target0_hi",
            "offset": "0x1c",
            "doc": "SYSTIMER_TARGET0_HI."
        },
        "systimer.target0_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_target0_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget0 low 32 bit"
                }
            ],
            "id": "systimer.target0_lo",
            "name": "target0_lo",
            "offset": "0x20",
            "doc": "SYSTIMER_TARGET0_LO."
        },
        "systimer.target1_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_target1_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget1 high 32 bit"
                }
            ],
            "id": "systimer.target1_hi",
            "name": "target1_hi",
            "offset": "0x24",
            "doc": "SYSTIMER_TARGET1_HI."
        },
        "systimer.target1_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_target1_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget1 low 32 bit"
                }
            ],
            "id": "systimer.target1_lo",
            "name": "target1_lo",
            "offset": "0x28",
            "doc": "SYSTIMER_TARGET1_LO."
        },
        "systimer.target2_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_target2_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget2 high 32 bit"
                }
            ],
            "id": "systimer.target2_hi",
            "name": "target2_hi",
            "offset": "0x2c",
            "doc": "SYSTIMER_TARGET2_HI."
        },
        "systimer.target2_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_target2_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "timer taget2 low 32 bit"
                }
            ],
            "id": "systimer.target2_lo",
            "name": "target2_lo",
            "offset": "0x30",
            "doc": "SYSTIMER_TARGET2_LO."
        },
        "systimer.target0_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "target0_timer_unit_sel",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "select which unit to compare"
                },
                {
                    "name": "target0_period_mode",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set target0 to period mode"
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target0_period",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target0 period"
                }
            ],
            "id": "systimer.target0_conf",
            "name": "target0_conf",
            "offset": "0x34",
            "doc": "SYSTIMER_TARGET0_CONF."
        },
        "systimer.target1_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "target1_timer_unit_sel",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "select which unit to compare"
                },
                {
                    "name": "target1_period_mode",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set target1 to period mode"
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target1_period",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target1 period"
                }
            ],
            "id": "systimer.target1_conf",
            "name": "target1_conf",
            "offset": "0x38",
            "doc": "SYSTIMER_TARGET1_CONF."
        },
        "systimer.target2_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "target2_timer_unit_sel",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "select which unit to compare"
                },
                {
                    "name": "target2_period_mode",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set target2 to period mode"
                },
                {
                    "name": "rsvd0",
                    "lsb": 26,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target2_period",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "target2 period"
                }
            ],
            "id": "systimer.target2_conf",
            "name": "target2_conf",
            "offset": "0x3c",
            "doc": "SYSTIMER_TARGET2_CONF."
        },
        "systimer.unit0_value_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit0_value_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timer read value high 32bit"
                }
            ],
            "id": "systimer.unit0_value_hi",
            "name": "unit0_value_hi",
            "offset": "0x40",
            "doc": "SYSTIMER_UNIT0_VALUE_HI."
        },
        "systimer.unit0_value_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_unit0_value_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timer read value low 32bit"
                }
            ],
            "id": "systimer.unit0_value_lo",
            "name": "unit0_value_lo",
            "offset": "0x44",
            "doc": "SYSTIMER_UNIT0_VALUE_LO."
        },
        "systimer.unit1_value_hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit1_value_hi",
                    "lsb": 0,
                    "nbits": 20,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timer read value high 32bit"
                }
            ],
            "id": "systimer.unit1_value_hi",
            "name": "unit1_value_hi",
            "offset": "0x48",
            "doc": "SYSTIMER_UNIT1_VALUE_HI."
        },
        "systimer.unit1_value_lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "timer_unit1_value_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timer read value low 32bit"
                }
            ],
            "id": "systimer.unit1_value_lo",
            "name": "unit1_value_lo",
            "offset": "0x4c",
            "doc": "SYSTIMER_UNIT1_VALUE_LO."
        },
        "systimer.comp0_load": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_comp0_load",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer comp0 load value"
                }
            ],
            "id": "systimer.comp0_load",
            "name": "comp0_load",
            "offset": "0x50",
            "doc": "SYSTIMER_COMP0_LOAD."
        },
        "systimer.comp1_load": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_comp1_load",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer comp1 load value"
                }
            ],
            "id": "systimer.comp1_load",
            "name": "comp1_load",
            "offset": "0x54",
            "doc": "SYSTIMER_COMP1_LOAD."
        },
        "systimer.comp2_load": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_comp2_load",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer comp2 load value"
                }
            ],
            "id": "systimer.comp2_load",
            "name": "comp2_load",
            "offset": "0x58",
            "doc": "SYSTIMER_COMP2_LOAD."
        },
        "systimer.unit0_load": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit0_load",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer unit0 load value"
                }
            ],
            "id": "systimer.unit0_load",
            "name": "unit0_load",
            "offset": "0x5c",
            "doc": "SYSTIMER_UNIT0_LOAD."
        },
        "systimer.unit1_load": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "timer_unit1_load",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "timer unit1 load value"
                }
            ],
            "id": "systimer.unit1_load",
            "name": "unit1_load",
            "offset": "0x60",
            "doc": "SYSTIMER_UNIT1_LOAD."
        },
        "systimer.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target2_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "interupt2 enable"
                },
                {
                    "name": "target1_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "interupt1 enable"
                },
                {
                    "name": "target0_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "interupt0 enable"
                }
            ],
            "id": "systimer.int_ena",
            "name": "int_ena",
            "offset": "0x64",
            "doc": "SYSTIMER_INT_ENA."
        },
        "systimer.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target2_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "interupt2 raw"
                },
                {
                    "name": "target1_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "interupt1 raw"
                },
                {
                    "name": "target0_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "interupt0 raw"
                }
            ],
            "id": "systimer.int_raw",
            "name": "int_raw",
            "offset": "0x68",
            "doc": "SYSTIMER_INT_RAW."
        },
        "systimer.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target2_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "interupt2 clear"
                },
                {
                    "name": "target1_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "interupt1 clear"
                },
                {
                    "name": "target0_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "interupt0 clear"
                }
            ],
            "id": "systimer.int_clr",
            "name": "int_clr",
            "offset": "0x6c",
            "doc": "SYSTIMER_INT_CLR."
        },
        "systimer.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "target2_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_target2_int_st"
                },
                {
                    "name": "target1_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_target1_int_st"
                },
                {
                    "name": "target0_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "reg_target0_int_st"
                }
            ],
            "id": "systimer.int_st",
            "name": "int_st",
            "offset": "0x70",
            "doc": "SYSTIMER_INT_ST."
        },
        "systimer.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33579377",
                    "doc": "reg_date"
                }
            ],
            "id": "systimer.date",
            "name": "date",
            "offset": "0xfc",
            "doc": "SYSTIMER_DATE."
        },
        "timg0": {
            "type": "blk",
            "children": [
                "timg0.t0config",
                "timg0.t0lo",
                "timg0.t0hi",
                "timg0.t0update",
                "timg0.t0alarmlo",
                "timg0.t0alarmhi",
                "timg0.t0loadlo",
                "timg0.t0loadhi",
                "timg0.t0load",
                "timg0.wdtconfig0",
                "timg0.wdtconfig1",
                "timg0.wdtconfig2",
                "timg0.wdtconfig3",
                "timg0.wdtconfig4",
                "timg0.wdtconfig5",
                "timg0.wdtfeed",
                "timg0.wdtwprotect",
                "timg0.rtccalicfg",
                "timg0.rtccalicfg1",
                "timg0.int_ena_timg",
                "timg0.int_raw_timers",
                "timg0.int_st_timg",
                "timg0.int_clr_timers",
                "timg0.rtccalicfg2",
                "timg0.ntimg_date",
                "timg0.regclk"
            ],
            "id": "timg0",
            "name": "timg0",
            "offset": "0x6001f000",
            "doc": "Timer Group"
        },
        "timg0.t0config": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_en."
                },
                {
                    "name": "t0_increase",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_t0_increase."
                },
                {
                    "name": "t0_autoreload",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_t0_autoreload."
                },
                {
                    "name": "t0_divider",
                    "lsb": 13,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_t0_divider."
                },
                {
                    "name": "t0_divcnt_rst",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_t0_divcnt_rst."
                },
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "t0_alarm_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_alarm_en."
                },
                {
                    "name": "t0_use_xtal",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_use_xtal."
                },
                {
                    "name": "rsvd1",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "timg0.t0config",
            "name": "t0config",
            "offset": "0x0",
            "doc": "TIMG_T0CONFIG_REG."
        },
        "timg0.t0lo": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "t0_lo"
                }
            ],
            "id": "timg0.t0lo",
            "name": "t0lo",
            "offset": "0x4",
            "doc": "TIMG_T0LO_REG."
        },
        "timg0.t0hi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "t0_hi",
                    "lsb": 0,
                    "nbits": 22,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "t0_hi"
                }
            ],
            "id": "timg0.t0hi",
            "name": "t0hi",
            "offset": "0x8",
            "doc": "TIMG_T0HI_REG."
        },
        "timg0.t0update": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_update",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "t0_update"
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "timg0.t0update",
            "name": "t0update",
            "offset": "0xc",
            "doc": "TIMG_T0UPDATE_REG."
        },
        "timg0.t0alarmlo": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_alarm_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_alarm_lo."
                }
            ],
            "id": "timg0.t0alarmlo",
            "name": "t0alarmlo",
            "offset": "0x10",
            "doc": "TIMG_T0ALARMLO_REG."
        },
        "timg0.t0alarmhi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "t0_alarm_hi",
                    "lsb": 0,
                    "nbits": 22,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_alarm_hi."
                }
            ],
            "id": "timg0.t0alarmhi",
            "name": "t0alarmhi",
            "offset": "0x14",
            "doc": "TIMG_T0ALARMHI_REG."
        },
        "timg0.t0loadlo": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_load_lo",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_load_lo."
                }
            ],
            "id": "timg0.t0loadlo",
            "name": "t0loadlo",
            "offset": "0x18",
            "doc": "TIMG_T0LOADLO_REG."
        },
        "timg0.t0loadhi": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "t0_load_hi",
                    "lsb": 0,
                    "nbits": 22,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_t0_load_hi."
                }
            ],
            "id": "timg0.t0loadhi",
            "name": "t0loadhi",
            "offset": "0x1c",
            "doc": "TIMG_T0LOADHI_REG."
        },
        "timg0.t0load": {
            "type": "reg",
            "fields": [
                {
                    "name": "t0_load",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "t0_load"
                }
            ],
            "id": "timg0.t0load",
            "name": "t0load",
            "offset": "0x20",
            "doc": "TIMG_T0LOAD_REG."
        },
        "timg0.wdtconfig0": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_en."
                },
                {
                    "name": "wdt_stg0",
                    "lsb": 29,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_stg0."
                },
                {
                    "name": "wdt_stg1",
                    "lsb": 27,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_stg1."
                },
                {
                    "name": "wdt_stg2",
                    "lsb": 25,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_stg2."
                },
                {
                    "name": "wdt_stg3",
                    "lsb": 23,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_stg3."
                },
                {
                    "name": "wdt_conf_update_en",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_wdt_conf_update_en."
                },
                {
                    "name": "wdt_use_xtal",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_use_xtal."
                },
                {
                    "name": "wdt_cpu_reset_length",
                    "lsb": 18,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdt_cpu_reset_length."
                },
                {
                    "name": "wdt_sys_reset_length",
                    "lsb": 15,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdt_sys_reset_length."
                },
                {
                    "name": "wdt_flashboot_mod_en",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdt_flashboot_mod_en."
                },
                {
                    "name": "wdt_procpu_reset_en",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_procpu_reset_en."
                },
                {
                    "name": "wdt_appcpu_reset_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_wdt_appcpu_reset_en."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "timg0.wdtconfig0",
            "name": "wdtconfig0",
            "offset": "0x48",
            "doc": "TIMG_WDTCONFIG0_REG."
        },
        "timg0.wdtconfig1": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_clk_prescale",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdt_clk_prescale."
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wdt_divcnt_rst",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "reg_wdt_divcnt_rst."
                }
            ],
            "id": "timg0.wdtconfig1",
            "name": "wdtconfig1",
            "offset": "0x4c",
            "doc": "TIMG_WDTCONFIG1_REG."
        },
        "timg0.wdtconfig2": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg0_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "26000000",
                    "doc": "reg_wdt_stg0_hold."
                }
            ],
            "id": "timg0.wdtconfig2",
            "name": "wdtconfig2",
            "offset": "0x50",
            "doc": "TIMG_WDTCONFIG2_REG."
        },
        "timg0.wdtconfig3": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg1_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "134217727",
                    "doc": "reg_wdt_stg1_hold."
                }
            ],
            "id": "timg0.wdtconfig3",
            "name": "wdtconfig3",
            "offset": "0x54",
            "doc": "TIMG_WDTCONFIG3_REG."
        },
        "timg0.wdtconfig4": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg2_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1048575",
                    "doc": "reg_wdt_stg2_hold."
                }
            ],
            "id": "timg0.wdtconfig4",
            "name": "wdtconfig4",
            "offset": "0x58",
            "doc": "TIMG_WDTCONFIG4_REG."
        },
        "timg0.wdtconfig5": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_stg3_hold",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1048575",
                    "doc": "reg_wdt_stg3_hold."
                }
            ],
            "id": "timg0.wdtconfig5",
            "name": "wdtconfig5",
            "offset": "0x5c",
            "doc": "TIMG_WDTCONFIG5_REG."
        },
        "timg0.wdtfeed": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_feed",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "wdt_feed"
                }
            ],
            "id": "timg0.wdtfeed",
            "name": "wdtfeed",
            "offset": "0x60",
            "doc": "TIMG_WDTFEED_REG."
        },
        "timg0.wdtwprotect": {
            "type": "reg",
            "fields": [
                {
                    "name": "wdt_wkey",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "1356348065",
                    "doc": "reg_wdt_wkey."
                }
            ],
            "id": "timg0.wdtwprotect",
            "name": "wdtwprotect",
            "offset": "0x64",
            "doc": "TIMG_WDTWPROTECT_REG."
        },
        "timg0.rtccalicfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_cali_start",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_rtc_cali_start."
                },
                {
                    "name": "rtc_cali_max",
                    "lsb": 16,
                    "nbits": 15,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rtc_cali_max."
                },
                {
                    "name": "rtc_cali_rdy",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc_cali_rdy"
                },
                {
                    "name": "rtc_cali_clk_sel",
                    "lsb": 13,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rtc_cali_clk_sel.0:rtcslowclock.1:clk_80m.2:xtal_32k"
                },
                {
                    "name": "rtc_cali_start_cycling",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_rtc_cali_start_cycling."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "timg0.rtccalicfg",
            "name": "rtccalicfg",
            "offset": "0x68",
            "doc": "TIMG_RTCCALICFG_REG."
        },
        "timg0.rtccalicfg1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_cali_value",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc_cali_value"
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 6,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_cali_cycling_data_vld",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "rtc_cali_cycling_data_vld"
                }
            ],
            "id": "timg0.rtccalicfg1",
            "name": "rtccalicfg1",
            "offset": "0x6c",
            "doc": "TIMG_RTCCALICFG1_REG."
        },
        "timg0.int_ena_timg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wdt_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "wdt_int_ena"
                },
                {
                    "name": "t0_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "t0_int_ena"
                }
            ],
            "id": "timg0.int_ena_timg",
            "name": "int_ena_timg",
            "offset": "0x70",
            "doc": "INT_ENA_TIMG_REG"
        },
        "timg0.int_raw_timers": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wdt_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "wdt_int_raw"
                },
                {
                    "name": "t0_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "t0_int_raw"
                }
            ],
            "id": "timg0.int_raw_timers",
            "name": "int_raw_timers",
            "offset": "0x74",
            "doc": "INT_RAW_TIMG_REG"
        },
        "timg0.int_st_timg": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wdt_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "wdt_int_st"
                },
                {
                    "name": "t0_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "t0_int_st"
                }
            ],
            "id": "timg0.int_st_timg",
            "name": "int_st_timg",
            "offset": "0x78",
            "doc": "INT_ST_TIMG_REG"
        },
        "timg0.int_clr_timers": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wdt_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "wdt_int_clr"
                },
                {
                    "name": "t0_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "t0_int_clr"
                }
            ],
            "id": "timg0.int_clr_timers",
            "name": "int_clr_timers",
            "offset": "0x7c",
            "doc": "INT_CLR_TIMG_REG"
        },
        "timg0.rtccalicfg2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rtc_cali_timeout_thres",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "read-write",
                    "reset": "33554431",
                    "doc": "reg_rtc_cali_timeout_thres.timeoutifcalivaluecountsoverthreshold"
                },
                {
                    "name": "rtc_cali_timeout_rst_cnt",
                    "lsb": 3,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "reg_rtc_cali_timeout_rst_cnt.Cyclesthatreleasecalibrationtimeoutreset"
                },
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rtc_cali_timeout",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "timeoutindicator"
                }
            ],
            "id": "timg0.rtccalicfg2",
            "name": "rtccalicfg2",
            "offset": "0x80",
            "doc": "TIMG_RTCCALICFG2_REG."
        },
        "timg0.ntimg_date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ntimgs_date",
                    "lsb": 0,
                    "nbits": 28,
                    "access": "read-write",
                    "reset": "33579409",
                    "doc": "reg_ntimers_date."
                }
            ],
            "id": "timg0.ntimg_date",
            "name": "ntimg_date",
            "offset": "0xf8",
            "doc": "TIMG_NTIMG_DATE_REG."
        },
        "timg0.regclk": {
            "type": "reg",
            "fields": [
                {
                    "name": "clk_en",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "reg_clk_en."
                },
                {
                    "name": "timer_clk_is_active",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_timer_clk_is_active."
                },
                {
                    "name": "wdt_clk_is_active",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "reg_wdt_clk_is_active."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "timg0.regclk",
            "name": "regclk",
            "offset": "0xfc",
            "doc": "TIMG_REGCLK_REG."
        },
        "timg1": {
            "type": "blk",
            "children": [],
            "id": "timg1",
            "name": "timg1",
            "offset": "0x60020000",
            "doc": "Timer Group"
        },
        "uart0": {
            "type": "blk",
            "children": [
                "uart0.fifo",
                "uart0.int_raw",
                "uart0.int_st",
                "uart0.int_ena",
                "uart0.int_clr",
                "uart0.clkdiv",
                "uart0.rx_filt",
                "uart0.status",
                "uart0.conf0",
                "uart0.conf1",
                "uart0.lowpulse",
                "uart0.highpulse",
                "uart0.rxd_cnt",
                "uart0.flow_conf",
                "uart0.sleep_conf",
                "uart0.swfc_conf0",
                "uart0.swfc_conf1",
                "uart0.txbrk_conf",
                "uart0.idle_conf",
                "uart0.rs485_conf",
                "uart0.at_cmd_precnt",
                "uart0.at_cmd_postcnt",
                "uart0.at_cmd_gaptout",
                "uart0.at_cmd_char",
                "uart0.mem_conf",
                "uart0.mem_tx_status",
                "uart0.mem_rx_status",
                "uart0.fsm_status",
                "uart0.pospulse",
                "uart0.negpulse",
                "uart0.clk_conf",
                "uart0.date",
                "uart0.id"
            ],
            "id": "uart0",
            "name": "uart0",
            "offset": "0x60000000",
            "doc": "UART (Universal Asynchronous Receiver-Transmitter) Controller"
        },
        "uart0.fifo": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxfifo_rd_byte",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "UART 0 accesses FIFO via this register."
                }
            ],
            "id": "uart0.fifo",
            "name": "fifo",
            "offset": "0x0",
            "doc": "FIFO data register"
        },
        "uart0.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wakeup_int_raw",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when input rxd edge changes more times than what reg_active_threshold specifies in light sleeping mode."
                },
                {
                    "name": "at_cmd_char_det_int_raw",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects the configured at_cmd char."
                },
                {
                    "name": "rs485_clash_int_raw",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when detects a clash between transmitter and receiver in rs485 mode."
                },
                {
                    "name": "rs485_frm_err_int_raw",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a data frame error from the echo of transmitter in rs485 mode."
                },
                {
                    "name": "rs485_parity_err_int_raw",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a parity error from the echo of transmitter in rs485 mode."
                },
                {
                    "name": "tx_done_int_raw",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when transmitter has send out all data in FIFO."
                },
                {
                    "name": "tx_brk_idle_done_int_raw",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when transmitter has kept the shortest duration after sending the  last data."
                },
                {
                    "name": "tx_brk_done_int_raw",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when transmitter completes  sending  NULL characters, after all data in Tx-FIFO are sent."
                },
                {
                    "name": "glitch_det_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a glitch in the middle of a start bit."
                },
                {
                    "name": "sw_xoff_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver receives Xoff char when uart_sw_flow_con_en is set to 1."
                },
                {
                    "name": "sw_xon_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver recevies Xon char when uart_sw_flow_con_en is set to 1."
                },
                {
                    "name": "rxfifo_tout_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver takes more time than rx_tout_thrhd to receive a byte."
                },
                {
                    "name": "brk_det_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a 0 after the stop bit."
                },
                {
                    "name": "cts_chg_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects the edge change of CTSn signal."
                },
                {
                    "name": "dsr_chg_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects the edge change of DSRn signal."
                },
                {
                    "name": "rxfifo_ovf_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver receives more data than the FIFO can store."
                },
                {
                    "name": "frm_err_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a data frame error ."
                },
                {
                    "name": "parity_err_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver detects a parity error in the data."
                },
                {
                    "name": "txfifo_empty_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This interrupt raw bit turns to high level when the amount of data in Tx-FIFO is less than what txfifo_empty_thrhd specifies ."
                },
                {
                    "name": "rxfifo_full_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This interrupt raw bit turns to high level when receiver receives more data than what rxfifo_full_thrhd specifies."
                }
            ],
            "id": "uart0.int_raw",
            "name": "int_raw",
            "offset": "0x4",
            "doc": "Raw interrupt status"
        },
        "uart0.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wakeup_int_st",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for uart_wakeup_int_raw when uart_wakeup_int_ena is set to 1."
                },
                {
                    "name": "at_cmd_char_det_int_st",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for at_cmd_det_int_raw when at_cmd_char_det_int_ena is set to 1."
                },
                {
                    "name": "rs485_clash_int_st",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rs485_clash_int_raw when rs485_clash_int_ena is set to 1."
                },
                {
                    "name": "rs485_frm_err_int_st",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rs485_frm_err_int_raw when rs485_fm_err_int_ena is set to 1."
                },
                {
                    "name": "rs485_parity_err_int_st",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rs485_parity_err_int_raw when rs485_parity_int_ena is set to 1."
                },
                {
                    "name": "tx_done_int_st",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for tx_done_int_raw when tx_done_int_ena is set to 1."
                },
                {
                    "name": "tx_brk_idle_done_int_st",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the stauts bit for tx_brk_idle_done_int_raw when tx_brk_idle_done_int_ena is set to 1."
                },
                {
                    "name": "tx_brk_done_int_st",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for tx_brk_done_int_raw when tx_brk_done_int_ena is set to 1."
                },
                {
                    "name": "glitch_det_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for glitch_det_int_raw when glitch_det_int_ena is set to 1."
                },
                {
                    "name": "sw_xoff_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for sw_xoff_int_raw when sw_xoff_int_ena is set to 1."
                },
                {
                    "name": "sw_xon_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for sw_xon_int_raw when sw_xon_int_ena is set to 1."
                },
                {
                    "name": "rxfifo_tout_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rxfifo_tout_int_raw when rxfifo_tout_int_ena is set to 1."
                },
                {
                    "name": "brk_det_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for brk_det_int_raw when brk_det_int_ena is set to 1."
                },
                {
                    "name": "cts_chg_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for cts_chg_int_raw when cts_chg_int_ena is set to 1."
                },
                {
                    "name": "dsr_chg_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for dsr_chg_int_raw when dsr_chg_int_ena is set to 1."
                },
                {
                    "name": "rxfifo_ovf_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rxfifo_ovf_int_raw when rxfifo_ovf_int_ena is set to 1."
                },
                {
                    "name": "frm_err_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for frm_err_int_raw when frm_err_int_ena is set to 1."
                },
                {
                    "name": "parity_err_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for parity_err_int_raw when parity_err_int_ena is set to 1."
                },
                {
                    "name": "txfifo_empty_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for  txfifo_empty_int_raw  when txfifo_empty_int_ena is set to 1."
                },
                {
                    "name": "rxfifo_full_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status bit for rxfifo_full_int_raw when rxfifo_full_int_ena is set to 1."
                }
            ],
            "id": "uart0.int_st",
            "name": "int_st",
            "offset": "0x8",
            "doc": "Masked interrupt status"
        },
        "uart0.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wakeup_int_ena",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for uart_wakeup_int_st register."
                },
                {
                    "name": "at_cmd_char_det_int_ena",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for at_cmd_char_det_int_st register."
                },
                {
                    "name": "rs485_clash_int_ena",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rs485_clash_int_st register."
                },
                {
                    "name": "rs485_frm_err_int_ena",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rs485_parity_err_int_st register."
                },
                {
                    "name": "rs485_parity_err_int_ena",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rs485_parity_err_int_st register."
                },
                {
                    "name": "tx_done_int_ena",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for tx_done_int_st register."
                },
                {
                    "name": "tx_brk_idle_done_int_ena",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for tx_brk_idle_done_int_st register."
                },
                {
                    "name": "tx_brk_done_int_ena",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for tx_brk_done_int_st register."
                },
                {
                    "name": "glitch_det_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for glitch_det_int_st register."
                },
                {
                    "name": "sw_xoff_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for sw_xoff_int_st register."
                },
                {
                    "name": "sw_xon_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for sw_xon_int_st register."
                },
                {
                    "name": "rxfifo_tout_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rxfifo_tout_int_st register."
                },
                {
                    "name": "brk_det_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for brk_det_int_st register."
                },
                {
                    "name": "cts_chg_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for cts_chg_int_st register."
                },
                {
                    "name": "dsr_chg_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for dsr_chg_int_st register."
                },
                {
                    "name": "rxfifo_ovf_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rxfifo_ovf_int_st register."
                },
                {
                    "name": "frm_err_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for frm_err_int_st register."
                },
                {
                    "name": "parity_err_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for parity_err_int_st register."
                },
                {
                    "name": "txfifo_empty_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for txfifo_empty_int_st register."
                },
                {
                    "name": "rxfifo_full_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for rxfifo_full_int_st register."
                }
            ],
            "id": "uart0.int_ena",
            "name": "int_ena",
            "offset": "0xc",
            "doc": "Interrupt enable bits"
        },
        "uart0.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "wakeup_int_clr",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the uart_wakeup_int_raw interrupt."
                },
                {
                    "name": "at_cmd_char_det_int_clr",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the at_cmd_char_det_int_raw interrupt."
                },
                {
                    "name": "rs485_clash_int_clr",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the rs485_clash_int_raw interrupt."
                },
                {
                    "name": "rs485_frm_err_int_clr",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the rs485_frm_err_int_raw interrupt."
                },
                {
                    "name": "rs485_parity_err_int_clr",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the rs485_parity_err_int_raw interrupt."
                },
                {
                    "name": "tx_done_int_clr",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the tx_done_int_raw interrupt."
                },
                {
                    "name": "tx_brk_idle_done_int_clr",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the tx_brk_idle_done_int_raw interrupt."
                },
                {
                    "name": "tx_brk_done_int_clr",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the tx_brk_done_int_raw interrupt.."
                },
                {
                    "name": "glitch_det_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the glitch_det_int_raw interrupt."
                },
                {
                    "name": "sw_xoff_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the sw_xoff_int_raw interrupt."
                },
                {
                    "name": "sw_xon_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the sw_xon_int_raw interrupt."
                },
                {
                    "name": "rxfifo_tout_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the rxfifo_tout_int_raw interrupt."
                },
                {
                    "name": "brk_det_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the brk_det_int_raw interrupt."
                },
                {
                    "name": "cts_chg_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the cts_chg_int_raw interrupt."
                },
                {
                    "name": "dsr_chg_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the dsr_chg_int_raw interrupt."
                },
                {
                    "name": "rxfifo_ovf_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear rxfifo_ovf_int_raw interrupt."
                },
                {
                    "name": "frm_err_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear frm_err_int_raw interrupt."
                },
                {
                    "name": "parity_err_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear parity_err_int_raw interrupt."
                },
                {
                    "name": "txfifo_empty_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear txfifo_empty_int_raw interrupt."
                },
                {
                    "name": "rxfifo_full_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the rxfifo_full_int_raw interrupt."
                }
            ],
            "id": "uart0.int_clr",
            "name": "int_clr",
            "offset": "0x10",
            "doc": "Interrupt clear bits"
        },
        "uart0.clkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "frag",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The decimal part of the frequency divider factor."
                },
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clkdiv",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-write",
                    "reset": "694",
                    "doc": "The integral part of the frequency divider factor."
                }
            ],
            "id": "uart0.clkdiv",
            "name": "clkdiv",
            "offset": "0x14",
            "doc": "Clock divider configuration"
        },
        "uart0.rx_filt": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "glitch_filt_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable Rx signal filter."
                },
                {
                    "name": "glitch_filt",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "8",
                    "doc": "when input pulse width is lower than this value, the pulse is ignored."
                }
            ],
            "id": "uart0.rx_filt",
            "name": "rx_filt",
            "offset": "0x18",
            "doc": "Rx Filter configuration"
        },
        "uart0.status": {
            "type": "reg",
            "fields": [
                {
                    "name": "txd",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This bit represents the  level of the internal uart txd signal."
                },
                {
                    "name": "rtsn",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This bit represents the level of the internal uart rts signal."
                },
                {
                    "name": "dtrn",
                    "lsb": 29,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This bit represents the level of the internal uart dtr signal."
                },
                {
                    "name": "rsvd1",
                    "lsb": 26,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "txfifo_cnt",
                    "lsb": 16,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the byte number of data in Tx-FIFO."
                },
                {
                    "name": "rxd",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This register represent the  level value of the internal uart rxd signal."
                },
                {
                    "name": "ctsn",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "This register represent the level value of the internal uart cts signal."
                },
                {
                    "name": "dsrn",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The register represent the level value of the internal uart dsr signal."
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxfifo_cnt",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Stores the byte number of valid data in Rx-FIFO."
                }
            ],
            "id": "uart0.status",
            "name": "status",
            "offset": "0x1c",
            "doc": "UART status register"
        },
        "uart0.conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 29,
                    "nbits": 3,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_clk_en",
                    "lsb": 28,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "UART memory clock gate enable signal."
                },
                {
                    "name": "autobaud_en",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enable bit for detecting baudrate."
                },
                {
                    "name": "err_wr_mask",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'h1: Receiver stops storing data into FIFO when data is wrong. 1'h0: Receiver stores the data even if the  received data is wrong."
                },
                {
                    "name": "clk_en",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers."
                },
                {
                    "name": "dtr_inv",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart dtr signal."
                },
                {
                    "name": "rts_inv",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart rts signal."
                },
                {
                    "name": "txd_inv",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart txd signal."
                },
                {
                    "name": "dsr_inv",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart dsr signal."
                },
                {
                    "name": "cts_inv",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart cts signal."
                },
                {
                    "name": "rxd_inv",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to inverse the level value of uart rxd signal."
                },
                {
                    "name": "txfifo_rst",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to reset the uart transmit-FIFO."
                },
                {
                    "name": "rxfifo_rst",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to reset the uart receive-FIFO."
                },
                {
                    "name": "irda_en",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable IrDA protocol."
                },
                {
                    "name": "tx_flow_en",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable flow control function for transmitter."
                },
                {
                    "name": "loopback",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable uart loopback test mode."
                },
                {
                    "name": "irda_rx_inv",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to invert the level of IrDA receiver."
                },
                {
                    "name": "irda_tx_inv",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to invert the level of  IrDA transmitter."
                },
                {
                    "name": "irda_wctl",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'h1: The IrDA transmitter's 11th bit is the same as 10th bit. 1'h0: Set IrDA transmitter's 11th bit to 0."
                },
                {
                    "name": "irda_tx_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the start enable bit for IrDA transmitter."
                },
                {
                    "name": "irda_dplx",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable IrDA loopback mode."
                },
                {
                    "name": "txd_brk",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enbale transmitter to  send NULL when the process of sending data is done."
                },
                {
                    "name": "sw_dtr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to configure the software dtr signal which is used in software flow control."
                },
                {
                    "name": "sw_rts",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to configure the software rts signal which is used in software flow control."
                },
                {
                    "name": "stop_bit_num",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This register is used to set the length of  stop bit."
                },
                {
                    "name": "bit_num",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "This register is used to set the length of data."
                },
                {
                    "name": "parity_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable uart parity check."
                },
                {
                    "name": "parity",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to configure the parity check mode."
                }
            ],
            "id": "uart0.conf0",
            "name": "conf0",
            "offset": "0x20",
            "doc": "a"
        },
        "uart0.conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 22,
                    "nbits": 10,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_tout_en",
                    "lsb": 21,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the enble bit for uart receiver's timeout function."
                },
                {
                    "name": "rx_flow_en",
                    "lsb": 20,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This is the flow enable bit for UART receiver."
                },
                {
                    "name": "rx_tout_flow_dis",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop accumulating idle_cnt when hardware flow control works."
                },
                {
                    "name": "dis_rx_dat_ovf",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Disable UART Rx data overflow detect."
                },
                {
                    "name": "txfifo_empty_thrhd",
                    "lsb": 9,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "96",
                    "doc": "It will produce txfifo_empty_int interrupt when the data amount in Tx-FIFO is less than this register value."
                },
                {
                    "name": "rxfifo_full_thrhd",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "96",
                    "doc": "It will produce rxfifo_full_int interrupt when receiver receives more data than this register value."
                }
            ],
            "id": "uart0.conf1",
            "name": "conf1",
            "offset": "0x24",
            "doc": "Configuration register 1"
        },
        "uart0.lowpulse": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "min_cnt",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "4095",
                    "doc": "This register stores the value of the minimum duration time of the low level pulse. It is used in baud rate-detect process."
                }
            ],
            "id": "uart0.lowpulse",
            "name": "lowpulse",
            "offset": "0x28",
            "doc": "Autobaud minimum low pulse duration register"
        },
        "uart0.highpulse": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "min_cnt",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "4095",
                    "doc": "This register stores  the value of the maxinum duration time for the high level pulse. It is used in baud rate-detect process."
                }
            ],
            "id": "uart0.highpulse",
            "name": "highpulse",
            "offset": "0x2c",
            "doc": "Autobaud minimum high pulse duration register"
        },
        "uart0.rxd_cnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxd_edge_cnt",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the count of rxd edge change. It is used in baud rate-detect process."
                }
            ],
            "id": "uart0.rxd_cnt",
            "name": "rxd_cnt",
            "offset": "0x30",
            "doc": "Autobaud edge change count register"
        },
        "uart0.flow_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "send_xoff",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to send Xoff char. It is cleared by hardware automatically."
                },
                {
                    "name": "send_xon",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to send Xon char. It is cleared by hardware automatically."
                },
                {
                    "name": "force_xoff",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to stop the  transmitter from sending data."
                },
                {
                    "name": "force_xon",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable the transmitter to go on sending data."
                },
                {
                    "name": "xonoff_del",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to remove flow control char from the received data."
                },
                {
                    "name": "sw_flow_con_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable software flow control. It is used with register sw_xon or sw_xoff."
                }
            ],
            "id": "uart0.flow_conf",
            "name": "flow_conf",
            "offset": "0x34",
            "doc": "Software flow-control configuration"
        },
        "uart0.sleep_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "active_threshold",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "240",
                    "doc": "The uart is activated from light sleeping mode when the input rxd edge changes more times than this register value."
                }
            ],
            "id": "uart0.sleep_conf",
            "name": "sleep_conf",
            "offset": "0x38",
            "doc": "Sleep-mode configuration"
        },
        "uart0.swfc_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "xoff_char",
                    "lsb": 9,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "19",
                    "doc": "This register stores the Xoff flow control char."
                },
                {
                    "name": "xoff_threshold",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "224",
                    "doc": "When the data amount in Rx-FIFO is more than this register value with uart_sw_flow_con_en set to 1, it will send a Xoff char."
                }
            ],
            "id": "uart0.swfc_conf0",
            "name": "swfc_conf0",
            "offset": "0x3c",
            "doc": "Software flow-control character configuration"
        },
        "uart0.swfc_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "xon_char",
                    "lsb": 9,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "17",
                    "doc": "This register stores the Xon flow control char."
                },
                {
                    "name": "xon_threshold",
                    "lsb": 0,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "When the data amount in Rx-FIFO is less than this register value with uart_sw_flow_con_en set to 1, it will send a Xon char."
                }
            ],
            "id": "uart0.swfc_conf1",
            "name": "swfc_conf1",
            "offset": "0x40",
            "doc": "Software flow-control character configuration"
        },
        "uart0.txbrk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_brk_num",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "10",
                    "doc": "This register is used to configure the number of 0 to be sent after the process of sending data is done. It is active when txd_brk is set to 1."
                }
            ],
            "id": "uart0.txbrk_conf",
            "name": "txbrk_conf",
            "offset": "0x44",
            "doc": "Tx Break character configuration"
        },
        "uart0.idle_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_idle_num",
                    "lsb": 10,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "256",
                    "doc": "This register is used to configure the duration time between transfers."
                },
                {
                    "name": "rx_idle_thrhd",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "256",
                    "doc": "It will produce frame end signal when receiver takes more time to receive one byte data than this register value."
                }
            ],
            "id": "uart0.idle_conf",
            "name": "idle_conf",
            "offset": "0x48",
            "doc": "Frame-end idle configuration"
        },
        "uart0.rs485_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rs485_tx_dly_num",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to delay the transmitter's internal data signal."
                },
                {
                    "name": "rs485_rx_dly_num",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to delay the receiver's internal data signal."
                },
                {
                    "name": "rs485rxby_tx_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'h1: enable rs485 transmitter to send data when rs485 receiver line is busy."
                },
                {
                    "name": "rs485tx_rx_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to enable receiver could receive data when the transmitter is transmitting data in rs485 mode."
                },
                {
                    "name": "dl1_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to delay the stop bit by 1 bit."
                },
                {
                    "name": "dl0_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to delay the stop bit by 1 bit."
                },
                {
                    "name": "rs485_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to choose the rs485 mode."
                }
            ],
            "id": "uart0.rs485_conf",
            "name": "rs485_conf",
            "offset": "0x4c",
            "doc": "RS485 mode configuration"
        },
        "uart0.at_cmd_precnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pre_idle_num",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "2305",
                    "doc": "This register is used to configure the idle duration time before the first at_cmd is received by receiver."
                }
            ],
            "id": "uart0.at_cmd_precnt",
            "name": "at_cmd_precnt",
            "offset": "0x50",
            "doc": "Pre-sequence timing configuration"
        },
        "uart0.at_cmd_postcnt": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "post_idle_num",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "2305",
                    "doc": "This register is used to configure the duration time between the last at_cmd and the next data."
                }
            ],
            "id": "uart0.at_cmd_postcnt",
            "name": "at_cmd_postcnt",
            "offset": "0x54",
            "doc": "Post-sequence timing configuration"
        },
        "uart0.at_cmd_gaptout": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_gap_tout",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "read-write",
                    "reset": "11",
                    "doc": "This register is used to configure the duration time between the at_cmd chars."
                }
            ],
            "id": "uart0.at_cmd_gaptout",
            "name": "at_cmd_gaptout",
            "offset": "0x58",
            "doc": "Timeout configuration"
        },
        "uart0.at_cmd_char": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "char_num",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "This register is used to configure the num of continuous at_cmd chars received by receiver."
                },
                {
                    "name": "at_cmd_char",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "43",
                    "doc": "This register is used to configure the content of at_cmd char."
                }
            ],
            "id": "uart0.at_cmd_char",
            "name": "at_cmd_char",
            "offset": "0x5c",
            "doc": "AT escape sequence detection configuration"
        },
        "uart0.mem_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mem_force_pu",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to force power up UART memory."
                },
                {
                    "name": "mem_force_pd",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to force power down UART memory."
                },
                {
                    "name": "rx_tout_thrhd",
                    "lsb": 16,
                    "nbits": 10,
                    "access": "read-write",
                    "reset": "10",
                    "doc": "This register is used to configure the threshold time that receiver takes to receive one byte. The rxfifo_tout_int interrupt will be trigger when the receiver takes more time to receive one byte with rx_tout_en set to 1."
                },
                {
                    "name": "rx_flow_thrhd",
                    "lsb": 7,
                    "nbits": 9,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This register is used to configure the maximum amount of data that can be received  when hardware flow control works."
                },
                {
                    "name": "tx_size",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This register is used to configure the amount of mem allocated for transmit-FIFO. The default number is 128 bytes."
                },
                {
                    "name": "rx_size",
                    "lsb": 1,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This register is used to configure the amount of mem allocated for receive-FIFO. The default number is 128 bytes."
                },
                {
                    "name": "rsvd0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                }
            ],
            "id": "uart0.mem_conf",
            "name": "mem_conf",
            "offset": "0x60",
            "doc": "UART threshold and allocation configuration"
        },
        "uart0.mem_tx_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_raddr",
                    "lsb": 11,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the offset address in Tx-FIFO when Tx-FSM reads data via Tx-FIFO_Ctrl."
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_tx_waddr",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This register stores the offset address in Tx-FIFO when software writes Tx-FIFO via APB."
                }
            ],
            "id": "uart0.mem_tx_status",
            "name": "mem_tx_status",
            "offset": "0x64",
            "doc": "Tx-FIFO write and read offset address."
        },
        "uart0.mem_rx_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 21,
                    "nbits": 11,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_waddr",
                    "lsb": 11,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "256",
                    "doc": "This register stores the offset address in Rx-FIFO when Rx-FIFO_Ctrl writes Rx-FIFO. UART0 is 10'h100. UART1 is 10'h180."
                },
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "apb_rx_raddr",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "read-only",
                    "reset": "256",
                    "doc": "This register stores the offset address in RX-FIFO when software reads data from Rx-FIFO via APB. UART0 is 10'h100. UART1 is 10'h180."
                }
            ],
            "id": "uart0.mem_rx_status",
            "name": "mem_rx_status",
            "offset": "0x68",
            "doc": "Rx-FIFO write and read offset address."
        },
        "uart0.fsm_status": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "st_utx_out",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status register of transmitter."
                },
                {
                    "name": "st_urx_out",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the status register of receiver."
                }
            ],
            "id": "uart0.fsm_status",
            "name": "fsm_status",
            "offset": "0x6c",
            "doc": "UART transmit and receive status."
        },
        "uart0.pospulse": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "posedge_min_cnt",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "4095",
                    "doc": "This register stores the minimal input clock count between two positive edges. It is used in boudrate-detect process."
                }
            ],
            "id": "uart0.pospulse",
            "name": "pospulse",
            "offset": "0x70",
            "doc": "Autobaud high pulse register"
        },
        "uart0.negpulse": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "negedge_min_cnt",
                    "lsb": 0,
                    "nbits": 12,
                    "access": "read-only",
                    "reset": "4095",
                    "doc": "This register stores the minimal input clock count between two negative edges. It is used in boudrate-detect process."
                }
            ],
            "id": "uart0.negpulse",
            "name": "negpulse",
            "offset": "0x74",
            "doc": "Autobaud low pulse register"
        },
        "uart0.clk_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_rst_core",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1 then write 0 to this bit, reset UART Rx."
                },
                {
                    "name": "tx_rst_core",
                    "lsb": 26,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1 then write 0 to this bit, reset UART Tx."
                },
                {
                    "name": "rx_sclk_en",
                    "lsb": 25,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable UART Rx clock."
                },
                {
                    "name": "tx_sclk_en",
                    "lsb": 24,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable UART Tx clock."
                },
                {
                    "name": "rst_core",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1 then write 0 to this bit, reset UART Tx/Rx."
                },
                {
                    "name": "sclk_en",
                    "lsb": 22,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable UART Tx/Rx clock."
                },
                {
                    "name": "sclk_sel",
                    "lsb": 20,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "3",
                    "doc": "UART clock source select. 1: 80Mhz, 2: 8Mhz, 3: XTAL."
                },
                {
                    "name": "sclk_div_num",
                    "lsb": 12,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "The integral part of the frequency divider factor."
                },
                {
                    "name": "sclk_div_a",
                    "lsb": 6,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The numerator of the frequency divider factor."
                },
                {
                    "name": "sclk_div_b",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The  denominator of the frequency divider factor."
                }
            ],
            "id": "uart0.clk_conf",
            "name": "clk_conf",
            "offset": "0x78",
            "doc": "UART core clock configuration"
        },
        "uart0.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33587824",
                    "doc": "This is the version register."
                }
            ],
            "id": "uart0.date",
            "name": "date",
            "offset": "0x7c",
            "doc": "UART Version register"
        },
        "uart0.id": {
            "type": "reg",
            "fields": [
                {
                    "name": "reg_update",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Software write 1 would synchronize registers into UART Core clock domain and would be cleared by hardware after synchronization is done."
                },
                {
                    "name": "high_speed",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "This bit used to select synchronize mode. 1: Registers are auto synchronized into UART Core clock and UART core should be keep the same with APB clock. 0: After configure registers, software needs to write 1 to UART_REG_UPDATE to synchronize registers."
                },
                {
                    "name": "id",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "1280",
                    "doc": "This register is used to configure the uart_id."
                }
            ],
            "id": "uart0.id",
            "name": "id",
            "offset": "0x80",
            "doc": "UART ID register"
        },
        "uart1": {
            "type": "blk",
            "children": [],
            "id": "uart1",
            "name": "uart1",
            "offset": "0x60010000",
            "doc": "UART (Universal Asynchronous Receiver-Transmitter) Controller"
        },
        "uhci0": {
            "type": "blk",
            "children": [
                "uhci0.conf0",
                "uhci0.int_raw",
                "uhci0.int_st",
                "uhci0.int_ena",
                "uhci0.int_clr",
                "uhci0.conf1",
                "uhci0.state0",
                "uhci0.state1",
                "uhci0.escape_conf",
                "uhci0.hung_conf",
                "uhci0.ack_num",
                "uhci0.rx_head",
                "uhci0.quick_sent",
                "uhci0.reg_q0_word0",
                "uhci0.reg_q0_word1",
                "uhci0.reg_q1_word0",
                "uhci0.reg_q1_word1",
                "uhci0.reg_q2_word0",
                "uhci0.reg_q2_word1",
                "uhci0.reg_q3_word0",
                "uhci0.reg_q3_word1",
                "uhci0.reg_q4_word0",
                "uhci0.reg_q4_word1",
                "uhci0.reg_q5_word0",
                "uhci0.reg_q5_word1",
                "uhci0.reg_q6_word0",
                "uhci0.reg_q6_word1",
                "uhci0.esc_conf0",
                "uhci0.esc_conf1",
                "uhci0.esc_conf2",
                "uhci0.esc_conf3",
                "uhci0.pkt_thres",
                "uhci0.date"
            ],
            "id": "uhci0",
            "name": "uhci0",
            "offset": "0x60014000",
            "doc": "Universal Host Controller Interface"
        },
        "uhci0.conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "uart_rx_brk_eof_en",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "If this bit is set to 1, UHCI will end payload receive process when NULL frame is received by UART."
                },
                {
                    "name": "clk_en",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'b1: Force clock on for register. 1'b0: Support clock only when application writes registers."
                },
                {
                    "name": "encode_crc_en",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable data integrity checking by appending a 16 bit CCITT-CRC to end of the payload."
                },
                {
                    "name": "len_eof_en",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "If this bit is set to 1, UHCI decoder receiving payload data is end when the receiving byte count has reached the specified value. The value is payload length indicated by UHCI packet header when UHCI_HEAD_EN is 1 or the value is configuration value when UHCI_HEAD_EN is 0. If this bit is set to 0, UHCI decoder receiving payload data is end when 0xc0 is received."
                },
                {
                    "name": "uart_idle_eof_en",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "If this bit is set to 1, UHCI will end the payload receiving process when UART has been in idle state."
                },
                {
                    "name": "crc_rec_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to enable UHCI to receive the 16 bit CRC."
                },
                {
                    "name": "head_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to encode the data packet with a formatting header."
                },
                {
                    "name": "seper_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Set this bit to separate the data frame using a special char."
                },
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "uart1_ce",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to link up HCI and UART1."
                },
                {
                    "name": "uart0_ce",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Set this bit to link up HCI and UART0."
                },
                {
                    "name": "rx_rst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1, then write 0 to this bit to reset encode state machine."
                },
                {
                    "name": "tx_rst",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1, then write 0 to this bit to reset decode state machine."
                }
            ],
            "id": "uhci0.conf0",
            "name": "conf0",
            "offset": "0x0",
            "doc": "a"
        },
        "uhci0.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app_ctrl1_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Soft control int raw bit."
                },
                {
                    "name": "app_ctrl0_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Soft control int raw bit."
                },
                {
                    "name": "out_eof_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "This is the interrupt raw bit. Triggered when there are some errors in EOF in the"
                },
                {
                    "name": "send_a_reg_q_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_s_reg_q_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_hung_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_hung_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_start_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_start_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.int_raw",
            "name": "int_raw",
            "offset": "0x4",
            "doc": "a"
        },
        "uhci0.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app_ctrl1_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "app_ctrl0_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "outlink_eof_err_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_a_reg_q_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_s_reg_q_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_hung_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_hung_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_start_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_start_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.int_st",
            "name": "int_st",
            "offset": "0x8",
            "doc": "a"
        },
        "uhci0.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app_ctrl1_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "app_ctrl0_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "outlink_eof_err_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_a_reg_q_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_s_reg_q_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_hung_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_hung_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_start_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_start_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.int_ena",
            "name": "int_ena",
            "offset": "0xc",
            "doc": "a"
        },
        "uhci0.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "app_ctrl1_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "app_ctrl0_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "outlink_eof_err_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_a_reg_q_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "send_s_reg_q_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_hung_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_hung_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_start_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_start_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.int_clr",
            "name": "int_clr",
            "offset": "0x10",
            "doc": "a"
        },
        "uhci0.conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd1",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sw_start",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "wait_sw_start",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_ack_num_re",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "tx_check_sum_re",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "save_head",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "crc_disable",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "check_seq_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "check_sum_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                }
            ],
            "id": "uhci0.conf1",
            "name": "conf1",
            "offset": "0x14",
            "doc": "a"
        },
        "uhci0.state0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "decode_state",
                    "lsb": 3,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_err_cause",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.state0",
            "name": "state0",
            "offset": "0x18",
            "doc": "a"
        },
        "uhci0.state1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "encode_state",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.state1",
            "name": "state1",
            "offset": "0x1c",
            "doc": "a"
        },
        "uhci0.escape_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rx_13_esc_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_11_esc_en",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rx_db_esc_en",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "rx_c0_esc_en",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "tx_13_esc_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_11_esc_en",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "tx_db_esc_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "tx_c0_esc_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                }
            ],
            "id": "uhci0.escape_conf",
            "name": "escape_conf",
            "offset": "0x20",
            "doc": "a"
        },
        "uhci0.hung_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxfifo_timeout_ena",
                    "lsb": 23,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "rxfifo_timeout_shift",
                    "lsb": 20,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "rxfifo_timeout",
                    "lsb": 12,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "a"
                },
                {
                    "name": "txfifo_timeout_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "txfifo_timeout_shift",
                    "lsb": 8,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "txfifo_timeout",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "16",
                    "doc": "a"
                }
            ],
            "id": "uhci0.hung_conf",
            "name": "hung_conf",
            "offset": "0x24",
            "doc": "a"
        },
        "uhci0.ack_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "load",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "1",
                    "doc": "a"
                },
                {
                    "name": "ack_num",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.ack_num",
            "name": "ack_num",
            "offset": "0x28",
            "doc": "a"
        },
        "uhci0.rx_head": {
            "type": "reg",
            "fields": [
                {
                    "name": "rx_head",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.rx_head",
            "name": "rx_head",
            "offset": "0x2c",
            "doc": "a"
        },
        "uhci0.quick_sent": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "always_send_en",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "always_send_num",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "single_send_en",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                },
                {
                    "name": "single_send_num",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.quick_sent",
            "name": "quick_sent",
            "offset": "0x30",
            "doc": "a"
        },
        "uhci0.reg_q0_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q0_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q0_word0",
            "name": "reg_q0_word0",
            "offset": "0x34",
            "doc": "a"
        },
        "uhci0.reg_q0_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q0_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q0_word1",
            "name": "reg_q0_word1",
            "offset": "0x38",
            "doc": "a"
        },
        "uhci0.reg_q1_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q1_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q1_word0",
            "name": "reg_q1_word0",
            "offset": "0x3c",
            "doc": "a"
        },
        "uhci0.reg_q1_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q1_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q1_word1",
            "name": "reg_q1_word1",
            "offset": "0x40",
            "doc": "a"
        },
        "uhci0.reg_q2_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q2_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q2_word0",
            "name": "reg_q2_word0",
            "offset": "0x44",
            "doc": "a"
        },
        "uhci0.reg_q2_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q2_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q2_word1",
            "name": "reg_q2_word1",
            "offset": "0x48",
            "doc": "a"
        },
        "uhci0.reg_q3_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q3_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q3_word0",
            "name": "reg_q3_word0",
            "offset": "0x4c",
            "doc": "a"
        },
        "uhci0.reg_q3_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q3_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q3_word1",
            "name": "reg_q3_word1",
            "offset": "0x50",
            "doc": "a"
        },
        "uhci0.reg_q4_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q4_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q4_word0",
            "name": "reg_q4_word0",
            "offset": "0x54",
            "doc": "a"
        },
        "uhci0.reg_q4_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q4_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q4_word1",
            "name": "reg_q4_word1",
            "offset": "0x58",
            "doc": "a"
        },
        "uhci0.reg_q5_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q5_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q5_word0",
            "name": "reg_q5_word0",
            "offset": "0x5c",
            "doc": "a"
        },
        "uhci0.reg_q5_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q5_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q5_word1",
            "name": "reg_q5_word1",
            "offset": "0x60",
            "doc": "a"
        },
        "uhci0.reg_q6_word0": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q6_word0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q6_word0",
            "name": "reg_q6_word0",
            "offset": "0x64",
            "doc": "a"
        },
        "uhci0.reg_q6_word1": {
            "type": "reg",
            "fields": [
                {
                    "name": "send_q6_word1",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "a"
                }
            ],
            "id": "uhci0.reg_q6_word1",
            "name": "reg_q6_word1",
            "offset": "0x68",
            "doc": "a"
        },
        "uhci0.esc_conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "seper_esc_char1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "220",
                    "doc": "a"
                },
                {
                    "name": "seper_esc_char0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "219",
                    "doc": "a"
                },
                {
                    "name": "seper_char",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "192",
                    "doc": "a"
                }
            ],
            "id": "uhci0.esc_conf0",
            "name": "esc_conf0",
            "offset": "0x6c",
            "doc": "a"
        },
        "uhci0.esc_conf1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "esc_seq0_char1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "221",
                    "doc": "a"
                },
                {
                    "name": "esc_seq0_char0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "219",
                    "doc": "a"
                },
                {
                    "name": "esc_seq0",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "219",
                    "doc": "a"
                }
            ],
            "id": "uhci0.esc_conf1",
            "name": "esc_conf1",
            "offset": "0x70",
            "doc": "a"
        },
        "uhci0.esc_conf2": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "esc_seq1_char1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "222",
                    "doc": "a"
                },
                {
                    "name": "esc_seq1_char0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "219",
                    "doc": "a"
                },
                {
                    "name": "esc_seq1",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "17",
                    "doc": "a"
                }
            ],
            "id": "uhci0.esc_conf2",
            "name": "esc_conf2",
            "offset": "0x74",
            "doc": "a"
        },
        "uhci0.esc_conf3": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "esc_seq2_char1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "223",
                    "doc": "a"
                },
                {
                    "name": "esc_seq2_char0",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "219",
                    "doc": "a"
                },
                {
                    "name": "esc_seq2",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "19",
                    "doc": "a"
                }
            ],
            "id": "uhci0.esc_conf3",
            "name": "esc_conf3",
            "offset": "0x78",
            "doc": "a"
        },
        "uhci0.pkt_thres": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pkt_thrs",
                    "lsb": 0,
                    "nbits": 13,
                    "access": "read-write",
                    "reset": "128",
                    "doc": "a"
                }
            ],
            "id": "uhci0.pkt_thres",
            "name": "pkt_thres",
            "offset": "0x7c",
            "doc": "a"
        },
        "uhci0.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33583472",
                    "doc": "a"
                }
            ],
            "id": "uhci0.date",
            "name": "date",
            "offset": "0x80",
            "doc": "a"
        },
        "uhci1": {
            "type": "blk",
            "children": [],
            "id": "uhci1",
            "name": "uhci1",
            "offset": "0x6000c000",
            "doc": "Universal Host Controller Interface"
        },
        "usb_device": {
            "type": "blk",
            "children": [
                "usb_device.ep1",
                "usb_device.ep1_conf",
                "usb_device.int_raw",
                "usb_device.int_st",
                "usb_device.int_ena",
                "usb_device.int_clr",
                "usb_device.conf0",
                "usb_device.test",
                "usb_device.jfifo_st",
                "usb_device.fram_num",
                "usb_device.in_ep0_st",
                "usb_device.in_ep1_st",
                "usb_device.in_ep2_st",
                "usb_device.in_ep3_st",
                "usb_device.out_ep0_st",
                "usb_device.out_ep1_st",
                "usb_device.out_ep2_st",
                "usb_device.misc_conf",
                "usb_device.mem_conf",
                "usb_device.date"
            ],
            "id": "usb_device",
            "name": "usb_device",
            "offset": "0x60043000",
            "doc": "Full-speed USB Serial/JTAG Controller"
        },
        "usb_device.ep1": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rdwr_byte",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write and read byte data to/from UART Tx/Rx FIFO through this field. When USB_DEVICE_SERIAL_IN_EMPTY_INT is set, then user can write data (up to 64 bytes) into UART Tx FIFO. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is set, user can check USB_DEVICE_OUT_EP1_WR_ADDR USB_DEVICE_OUT_EP0_RD_ADDR to know how many data is received, then read data from UART Rx FIFO."
                }
            ],
            "id": "usb_device.ep1",
            "name": "ep1",
            "offset": "0x0",
            "doc": "USB_DEVICE_EP1_REG."
        },
        "usb_device.ep1_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "serial_out_ep_data_avail",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "1'b1: Indicate there is data in UART Rx FIFO."
                },
                {
                    "name": "serial_in_ep_data_free",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1'b1: Indicate UART Tx FIFO is not full and can write data into in. After writing USB_DEVICE_WR_DONE, this bit would be 0 until data in UART Tx FIFO is read by USB Host."
                },
                {
                    "name": "wr_done",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to indicate writing byte data to UART Tx FIFO is done."
                }
            ],
            "id": "usb_device.ep1_conf",
            "name": "ep1_conf",
            "offset": "0x4",
            "doc": "USB_DEVICE_EP1_CONF_REG."
        },
        "usb_device.int_raw": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep2_zero_payload_int_raw",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when OUT endpoint 2 received packet with zero palyload."
                },
                {
                    "name": "out_ep1_zero_payload_int_raw",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when OUT endpoint 1 received packet with zero palyload."
                },
                {
                    "name": "usb_bus_reset_int_raw",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when usb bus reset is detected."
                },
                {
                    "name": "in_token_rec_in_ep1_int_raw",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when IN token for IN endpoint 1 is received."
                },
                {
                    "name": "stuff_err_int_raw",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when stuff error is detected."
                },
                {
                    "name": "crc16_err_int_raw",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when CRC16 error is detected."
                },
                {
                    "name": "crc5_err_int_raw",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when CRC5 error is detected."
                },
                {
                    "name": "pid_err_int_raw",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when pid error is detected."
                },
                {
                    "name": "serial_in_empty_int_raw",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "The raw interrupt bit turns to high level when Serial Port IN Endpoint is empty."
                },
                {
                    "name": "serial_out_recv_pkt_int_raw",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when Serial Port OUT Endpoint received one packet."
                },
                {
                    "name": "sof_int_raw",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when SOF frame is received."
                },
                {
                    "name": "jtag_in_flush_int_raw",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt bit turns to high level when flush cmd is received for IN endpoint 2 of JTAG."
                }
            ],
            "id": "usb_device.int_raw",
            "name": "int_raw",
            "offset": "0x8",
            "doc": "USB_DEVICE_INT_RAW_REG."
        },
        "usb_device.int_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep2_zero_payload_int_st",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "out_ep1_zero_payload_int_st",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "usb_bus_reset_int_st",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt."
                },
                {
                    "name": "in_token_rec_in_ep1_int_st",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt."
                },
                {
                    "name": "stuff_err_int_st",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_STUFF_ERR_INT interrupt."
                },
                {
                    "name": "crc16_err_int_st",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_CRC16_ERR_INT interrupt."
                },
                {
                    "name": "crc5_err_int_st",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_CRC5_ERR_INT interrupt."
                },
                {
                    "name": "pid_err_int_st",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_PID_ERR_INT interrupt."
                },
                {
                    "name": "serial_in_empty_int_st",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
                },
                {
                    "name": "serial_out_recv_pkt_int_st",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
                },
                {
                    "name": "sof_int_st",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_SOF_INT interrupt."
                },
                {
                    "name": "jtag_in_flush_int_st",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "The raw interrupt status bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
                }
            ],
            "id": "usb_device.int_st",
            "name": "int_st",
            "offset": "0xc",
            "doc": "USB_DEVICE_INT_ST_REG."
        },
        "usb_device.int_ena": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep2_zero_payload_int_ena",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "out_ep1_zero_payload_int_ena",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "usb_bus_reset_int_ena",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_USB_BUS_RESET_INT interrupt."
                },
                {
                    "name": "in_token_rec_in_ep1_int_ena",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_IN_TOKEN_REC_IN_EP1_INT interrupt."
                },
                {
                    "name": "stuff_err_int_ena",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_STUFF_ERR_INT interrupt."
                },
                {
                    "name": "crc16_err_int_ena",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_CRC16_ERR_INT interrupt."
                },
                {
                    "name": "crc5_err_int_ena",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_CRC5_ERR_INT interrupt."
                },
                {
                    "name": "pid_err_int_ena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_PID_ERR_INT interrupt."
                },
                {
                    "name": "serial_in_empty_int_ena",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
                },
                {
                    "name": "serial_out_recv_pkt_int_ena",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
                },
                {
                    "name": "sof_int_ena",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_SOF_INT interrupt."
                },
                {
                    "name": "jtag_in_flush_int_ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "The interrupt enable bit for the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
                }
            ],
            "id": "usb_device.int_ena",
            "name": "int_ena",
            "offset": "0x10",
            "doc": "USB_DEVICE_INT_ENA_REG."
        },
        "usb_device.int_clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep2_zero_payload_int_clr",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_OUT_EP2_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "out_ep1_zero_payload_int_clr",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_OUT_EP1_ZERO_PAYLOAD_INT interrupt."
                },
                {
                    "name": "usb_bus_reset_int_clr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_USB_BUS_RESET_INT interrupt."
                },
                {
                    "name": "in_token_rec_in_ep1_int_clr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_IN_TOKEN_IN_EP1_INT interrupt."
                },
                {
                    "name": "stuff_err_int_clr",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_STUFF_ERR_INT interrupt."
                },
                {
                    "name": "crc16_err_int_clr",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_CRC16_ERR_INT interrupt."
                },
                {
                    "name": "crc5_err_int_clr",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_CRC5_ERR_INT interrupt."
                },
                {
                    "name": "pid_err_int_clr",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_PID_ERR_INT interrupt."
                },
                {
                    "name": "serial_in_empty_int_clr",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_SERIAL_IN_EMPTY_INT interrupt."
                },
                {
                    "name": "serial_out_recv_pkt_int_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_SERIAL_OUT_RECV_PKT_INT interrupt."
                },
                {
                    "name": "sof_int_clr",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_JTAG_SOF_INT interrupt."
                },
                {
                    "name": "jtag_in_flush_int_clr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to clear the USB_DEVICE_JTAG_IN_FLUSH_INT interrupt."
                }
            ],
            "id": "usb_device.int_clr",
            "name": "int_clr",
            "offset": "0x14",
            "doc": "USB_DEVICE_INT_CLR_REG."
        },
        "usb_device.conf0": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 15,
                    "nbits": 17,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usb_pad_enable",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Enable USB pad function."
                },
                {
                    "name": "pullup_value",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control pull up value."
                },
                {
                    "name": "dm_pulldown",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control USB D- pull down."
                },
                {
                    "name": "dm_pullup",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control USB D- pull up."
                },
                {
                    "name": "dp_pulldown",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control USB D+ pull down."
                },
                {
                    "name": "dp_pullup",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "Control USB D+ pull up."
                },
                {
                    "name": "pad_pull_override",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable software control USB D+ D- pullup pulldown"
                },
                {
                    "name": "vref_override",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable software control input  threshold"
                },
                {
                    "name": "vrefl",
                    "lsb": 5,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control single-end input low threshold,0.8V to 1.04V, step 80mV"
                },
                {
                    "name": "vrefh",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Control single-end input high threshold,1.76V to 2V, step 80mV"
                },
                {
                    "name": "exchg_pins",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "USB D+ D- exchange"
                },
                {
                    "name": "exchg_pins_override",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable software control USB D+ D- exchange"
                },
                {
                    "name": "phy_sel",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Select internal/external PHY"
                }
            ],
            "id": "usb_device.conf0",
            "name": "conf0",
            "offset": "0x18",
            "doc": "USB_DEVICE_CONF0_REG."
        },
        "usb_device.test": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "tx_dm",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "USB D- tx value in test"
                },
                {
                    "name": "tx_dp",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "USB D+ tx value in test"
                },
                {
                    "name": "usb_oe",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "USB pad oen in test"
                },
                {
                    "name": "enable",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Enable test of the USB pad"
                }
            ],
            "id": "usb_device.test",
            "name": "test",
            "offset": "0x1c",
            "doc": "USB_DEVICE_TEST_REG."
        },
        "usb_device.jfifo_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_fifo_reset",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1 to reset JTAG out fifo."
                },
                {
                    "name": "in_fifo_reset",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Write 1 to reset JTAG in fifo."
                },
                {
                    "name": "out_fifo_full",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "1: JTAG out fifo is full."
                },
                {
                    "name": "out_fifo_empty",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: JTAG out fifo is empty."
                },
                {
                    "name": "out_fifo_cnt",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "JTAT out fifo counter."
                },
                {
                    "name": "in_fifo_full",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "1: JTAG in fifo is full."
                },
                {
                    "name": "in_fifo_empty",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "1: JTAG in fifo is empty."
                },
                {
                    "name": "in_fifo_cnt",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "JTAT in fifo counter."
                }
            ],
            "id": "usb_device.jfifo_st",
            "name": "jfifo_st",
            "offset": "0x20",
            "doc": "USB_DEVICE_JFIFO_ST_REG."
        },
        "usb_device.fram_num": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sof_frame_index",
                    "lsb": 0,
                    "nbits": 11,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Frame index of received SOF frame."
                }
            ],
            "id": "usb_device.fram_num",
            "name": "fram_num",
            "offset": "0x24",
            "doc": "USB_DEVICE_FRAM_NUM_REG."
        },
        "usb_device.in_ep0_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_ep0_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of IN endpoint 0."
                },
                {
                    "name": "in_ep0_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of IN endpoint 0."
                },
                {
                    "name": "in_ep0_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "State of IN Endpoint 0."
                }
            ],
            "id": "usb_device.in_ep0_st",
            "name": "in_ep0_st",
            "offset": "0x28",
            "doc": "USB_DEVICE_IN_EP0_ST_REG."
        },
        "usb_device.in_ep1_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_ep1_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of IN endpoint 1."
                },
                {
                    "name": "in_ep1_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of IN endpoint 1."
                },
                {
                    "name": "in_ep1_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "State of IN Endpoint 1."
                }
            ],
            "id": "usb_device.in_ep1_st",
            "name": "in_ep1_st",
            "offset": "0x2c",
            "doc": "USB_DEVICE_IN_EP1_ST_REG."
        },
        "usb_device.in_ep2_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_ep2_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of IN endpoint 2."
                },
                {
                    "name": "in_ep2_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of IN endpoint 2."
                },
                {
                    "name": "in_ep2_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "State of IN Endpoint 2."
                }
            ],
            "id": "usb_device.in_ep2_st",
            "name": "in_ep2_st",
            "offset": "0x30",
            "doc": "USB_DEVICE_IN_EP2_ST_REG."
        },
        "usb_device.in_ep3_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "in_ep3_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of IN endpoint 3."
                },
                {
                    "name": "in_ep3_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of IN endpoint 3."
                },
                {
                    "name": "in_ep3_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "1",
                    "doc": "State of IN Endpoint 3."
                }
            ],
            "id": "usb_device.in_ep3_st",
            "name": "in_ep3_st",
            "offset": "0x34",
            "doc": "USB_DEVICE_IN_EP3_ST_REG."
        },
        "usb_device.out_ep0_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep0_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of OUT endpoint 0."
                },
                {
                    "name": "out_ep0_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of OUT endpoint 0. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP0_WR_ADDR-2 bytes data in OUT EP0."
                },
                {
                    "name": "out_ep0_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "State of OUT Endpoint 0."
                }
            ],
            "id": "usb_device.out_ep0_st",
            "name": "out_ep0_st",
            "offset": "0x38",
            "doc": "USB_DEVICE_OUT_EP0_ST_REG."
        },
        "usb_device.out_ep1_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 23,
                    "nbits": 9,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep1_rec_data_cnt",
                    "lsb": 16,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Data count in OUT endpoint 1 when one packet is received."
                },
                {
                    "name": "out_ep1_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of OUT endpoint 1."
                },
                {
                    "name": "out_ep1_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of OUT endpoint 1. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP1_WR_ADDR-2 bytes data in OUT EP1."
                },
                {
                    "name": "out_ep1_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "State of OUT Endpoint 1."
                }
            ],
            "id": "usb_device.out_ep1_st",
            "name": "out_ep1_st",
            "offset": "0x3c",
            "doc": "USB_DEVICE_OUT_EP1_ST_REG."
        },
        "usb_device.out_ep2_st": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "out_ep2_rd_addr",
                    "lsb": 9,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Read data address of OUT endpoint 2."
                },
                {
                    "name": "out_ep2_wr_addr",
                    "lsb": 2,
                    "nbits": 7,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Write data address of OUT endpoint 2. When USB_DEVICE_SERIAL_OUT_RECV_PKT_INT is detected, there are USB_DEVICE_OUT_EP2_WR_ADDR-2 bytes data in OUT EP2."
                },
                {
                    "name": "out_ep2_state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "State of OUT Endpoint 2."
                }
            ],
            "id": "usb_device.out_ep2_st",
            "name": "out_ep2_st",
            "offset": "0x40",
            "doc": "USB_DEVICE_OUT_EP2_ST_REG."
        },
        "usb_device.misc_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clk_en",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1'h1: Force clock on for register. 1'h0: Support clock only when application writes registers."
                }
            ],
            "id": "usb_device.misc_conf",
            "name": "misc_conf",
            "offset": "0x44",
            "doc": "USB_DEVICE_MISC_CONF_REG."
        },
        "usb_device.mem_conf": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "usb_mem_clk_en",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "1",
                    "doc": "1: Force clock on for usb memory."
                },
                {
                    "name": "usb_mem_pd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "1: power down usb memory."
                }
            ],
            "id": "usb_device.mem_conf",
            "name": "mem_conf",
            "offset": "0x48",
            "doc": "USB_DEVICE_MEM_CONF_REG."
        },
        "usb_device.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "read-write",
                    "reset": "33583872",
                    "doc": "register version."
                }
            ],
            "id": "usb_device.date",
            "name": "date",
            "offset": "0x80",
            "doc": "USB_DEVICE_DATE_REG."
        },
        "xts_aes": {
            "type": "blk",
            "children": [
                "xts_aes.plain_mem0",
                "xts_aes.plain_mem1",
                "xts_aes.plain_mem2",
                "xts_aes.plain_mem3",
                "xts_aes.plain_mem4",
                "xts_aes.plain_mem5",
                "xts_aes.plain_mem6",
                "xts_aes.plain_mem7",
                "xts_aes.plain_mem8",
                "xts_aes.plain_mem9",
                "xts_aes.plain_mem10",
                "xts_aes.plain_mem11",
                "xts_aes.plain_mem12",
                "xts_aes.plain_mem13",
                "xts_aes.plain_mem14",
                "xts_aes.plain_mem15",
                "xts_aes.linesize",
                "xts_aes.destination",
                "xts_aes.physical_address",
                "xts_aes.trigger",
                "xts_aes.release",
                "xts_aes.destroy",
                "xts_aes.state",
                "xts_aes.date"
            ],
            "id": "xts_aes",
            "name": "xts_aes",
            "offset": "0x600cc000",
            "doc": "XTS-AES-128 Flash Encryption"
        },
        "xts_aes.plain_mem0": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem0",
            "name": "plain_mem0",
            "offset": "0x0",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem1": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem1",
            "name": "plain_mem1",
            "offset": "0x1",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem2": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem2",
            "name": "plain_mem2",
            "offset": "0x2",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem3": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem3",
            "name": "plain_mem3",
            "offset": "0x3",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem4": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem4",
            "name": "plain_mem4",
            "offset": "0x4",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem5": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem5",
            "name": "plain_mem5",
            "offset": "0x5",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem6": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem6",
            "name": "plain_mem6",
            "offset": "0x6",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem7": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem7",
            "name": "plain_mem7",
            "offset": "0x7",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem8": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem8",
            "name": "plain_mem8",
            "offset": "0x8",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem9": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem9",
            "name": "plain_mem9",
            "offset": "0x9",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem10": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem10",
            "name": "plain_mem10",
            "offset": "0xa",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem11": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem11",
            "name": "plain_mem11",
            "offset": "0xb",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem12": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem12",
            "name": "plain_mem12",
            "offset": "0xc",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem13": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem13",
            "name": "plain_mem13",
            "offset": "0xd",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem14": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem14",
            "name": "plain_mem14",
            "offset": "0xe",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.plain_mem15": {
            "type": "reg",
            "fields": [
                {
                    "name": "inferred",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "inferred",
                    "reset": "0",
                    "doc": "inferred"
                }
            ],
            "id": "xts_aes.plain_mem15",
            "name": "plain_mem15",
            "offset": "0xf",
            "doc": "The memory that stores plaintext"
        },
        "xts_aes.linesize": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "linesize",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit stores the line size parameter. 0: 16Byte, 1: 32Byte."
                }
            ],
            "id": "xts_aes.linesize",
            "name": "linesize",
            "offset": "0x40",
            "doc": "XTS-AES line-size register"
        },
        "xts_aes.destination": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "destination",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "This bit stores the destination. 0: flash(default). 1: reserved."
                }
            ],
            "id": "xts_aes.destination",
            "name": "destination",
            "offset": "0x44",
            "doc": "XTS-AES destination register"
        },
        "xts_aes.physical_address": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "physical_address",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "0",
                    "doc": "Those bits stores the physical address. If linesize is 16-byte, the physical address should be aligned of 16 bytes. If linesize is 32-byte, the physical address should be aligned of 32 bytes."
                }
            ],
            "id": "xts_aes.physical_address",
            "name": "physical_address",
            "offset": "0x48",
            "doc": "XTS-AES physical address register"
        },
        "xts_aes.trigger": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "trigger",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to start manual encryption calculation"
                }
            ],
            "id": "xts_aes.trigger",
            "name": "trigger",
            "offset": "0x4c",
            "doc": "XTS-AES trigger register"
        },
        "xts_aes.release": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "release",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to release the manual encrypted result, after that the result will be visible to spi"
                }
            ],
            "id": "xts_aes.release",
            "name": "release",
            "offset": "0x50",
            "doc": "XTS-AES release register"
        },
        "xts_aes.destroy": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "destroy",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "write-only",
                    "reset": "0",
                    "doc": "Set this bit to destroy XTS-AES result."
                }
            ],
            "id": "xts_aes.destroy",
            "name": "destroy",
            "offset": "0x54",
            "doc": "XTS-AES destroy register"
        },
        "xts_aes.state": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "state",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "read-only",
                    "reset": "0",
                    "doc": "Those bits shows XTS-AES status. 0=IDLE, 1=WORK, 2=RELEASE, 3=USE. IDLE means that XTS-AES is idle. WORK means that XTS-AES is busy with calculation. RELEASE means the encrypted result is generated but not visible to mspi. USE means that the encrypted result is visible to mspi."
                }
            ],
            "id": "xts_aes.state",
            "name": "state",
            "offset": "0x58",
            "doc": "XTS-AES status register"
        },
        "xts_aes.date": {
            "type": "reg",
            "fields": [
                {
                    "name": "rsvd0",
                    "lsb": 30,
                    "nbits": 2,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "date",
                    "lsb": 0,
                    "nbits": 30,
                    "access": "read-write",
                    "reset": "538969635",
                    "doc": "Those bits stores the version information of XTS-AES."
                }
            ],
            "id": "xts_aes.date",
            "name": "date",
            "offset": "0x5c",
            "doc": "XTS-AES version control register"
        }
    }
}