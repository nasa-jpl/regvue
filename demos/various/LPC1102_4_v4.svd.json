{
    "schema": {
        "name": "register-description-format",
        "version": "v1"
    },
    "root": {
        "desc": "LPC1102_04",
        "version": "4",
        "children": [
            "wwdt",
            "uart",
            "ct16b0",
            "ct16b1",
            "ct32b0",
            "ct32b1",
            "adc",
            "pmu",
            "flashctrl",
            "spi0",
            "iocon",
            "syscon",
            "gpio0",
            "gpio1"
        ]
    },
    "elements": {
        "wwdt": {
            "type": "blk",
            "children": [
                "wwdt.wdmod",
                "wwdt.wdtc",
                "wwdt.wdfeed",
                "wwdt.wdtv",
                "wwdt.wdwarnint",
                "wwdt.wdwindow"
            ],
            "id": "wwdt",
            "name": "wwdt",
            "offset": "0x40004000",
            "doc": "Windowed WatchDog Timer (WDT) "
        },
        "wwdt.wdmod": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Read value is undefined, only zero should be written."
                },
                {
                    "name": "wdprotect",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog update mode. This bit is Set Only."
                },
                {
                    "name": "wdint",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog interrupt flag. Set when the timer reaches the value in WDWARNINT. Cleared by software."
                },
                {
                    "name": "wdtof",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT, cleared by software. Causes a chip reset if WDRESET = 1."
                },
                {
                    "name": "wdreset",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog reset enable bit. This bit is Set Only."
                },
                {
                    "name": "wden",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog enable bit. This bit is Set Only. Setting this bit to one also locks the watchdog clock source. Once the watchdog timer is enabled, the watchdog timer clock source cannot be changed. If the watchdog timer is needed in Deep-sleep mode, the watchdog clock source must be changed to the watchdog oscillator before setting this bit to one."
                }
            ],
            "id": "wwdt.wdmod",
            "name": "wdmod",
            "offset": "0x0",
            "doc": "Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer."
        },
        "wwdt.wdtc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Read value is undefined, only zero should be written."
                },
                {
                    "name": "count",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "",
                    "reset": "255",
                    "doc": "Watchdog time-out interval."
                }
            ],
            "id": "wwdt.wdtc",
            "name": "wdtc",
            "offset": "0x4",
            "doc": "Watchdog timer constant register. This register determines the time-out value."
        },
        "wwdt.wdfeed": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "feed",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Feed value should be 0xAA followed by 0x55."
                }
            ],
            "id": "wwdt.wdfeed",
            "name": "wdfeed",
            "offset": "0x8",
            "doc": "Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in WDTC."
        },
        "wwdt.wdtv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Read value is undefined, only zero should be written."
                },
                {
                    "name": "count",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "",
                    "reset": "255",
                    "doc": "Counter timer value."
                }
            ],
            "id": "wwdt.wdtv",
            "name": "wdtv",
            "offset": "0xc",
            "doc": "Watchdog timer value register. This register reads out the current value of the Watchdog timer."
        },
        "wwdt.wdwarnint": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Read value is undefined, only zero should be written."
                },
                {
                    "name": "warnint",
                    "lsb": 0,
                    "nbits": 10,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog warning interrupt compare value."
                }
            ],
            "id": "wwdt.wdwarnint",
            "name": "wdwarnint",
            "offset": "0x14",
            "doc": "Watchdog Warning Interrupt compare value."
        },
        "wwdt.wdwindow": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 24,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Read value is undefined, only zero should be written."
                },
                {
                    "name": "window",
                    "lsb": 0,
                    "nbits": 24,
                    "access": "",
                    "reset": "16777215",
                    "doc": "Watchdog window value."
                }
            ],
            "id": "wwdt.wdwindow",
            "name": "wdwindow",
            "offset": "0x18",
            "doc": "Watchdog Window compare value."
        },
        "uart": {
            "type": "blk",
            "children": [
                "uart.rbr",
                "uart.thr",
                "uart.dll",
                "uart.dlm",
                "uart.ier",
                "uart.iir",
                "uart.fcr",
                "uart.lcr",
                "uart.lsr",
                "uart.scr",
                "uart.acr",
                "uart.fdr",
                "uart.ter",
                "uart.rs485ctrl",
                "uart.rs485adrmatch",
                "uart.rs485dly"
            ],
            "id": "uart",
            "name": "uart",
            "offset": "0x40008000",
            "doc": "UART  "
        },
        "uart.rbr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rbr",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "The UART Receiver Buffer Register contains the oldest received byte in the UART RX FIFO."
                }
            ],
            "id": "uart.rbr",
            "name": "rbr",
            "offset": "0x0",
            "doc": "Receiver Buffer Register. Contains the next received character to be read. (DLAB=0)"
        },
        "uart.thr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "thr",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Writing to the UART Transmit Holding Register causes the data to be stored in the UART transmit FIFO. The byte will be sent when it reaches the bottom of the FIFO and the transmitter is available."
                }
            ],
            "id": "uart.thr",
            "name": "thr",
            "offset": "0x0",
            "doc": "Transmit Holding Register. The next character to be transmitted is written here. (DLAB=0)"
        },
        "uart.dll": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dllsb",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "1",
                    "doc": "The UART Divisor Latch LSB Register, along with the DLM register, determines the baud rate of the UART."
                }
            ],
            "id": "uart.dll",
            "name": "dll",
            "offset": "0x0",
            "doc": "Divisor Latch LSB. Least significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. (DLAB=1)"
        },
        "uart.dlm": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dlmsb",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "The UART Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the UART."
                }
            ],
            "id": "uart.dlm",
            "name": "dlm",
            "offset": "0x4",
            "doc": "Divisor Latch MSB. Most significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. (DLAB=1)"
        },
        "uart.ier": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_3",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "abtointen",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables the auto-baud time-out interrupt."
                },
                {
                    "name": "abeointen",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables the end of auto-baud interrupt."
                },
                {
                    "name": "reserved_2",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reserved_1",
                    "lsb": 4,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "reserved_0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxlie",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "RX Line Interrupt Enable. Enables the UART RX line status interrupts. The status of this interrupt can be read from LSR[4:1]."
                },
                {
                    "name": "threie",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "THRE Interrupt Enable. Enables the THRE interrupt for UART. The status of this interrupt can be read from LSR[5]."
                },
                {
                    "name": "rbrie",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "RBR Interrupt Enable. Enables the Receive Data Available interrupt for UART. It also controls the Character Receive Time-out interrupt."
                }
            ],
            "id": "uart.ier",
            "name": "ier",
            "offset": "0x4",
            "doc": "Interrupt Enable Register. Contains individual interrupt enable bits for the 7 potential UART interrupts. (DLAB=0)"
        },
        "uart.iir": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "abtoint",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Auto-baud time-out interrupt. True if auto-baud has timed out and interrupt is enabled."
                },
                {
                    "name": "abeoint",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "End of auto-baud interrupt. True if auto-baud has finished successfully and interrupt is enabled."
                },
                {
                    "name": "fifoenable",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits are equivalent to FCR[0]."
                },
                {
                    "name": "reserved_0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "intid",
                    "lsb": 1,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt identification. IER[3:1] identifies an interrupt corresponding to the UART Rx FIFO. All other combinations of IER[3:1] not listed below are reserved (100,101,111)."
                },
                {
                    "name": "intstatus",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Interrupt status. Note that IIR[0] is active low. The pending interrupt can be determined by evaluating IIR[3:1]."
                }
            ],
            "id": "uart.iir",
            "name": "iir",
            "offset": "0x8",
            "doc": "Interrupt ID Register. Identifies which interrupt(s) are pending."
        },
        "uart.fcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxtl",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "RX Trigger Level. These two bits determine how many receiver UART FIFO characters must be written before an interrupt is activated."
                },
                {
                    "name": "reserved_1",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "reserved_0",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "txfifores",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "TX FIFO Reset"
                },
                {
                    "name": "rxfifores",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "RX FIFO Reset"
                },
                {
                    "name": "fifoen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "FIFO Enable"
                }
            ],
            "id": "uart.fcr",
            "name": "fcr",
            "offset": "0x8",
            "doc": "FIFO Control Register. Controls UART FIFO usage and modes."
        },
        "uart.lcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "dlab",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Divisor Latch Access Bit"
                },
                {
                    "name": "bc",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Break Control"
                },
                {
                    "name": "ps",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Parity Select"
                },
                {
                    "name": "pe",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Parity Enable"
                },
                {
                    "name": "sbs",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop Bit Select"
                },
                {
                    "name": "wls",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Word Length Select"
                }
            ],
            "id": "uart.lcr",
            "name": "lcr",
            "offset": "0xc",
            "doc": "Line Control Register. Contains controls for frame formatting and break generation."
        },
        "uart.lsr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rxfe",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Error in RX FIFO. LSR[7] is set when a character with a RX error such as framing error, parity error or break interrupt, is loaded into the RBR. This bit is cleared when the LSR register is read and there are no subsequent errors in the UART FIFO."
                },
                {
                    "name": "temt",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Transmitter Empty. TEMT is set when both THR and TSR are empty; TEMT is cleared when either the TSR or the THR contain valid data."
                },
                {
                    "name": "thre",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Transmitter Holding Register Empty. THRE is set immediately upon detection of an empty UART THR and is cleared on a THR write."
                },
                {
                    "name": "bi",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Break Interrupt. When RXD1 is held in the spacing state (all zeros) for one full character transmission (start, data, parity, stop), a break interrupt occurs. Once the break condition has been detected, the receiver goes idle until RXD1 goes to marking state (all ones). A LSR read clears this status bit. The time of break detection is dependent on FCR[0]. Note: The break interrupt is associated with the character at the top of the UART RBR FIFO."
                },
                {
                    "name": "fe",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Framing Error. When the stop bit of a received character is a logic 0, a framing error occurs. A LSR read clears LSR[3]. The time of the framing error detection is dependent on FCR0. Upon detection of a framing error, the RX will attempt to re-synchronize to the data and assume that the bad stop bit is actually an early start bit. However, it cannot be assumed that the next received byte will be correct even if there is no Framing Error. Note: A framing error is associated with the character at the top of the UART RBR FIFO."
                },
                {
                    "name": "pe",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Parity Error. When the parity bit of a received character is in the wrong state, a parity error occurs. A LSR read clears LSR[2]. Time of parity error detection is dependent on FCR[0]. Note: A parity error is associated with the character at the top of the UART RBR FIFO."
                },
                {
                    "name": "oe",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Overrun Error. The overrun error condition is set as soon as it occurs. A LSR read clears LSR[1]. LSR[1] is set when UART RSR has a new character assembled and the UART RBR FIFO is full. In this case, the UART RBR FIFO will not be overwritten and the character in the UART RSR will be lost."
                },
                {
                    "name": "rdr",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Receiver Data Ready. LSR[0] is set when the RBR holds an unread character and is cleared when the UART RBR FIFO is empty."
                }
            ],
            "id": "uart.lsr",
            "name": "lsr",
            "offset": "0x14",
            "doc": "Line Status Register. Contains flags for transmit and receive status, including line errors."
        },
        "uart.scr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "pad",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "A readable, writable byte."
                }
            ],
            "id": "uart.scr",
            "name": "scr",
            "offset": "0x1c",
            "doc": "Scratch Pad Register. Eight-bit temporary storage for software."
        },
        "uart.acr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 10,
                    "nbits": 22,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "abtointclr",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Auto-baud time-out interrupt clear (write only accessible)"
                },
                {
                    "name": "abeointclr",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "End of auto-baud interrupt clear (write only accessible)"
                },
                {
                    "name": "reserved_0",
                    "lsb": 3,
                    "nbits": 5,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "autorestart",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Restart enable"
                },
                {
                    "name": "mode",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Auto-baud mode select"
                },
                {
                    "name": "start",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start bit. This bit is automatically cleared after auto-baud completion."
                }
            ],
            "id": "uart.acr",
            "name": "acr",
            "offset": "0x20",
            "doc": "Auto-baud Control Register. Contains controls for the auto-baud feature."
        },
        "uart.fdr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "mulval",
                    "lsb": 4,
                    "nbits": 4,
                    "access": "",
                    "reset": "1",
                    "doc": "Baud rate pre-scaler multiplier value. This field must be greater or equal 1 for UART to operate properly, regardless of whether the fractional baud rate generator is used or not."
                },
                {
                    "name": "divaddval",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "",
                    "reset": "0",
                    "doc": "Baud rate generation pre-scaler divisor value. If this field is 0, fractional baud rate generator will not impact the UART baud rate."
                }
            ],
            "id": "uart.fdr",
            "name": "fdr",
            "offset": "0x28",
            "doc": "Fractional Divider Register. Generates a clock input for the baud rate divider."
        },
        "uart.ter": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "txen",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "When this bit is 1, as it is after a Reset, data written to the THR is output on the TXD pin as soon as any preceding data has been sent. If this bit cleared to 0 while a character is being sent, the transmission of that character is completed, but no further characters are sent until this bit is set again. In other words, a 0 in this bit blocks the transfer of characters from the THR or TX FIFO into the transmit shift register. Software can clear this bit when it detects that the a hardware-handshaking TX-permit signal (CTS) has gone false, or with software handshaking, when it receives an XOFF character (DC3). Software can set this bit again when it detects that the TX-permit signal has gone true, or when it receives an XON (DC1) character."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                }
            ],
            "id": "uart.ter",
            "name": "ter",
            "offset": "0x30",
            "doc": "Transmit Enable Register. Turns off UART transmitter for use with software flow control."
        },
        "uart.rs485ctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 6,
                    "nbits": 26,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "oinv",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Polarity control. This bit reverses the polarity of the direction control signal on the RTS (or DTR) pin."
                },
                {
                    "name": "dctrl",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Auto direction control enable."
                },
                {
                    "name": "sel",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Select direction control pin"
                },
                {
                    "name": "aaden",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "AAD enable."
                },
                {
                    "name": "rxdis",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Receiver enable."
                },
                {
                    "name": "nmmen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "NMM enable."
                }
            ],
            "id": "uart.rs485ctrl",
            "name": "rs485ctrl",
            "offset": "0x4c",
            "doc": "RS-485/EIA-485 Control. Contains controls to configure various aspects of RS-485/EIA-485 modes."
        },
        "uart.rs485adrmatch": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "adrmatch",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Contains the address match value."
                }
            ],
            "id": "uart.rs485adrmatch",
            "name": "rs485adrmatch",
            "offset": "0x50",
            "doc": "RS-485/EIA-485 address match. Contains the address match value for RS-485/EIA-485 mode."
        },
        "uart.rs485dly": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "dly",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Contains the direction control (RTS or DTR) delay value. This register works in conjunction with an 8-bit counter."
                }
            ],
            "id": "uart.rs485dly",
            "name": "rs485dly",
            "offset": "0x54",
            "doc": "RS-485/EIA-485 direction control delay."
        },
        "ct16b0": {
            "type": "blk",
            "children": [
                "ct16b0.ir",
                "ct16b0.tcr",
                "ct16b0.tc",
                "ct16b0.pr",
                "ct16b0.pc",
                "ct16b0.mcr",
                "ct16b0.mr%s",
                "ct16b0.mr%s",
                "ct16b0.mr%s",
                "ct16b0.mr%s",
                "ct16b0.emr",
                "ct16b0.pwmc"
            ],
            "id": "ct16b0",
            "name": "ct16b0",
            "offset": "0x4000c000",
            "doc": "16-bitcounter/timers (CT16B0/1)"
        },
        "ct16b0.ir": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mr3int",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 3."
                },
                {
                    "name": "mr2int",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 2."
                },
                {
                    "name": "mr1int",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 1."
                },
                {
                    "name": "mr0int",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 0."
                }
            ],
            "id": "ct16b0.ir",
            "name": "ir",
            "offset": "0x0",
            "doc": "Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending."
        },
        "ct16b0.tcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "crst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero."
                },
                {
                    "name": "cen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled."
                }
            ],
            "id": "ct16b0.tcr",
            "name": "tcr",
            "offset": "0x4",
            "doc": "Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
        },
        "ct16b0.tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "tc",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter value."
                }
            ],
            "id": "ct16b0.tc",
            "name": "tc",
            "offset": "0x8",
            "doc": "Timer Counter (TC). The 16-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR."
        },
        "ct16b0.pr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "pr",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Prescale counter max value."
                }
            ],
            "id": "ct16b0.pr",
            "name": "pr",
            "offset": "0xc",
            "doc": "Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC."
        },
        "ct16b0.pc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "pc",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "prescale counter value."
                }
            ],
            "id": "ct16b0.pc",
            "name": "pc",
            "offset": "0x10",
            "doc": "Prescale Counter (PC). The 16-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface."
        },
        "ct16b0.mcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "mr3s",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                },
                {
                    "name": "mr3r",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR3: the TC will be reset if MR3 matches it."
                },
                {
                    "name": "mr3i",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                },
                {
                    "name": "mr2s",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                },
                {
                    "name": "mr2r",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR2: the TC will be reset if MR2 matches it."
                },
                {
                    "name": "mr2i",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                },
                {
                    "name": "mr1s",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                },
                {
                    "name": "mr1r",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR1: the TC will be reset if MR1 matches it."
                },
                {
                    "name": "mr1i",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                },
                {
                    "name": "mr0s",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                },
                {
                    "name": "mr0r",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR0: the TC will be reset if MR0 matches it."
                },
                {
                    "name": "mr0i",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                }
            ],
            "id": "ct16b0.mcr",
            "name": "mcr",
            "offset": "0x14",
            "doc": "Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs."
        },
        "ct16b0.mr%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "match",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter match value."
                }
            ],
            "id": "ct16b0.mr%s",
            "name": "mr%s",
            "offset": "0x24",
            "doc": "Match Register. MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate aninterrupt every time MR matches the TC."
        },
        "ct16b0.emr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "emc3",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 3. Determines the functionality of External Match 3."
                },
                {
                    "name": "emc2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 2. Determines the functionality of External Match 2."
                },
                {
                    "name": "emc1",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 1. Determines the functionality of External Match 1."
                },
                {
                    "name": "emc0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 0. Determines the functionality of External Match 0."
                },
                {
                    "name": "em3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 3. This bit reflects the state of output of match channel 3. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. There is no output pin available for this channel on either of the 16-bit timers."
                },
                {
                    "name": "em2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 2. This bit reflects the state of output match channel 2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. Note that on counter/timer 0 this match channel is not pinned out. This bit is driven to the CT16B1_MAT2 pin if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 1. This bit reflects the state of output CT16B0_MAT1/CT16B1_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT16B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 0. This bit reflects the state of output CT16B0_MAT0/CT16B1_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT16B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                }
            ],
            "id": "ct16b0.emr",
            "name": "emr",
            "offset": "0x3c",
            "doc": "External Match Register (EMR). The EMR controls the match function and the external match pins CT16B0_MAT[2:0]."
        },
        "ct16b0.pwmc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "pwmen3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for match channel 3. When zero, match channel 3 is controlled by EM3.  Note: It is recommended to use to set the PWM cycle because it is not pinned out."
                },
                {
                    "name": "pwmen2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for match channel 2 or pin CT16B0_MAT2. When zero, match channel 2 or pin CT16B0_MAT2 is controlled by EM2. Match channel 2 is not pinned out on timer 1."
                },
                {
                    "name": "pwmen1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT16Bn_MAT1. When zero, CT16Bn_MAT1 is controlled by EM1."
                },
                {
                    "name": "pwmen0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT16Bn_MAT0. When zero, CT16Bn_MAT0 is controlled by EM0."
                }
            ],
            "id": "ct16b0.pwmc",
            "name": "pwmc",
            "offset": "0x74",
            "doc": "PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT16B0_MAT[2:0]."
        },
        "ct16b1": {
            "type": "blk",
            "children": [],
            "id": "ct16b1",
            "name": "ct16b1",
            "offset": "0x40010000",
            "doc": ""
        },
        "ct32b0": {
            "type": "blk",
            "children": [
                "ct32b0.ir",
                "ct32b0.tcr",
                "ct32b0.tc",
                "ct32b0.pr",
                "ct32b0.pc",
                "ct32b0.mcr",
                "ct32b0.mr%s",
                "ct32b0.mr%s",
                "ct32b0.mr%s",
                "ct32b0.mr%s",
                "ct32b0.emr",
                "ct32b0.pwmc"
            ],
            "id": "ct32b0",
            "name": "ct32b0",
            "offset": "0x40014000",
            "doc": "32-bit counter/timers (CT32B0/1) "
        },
        "ct32b0.ir": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cr0int",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for capture channel 0 event."
                },
                {
                    "name": "mr3int",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 3."
                },
                {
                    "name": "mr2int",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 2."
                },
                {
                    "name": "mr1int",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 1."
                },
                {
                    "name": "mr0int",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 0."
                }
            ],
            "id": "ct32b0.ir",
            "name": "ir",
            "offset": "0x0",
            "doc": "Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending."
        },
        "ct32b0.tcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "crst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Counter Reset When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero."
                },
                {
                    "name": "cen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Counter Enable When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled."
                }
            ],
            "id": "ct32b0.tcr",
            "name": "tcr",
            "offset": "0x4",
            "doc": "Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
        },
        "ct32b0.tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "tc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter value."
                }
            ],
            "id": "ct32b0.tc",
            "name": "tc",
            "offset": "0x8",
            "doc": "Timer Counter (TC). The 32-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR."
        },
        "ct32b0.pr": {
            "type": "reg",
            "fields": [
                {
                    "name": "pr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Prescale counter max value."
                }
            ],
            "id": "ct32b0.pr",
            "name": "pr",
            "offset": "0xc",
            "doc": "Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC."
        },
        "ct32b0.pc": {
            "type": "reg",
            "fields": [
                {
                    "name": "pc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Prescale counter value."
                }
            ],
            "id": "ct32b0.pc",
            "name": "pc",
            "offset": "0x10",
            "doc": "Prescale Counter (PC). The 32-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface."
        },
        "ct32b0.mcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "mr3s",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                },
                {
                    "name": "mr3r",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR3: the TC will be reset if MR3 matches it."
                },
                {
                    "name": "mr3i",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                },
                {
                    "name": "mr2s",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                },
                {
                    "name": "mr2r",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR2: the TC will be reset if MR2 matches it."
                },
                {
                    "name": "mr2i",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                },
                {
                    "name": "mr1s",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                },
                {
                    "name": "mr1r",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR1: the TC will be reset if MR1 matches it."
                },
                {
                    "name": "mr1i",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                },
                {
                    "name": "mr0s",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                },
                {
                    "name": "mr0r",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR0: the TC will be reset if MR0 matches it."
                },
                {
                    "name": "mr0i",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                }
            ],
            "id": "ct32b0.mcr",
            "name": "mcr",
            "offset": "0x14",
            "doc": "Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs."
        },
        "ct32b0.mr%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "match",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter match value."
                }
            ],
            "id": "ct32b0.mr%s",
            "name": "mr%s",
            "offset": "0x24",
            "doc": "Match Register. MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate aninterrupt every time MR matches the TC."
        },
        "ct32b0.emr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "emc3",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 3. Determines the functionality of External Match 3."
                },
                {
                    "name": "emc2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 2. Determines the functionality of External Match 2."
                },
                {
                    "name": "emc1",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 1. Determines the functionality of External Match 1."
                },
                {
                    "name": "emc0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 0. Determines the functionality of External Match 0."
                },
                {
                    "name": "em3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 3. This bit reflects the state of output CT32Bn_MAT3, whether or not this output is connected to its pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. This bit is driven to the CT32B0_MAT3/CT16B1_MAT3 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 2. This bit reflects the state of output CT32Bn_MAT2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. This bit is driven to the CT32B0_MAT2/CT16B1_MAT2 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 1. This bit reflects the state of output CT32Bn_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT32B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 0. This bit reflects the state of output CT32Bn_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT32B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                }
            ],
            "id": "ct32b0.emr",
            "name": "emr",
            "offset": "0x3c",
            "doc": "External Match Register (EMR). The EMR controls the match function and the external match pins CT32B0_MAT[3:0]."
        },
        "ct32b0.pwmc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "pwmen3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT3. When zero, CT32Bn_MAT3 is controlled by EM3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                },
                {
                    "name": "pwmen2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT2. When zero, CT32Bn_MAT2 is controlled by EM2."
                },
                {
                    "name": "pwmen1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT1. When zero, CT32Bn_MAT1 is controlled by EM1."
                },
                {
                    "name": "pwmen0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT0. When zero, CT32Bn_MAT0 is controlled by EM0."
                }
            ],
            "id": "ct32b0.pwmc",
            "name": "pwmc",
            "offset": "0x74",
            "doc": "PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT32B0_MAT[3:0]."
        },
        "ct32b1": {
            "type": "blk",
            "children": [
                "ct32b1.ir",
                "ct32b1.tcr",
                "ct32b1.tc",
                "ct32b1.pr",
                "ct32b1.pc",
                "ct32b1.mcr",
                "ct32b1.mr%s",
                "ct32b1.mr%s",
                "ct32b1.mr%s",
                "ct32b1.mr%s",
                "ct32b1.ccr",
                "ct32b1.cr0",
                "ct32b1.emr",
                "ct32b1.ctcr",
                "ct32b1.pwmc"
            ],
            "id": "ct32b1",
            "name": "ct32b1",
            "offset": "0x40018000",
            "doc": "Product name title=UM10429 Chapter title=LPC11102 32-bit counter/timers (CT32B0/1) Modification date=11/1/2010 Major revision=1 Minor revision=not available "
        },
        "ct32b1.ir": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cr0int",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for capture channel 0 event."
                },
                {
                    "name": "mr3int",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 3."
                },
                {
                    "name": "mr2int",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 2."
                },
                {
                    "name": "mr1int",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 1."
                },
                {
                    "name": "mr0int",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt flag for match channel 0."
                }
            ],
            "id": "ct32b1.ir",
            "name": "ir",
            "offset": "0x0",
            "doc": "Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending."
        },
        "ct32b1.tcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "crst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Counter Reset When one, the Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of PCLK. The counters remain reset until TCR[1] is returned to zero."
                },
                {
                    "name": "cen",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Counter Enable When one, the Timer Counter and Prescale Counter are enabled for counting. When zero, the counters are disabled."
                }
            ],
            "id": "ct32b1.tcr",
            "name": "tcr",
            "offset": "0x4",
            "doc": "Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
        },
        "ct32b1.tc": {
            "type": "reg",
            "fields": [
                {
                    "name": "tc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter value."
                }
            ],
            "id": "ct32b1.tc",
            "name": "tc",
            "offset": "0x8",
            "doc": "Timer Counter (TC). The 32-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR."
        },
        "ct32b1.pr": {
            "type": "reg",
            "fields": [
                {
                    "name": "pr",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Prescale counter max value."
                }
            ],
            "id": "ct32b1.pr",
            "name": "pr",
            "offset": "0xc",
            "doc": "Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC."
        },
        "ct32b1.pc": {
            "type": "reg",
            "fields": [
                {
                    "name": "pc",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Prescale counter value."
                }
            ],
            "id": "ct32b1.pc",
            "name": "pc",
            "offset": "0x10",
            "doc": "Prescale Counter (PC). The 32-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface."
        },
        "ct32b1.mcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "mr3s",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                },
                {
                    "name": "mr3r",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR3: the TC will be reset if MR3 matches it."
                },
                {
                    "name": "mr3i",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                },
                {
                    "name": "mr2s",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                },
                {
                    "name": "mr2r",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR2: the TC will be reset if MR2 matches it."
                },
                {
                    "name": "mr2i",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                },
                {
                    "name": "mr1s",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                },
                {
                    "name": "mr1r",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR1: the TC will be reset if MR1 matches it."
                },
                {
                    "name": "mr1i",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                },
                {
                    "name": "mr0s",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                },
                {
                    "name": "mr0r",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reset on MR0: the TC will be reset if MR0 matches it."
                },
                {
                    "name": "mr0i",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                }
            ],
            "id": "ct32b1.mcr",
            "name": "mcr",
            "offset": "0x14",
            "doc": "Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs."
        },
        "ct32b1.mr%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "match",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter match value."
                }
            ],
            "id": "ct32b1.mr%s",
            "name": "mr%s",
            "offset": "0x24",
            "doc": "Match Register. MR can be enabled through theMCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
        },
        "ct32b1.ccr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "cap0i",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Interrupt on CT32Bn_CAP0 event: a CR0 load due to a CT32Bn_CAP0 event will generate an interrupt."
                },
                {
                    "name": "cap0fe",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Capture on CT32Bn_CAP0 falling edge: a sequence of 1 then 0 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC."
                },
                {
                    "name": "cap0re",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Capture on CT32Bn_CAP0 rising edge: a sequence of 0 then 1 on CT32Bn_CAP0 will cause CR0 to be loaded with the contents of TC."
                }
            ],
            "id": "ct32b1.ccr",
            "name": "ccr",
            "offset": "0x28",
            "doc": "Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
        },
        "ct32b1.cr0": {
            "type": "reg",
            "fields": [
                {
                    "name": "cap",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Timer counter capture value."
                }
            ],
            "id": "ct32b1.cr0",
            "name": "cr0",
            "offset": "0x2c",
            "doc": "Capture Register 0 (CR0). CR0 is loaded with the value of TC when there is an event on the CT16B0_CAP0 input."
        },
        "ct32b1.emr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "emc3",
                    "lsb": 10,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 3. Determines the functionality of External Match 3."
                },
                {
                    "name": "emc2",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 2. Determines the functionality of External Match 2."
                },
                {
                    "name": "emc1",
                    "lsb": 6,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 1. Determines the functionality of External Match 1."
                },
                {
                    "name": "emc0",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match Control 0. Determines the functionality of External Match 0."
                },
                {
                    "name": "em3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 3. This bit reflects the state of output CT32Bn_MAT3, whether or not this output is connected to its pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[11:10] control the functionality of this output. This bit is driven to the CT32B0_MAT3/CT16B1_MAT3 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 2. This bit reflects the state of output CT32Bn_MAT2, whether or not this output is connected to its pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[9:8] control the functionality of this output. This bit is driven to the CT32B0_MAT2/CT16B1_MAT2 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 1. This bit reflects the state of output CT32Bn_MAT1, whether or not this output is connected to its pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[7:6] control the functionality of this output. This bit is driven to the CT32B0_MAT1/CT16B1_MAT1 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                },
                {
                    "name": "em0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "External Match 0. This bit reflects the state of output CT32Bn_MAT0, whether or not this output is connected to its pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing. Bits EMR[5:4] control the functionality of this output. This bit is driven to the CT32B0_MAT0/CT16B1_MAT0 pins if the match function is selected in the IOCON registers (0 = LOW, 1 = HIGH)."
                }
            ],
            "id": "ct32b1.emr",
            "name": "emr",
            "offset": "0x3c",
            "doc": "External Match Register (EMR). The EMR controls the match function and the external match pins CT32B0_MAT[3:0]."
        },
        "ct32b1.ctcr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "cis",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Count Input Select. When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected in the TnCTCR, the 3 bits for that input in the Capture Control Register (TnCCR) must be programmed as 000.  0x1 - 0x3 reserved."
                },
                {
                    "name": "ctm",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Counter/Timer Mode. This field selects which rising PCLK edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: every rising PCLK edge"
                }
            ],
            "id": "ct32b1.ctcr",
            "name": "ctcr",
            "offset": "0x70",
            "doc": "Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
        },
        "ct32b1.pwmc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "pwmen3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT3. When zero, CT32Bn_MAT3 is controlled by EM3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                },
                {
                    "name": "pwmen2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT2. When zero, CT32Bn_MAT2 is controlled by EM2."
                },
                {
                    "name": "pwmen1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT1. When zero, CT32Bn_MAT1 is controlled by EM1."
                },
                {
                    "name": "pwmen0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When one, PWM mode is enabled for CT32Bn_MAT0. When zero, CT32Bn_MAT0 is controlled by EM0."
                }
            ],
            "id": "ct32b1.pwmc",
            "name": "pwmc",
            "offset": "0x74",
            "doc": "PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT32B0_MAT[3:0]."
        },
        "adc": {
            "type": "blk",
            "children": [
                "adc.cr",
                "adc.gdr",
                "adc.stat",
                "adc.inten",
                "adc.dr%s",
                "adc.dr%s",
                "adc.dr%s",
                "adc.dr%s",
                "adc.dr%s"
            ],
            "id": "adc",
            "name": "adc",
            "offset": "0x4001c000",
            "doc": "10-bit ADC"
        },
        "adc.cr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 28,
                    "nbits": 4,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "edge",
                    "lsb": 27,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is significant only when the START field contains 010-111. In these cases: Start conversion on a falling edge on the selected CAP/MAT signal."
                },
                {
                    "name": "start",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "When the BURST bit is 0, these bits control whether and when an A/D conversion is started:"
                },
                {
                    "name": "reserved_0",
                    "lsb": 20,
                    "nbits": 4,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "clks",
                    "lsb": 17,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "This field selects the number of clocks used for each conversion in Burst mode, and the number of bits of accuracy of the result in the LS bits of ADDR, between 11 clocks (10 bits) and 4 clocks (3 bits)."
                },
                {
                    "name": "burst",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Burst mode"
                },
                {
                    "name": "clkdiv",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "The APB clock (PCLK) is divided by CLKDIV +1 to produce the clock for the ADC, which should be less than or equal to 4.5 MHz. Typically, software should program the smallest value in this field that yields a clock of 4.5 MHz or slightly less, but in certain cases (such as a high-impedance analog source) a slower clock may be desirable."
                },
                {
                    "name": "sel",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects which of the AD7:0 pins is (are) to be sampled and converted. Bit 0 selects Pin AD0, bit 1 selects pin AD1,..., and bit 7 selects pin AD7.  In software-controlled mode (BURST = 0), only one channel can be selected, i.e. only one of these bits should be 1.  In hardware scan mode (BURST = 1), any numbers of channels can be selected, i.e any or all bits can be set to 1. If all bits are set to 0, channel 0 is selected automatically (SEL = 0x01)."
                }
            ],
            "id": "adc.cr",
            "name": "cr",
            "offset": "0x0",
            "doc": "A/D Control Register. The ADCR register must be written to select the operating mode before A/D conversion can occur."
        },
        "adc.gdr": {
            "type": "reg",
            "fields": [
                {
                    "name": "done",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read and when the ADCR is written. If the ADCR is written while a conversion is still in progress, this bit is set and a new conversion is started."
                },
                {
                    "name": "overrun",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits."
                },
                {
                    "name": "reserved_2",
                    "lsb": 27,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. These bits always read as zeroes."
                },
                {
                    "name": "chn",
                    "lsb": 24,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits contain the channel from which the result bits V_VREF were converted."
                },
                {
                    "name": "reserved_1",
                    "lsb": 16,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. These bits always read as zeroes."
                },
                {
                    "name": "v_vref",
                    "lsb": 6,
                    "nbits": 10,
                    "access": "",
                    "reset": "0",
                    "doc": "When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin selected by the SEL field, divided by the voltage on the VDD pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VSS, while 0x3FF indicates that the voltage on ADn was close to, equal to, or greater than that on VREF."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. These bits always read as zeroes."
                }
            ],
            "id": "adc.gdr",
            "name": "gdr",
            "offset": "0x4",
            "doc": "A/D Global Data Register. Contains the result of the most recent A/D conversion."
        },
        "adc.stat": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "",
                    "reset": "0",
                    "doc": "Unused, always 0."
                },
                {
                    "name": "adint",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is the A/D interrupt flag. It is one when any of the individual A/D channel Done flags is asserted and enabled to contribute to the A/D interrupt via the ADINTEN register."
                },
                {
                    "name": "overrun",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits mirror the OVERRRUN status flags that appear in the result register for each A/D channel n. Reading ADSTAT allows checking the status of all A/D channels simultaneously."
                },
                {
                    "name": "done",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits mirror the DONE status flags that appear in the result register for each A/D channel n."
                }
            ],
            "id": "adc.stat",
            "name": "stat",
            "offset": "0x30",
            "doc": "A/D Status Register. This register contains DONE and OVERRUN flags for all of the A/D channels, as well as the A/D interrupt flag."
        },
        "adc.inten": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "",
                    "reset": "0",
                    "doc": "Unused, always 0."
                },
                {
                    "name": "adginten",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "When 1, enables the global DONE flag in ADDR to generate an interrupt. When 0, only the individual A/D channels enabled by ADINTEN 7:0 will generate interrupts."
                },
                {
                    "name": "adintenn",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits allow control over which A/D channels generate interrupts for conversion completion. When bit 0 is one, completion of a conversion on A/D channel 0 will generate an interrupt, when bit 1 is one, completion of a conversion on A/D channel 1 will generate an interrupt, etc."
                }
            ],
            "id": "adc.inten",
            "name": "inten",
            "offset": "0xc",
            "doc": "A/D Interrupt Enable Register. This register contains enable bits that allow the DONE flag of each A/D channel to be included or excluded from contributing to the generation of an A/D interrupt."
        },
        "adc.dr%s": {
            "type": "reg",
            "fields": [
                {
                    "name": "done",
                    "lsb": 31,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is set to 1 when an A/D conversion completes. It is cleared when this register is read."
                },
                {
                    "name": "overrun",
                    "lsb": 30,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 in burst mode if the results of one or more conversions was (were) lost and overwritten before the conversion that produced the result in the V_VREF bits.This bit is cleared by reading this register."
                },
                {
                    "name": "reserved_1",
                    "lsb": 16,
                    "nbits": 14,
                    "access": "",
                    "reset": "0",
                    "doc": "These bits always read as zeroes. "
                },
                {
                    "name": "v_vref",
                    "lsb": 6,
                    "nbits": 10,
                    "access": "",
                    "reset": "0",
                    "doc": "When DONE is 1, this field contains a binary fraction representing the voltage on the ADn pin, divided by the voltage on the VREF pin. Zero in the field indicates that the voltage on the ADn pin was less than, equal to, or close to that on VREF, while 0x3FF indicates that the voltage on AD input was close to, equal to, or greater than that on VREF."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 6,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, always 0. These bits always read as zeroes. "
                }
            ],
            "id": "adc.dr%s",
            "name": "dr%s",
            "offset": "0x20",
            "doc": "A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n."
        },
        "pmu": {
            "type": "blk",
            "children": [
                "pmu.pcon"
            ],
            "id": "pmu",
            "name": "pmu",
            "offset": "0x40038000",
            "doc": "PMU (PowerManagement Unit)  "
        },
        "pmu.pcon": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_5",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Do not write ones to this bit."
                },
                {
                    "name": "reserved_4",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. This bit must always be written as 0."
                },
                {
                    "name": "reserved_3",
                    "lsb": 9,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved.  These bits must always be written as 0."
                },
                {
                    "name": "sleepflag",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Sleep mode flag"
                },
                {
                    "name": "reserved_2",
                    "lsb": 2,
                    "nbits": 6,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. These bits must always be written as 0."
                },
                {
                    "name": "reserved_1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved.  This bit must always be written as 0."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. This bit must always be written as 0."
                }
            ],
            "id": "pmu.pcon",
            "name": "pcon",
            "offset": "0x0",
            "doc": "Power control register"
        },
        "flashctrl": {
            "type": "blk",
            "children": [
                "flashctrl.flashcfg",
                "flashctrl.fmsstart",
                "flashctrl.fmsstop",
                "flashctrl.fmsw0",
                "flashctrl.fmsw1",
                "flashctrl.fmsw2",
                "flashctrl.fmsw3",
                "flashctrl.fmstat",
                "flashctrl.fmstatclr"
            ],
            "id": "flashctrl",
            "name": "flashctrl",
            "offset": "0x4003c000",
            "doc": "Flash controller"
        },
        "flashctrl.flashcfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. User software must not change the value of these bits. Bits 31:2 must be written back exactly as read."
                },
                {
                    "name": "flashtim",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Flash memory access time. FLASHTIM +1 is equal to the number of system clocks used for flash access."
                }
            ],
            "id": "flashctrl.flashcfg",
            "name": "flashcfg",
            "offset": "0x10",
            "doc": "Flash memory access time configuration register"
        },
        "flashctrl.fmsstart": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "start",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "",
                    "reset": "0",
                    "doc": "Signature generation start address (corresponds to AHB byte address bits[20:4])."
                }
            ],
            "id": "flashctrl.fmsstart",
            "name": "fmsstart",
            "offset": "0x20",
            "doc": "Signature start address register"
        },
        "flashctrl.fmsstop": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 18,
                    "nbits": 14,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "sig_start",
                    "lsb": 17,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start control bit for signature generation."
                },
                {
                    "name": "stop",
                    "lsb": 0,
                    "nbits": 17,
                    "access": "",
                    "reset": "0",
                    "doc": "BIST stop address divided by 16 (corresponds to AHB byte address [20:4])."
                }
            ],
            "id": "flashctrl.fmsstop",
            "name": "fmsstop",
            "offset": "0x24",
            "doc": "Signature stop-address register"
        },
        "flashctrl.fmsw0": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw0_31_0",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Word 0 of 128-bit signature (bits 31 to 0)."
                }
            ],
            "id": "flashctrl.fmsw0",
            "name": "fmsw0",
            "offset": "0x2c",
            "doc": "Word 0 [31:0]"
        },
        "flashctrl.fmsw1": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw1_63_32",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Word 1 of 128-bit signature (bits 63 to 32)."
                }
            ],
            "id": "flashctrl.fmsw1",
            "name": "fmsw1",
            "offset": "0x30",
            "doc": "Word 1 [63:32]"
        },
        "flashctrl.fmsw2": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw2_95_64",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Word 2 of 128-bit signature (bits 95 to 64)."
                }
            ],
            "id": "flashctrl.fmsw2",
            "name": "fmsw2",
            "offset": "0x34",
            "doc": "Word 2 [95:64]"
        },
        "flashctrl.fmsw3": {
            "type": "reg",
            "fields": [
                {
                    "name": "sw3_127_96",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Word 3 of 128-bit signature (bits 127 to 96)."
                }
            ],
            "id": "flashctrl.fmsw3",
            "name": "fmsw3",
            "offset": "0x38",
            "doc": "Word 3 [127:96]"
        },
        "flashctrl.fmstat": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "sig_done",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "When 1, a previously started signature generation has completed. See FMSTATCLR register description for clearing this flag."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                }
            ],
            "id": "flashctrl.fmstat",
            "name": "fmstat",
            "offset": "0xfe0",
            "doc": "Signature generation status register"
        },
        "flashctrl.fmstatclr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 3,
                    "nbits": 29,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "sig_done_clr",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Writing a 1 to this bits clears the signature generation completion flag (SIG_DONE) in the FMSTAT register."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                }
            ],
            "id": "flashctrl.fmstatclr",
            "name": "fmstatclr",
            "offset": "0xfe8",
            "doc": "Signature generation status clear register"
        },
        "spi0": {
            "type": "blk",
            "children": [
                "spi0.cr0",
                "spi0.cr1",
                "spi0.dr",
                "spi0.sr",
                "spi0.cpsr",
                "spi0.imsc",
                "spi0.ris",
                "spi0.mis",
                "spi0.icr"
            ],
            "id": "spi0",
            "name": "spi0",
            "offset": "0x40040000",
            "doc": "SPI0"
        },
        "spi0.cr0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "scr",
                    "lsb": 8,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Serial Clock Rate. The number of prescaler output clocks per bit on the bus, minus one. Given that CPSDVSR is the prescale divider, and the APB clock PCLK clocks the prescaler, the bit frequency is PCLK / (CPSDVSR X [SCR+1])."
                },
                {
                    "name": "cpha",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Clock Out Phase. This bit is only used in SPI mode."
                },
                {
                    "name": "cpol",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Clock Out Polarity. This bit is only used in SPI mode."
                },
                {
                    "name": "frf",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Frame Format."
                },
                {
                    "name": "dss",
                    "lsb": 0,
                    "nbits": 4,
                    "access": "",
                    "reset": "0",
                    "doc": "Data Size Select. This field controls the number of bits transferred in each frame. Values 0000-0010 are not supported and should not be used."
                }
            ],
            "id": "spi0.cr0",
            "name": "cr0",
            "offset": "0x0",
            "doc": "Control Register 0. Selects the serial clock rate, bus type, and data size."
        },
        "spi0.cr1": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "sod",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Slave Output Disable. This bit is relevant only in slave mode (MS = 1). If it is 1, this blocks this SPI controller from driving the transmit data line (MISO)."
                },
                {
                    "name": "ms",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Master/Slave Mode.This bit can only be written when the SSE bit is 0."
                },
                {
                    "name": "sse",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "SPI Enable."
                },
                {
                    "name": "lbm",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Loop Back Mode."
                }
            ],
            "id": "spi0.cr1",
            "name": "cr1",
            "offset": "0x4",
            "doc": "Control Register 1. Selects master/slave and other modes."
        },
        "spi0.dr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "data",
                    "lsb": 0,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Write: software can write data to be sent in a future frame to this register whenever the TNF bit in the Status register is 1, indicating that the Tx FIFO is not full. If the Tx FIFO was previously empty and the SPI controller is not busy on the bus, transmission of the data will begin immediately. Otherwise the data written to this register will be sent as soon as all previous data has been sent (and received). If the data length is less than 16 bit, software must right-justify the data written to this register. Read: software can read data from this register whenever the RNE bit in the Status register is 1, indicating that the Rx FIFO is not empty. When software reads this register, the SPI controller returns data from the least recent frame in the Rx FIFO. If the data length is less than 16 bit, the data is right-justified in this field with higher order bits filled with 0s."
                }
            ],
            "id": "spi0.dr",
            "name": "dr",
            "offset": "0x8",
            "doc": "Data Register. Writes fill the transmit FIFO, and reads empty the receive FIFO."
        },
        "spi0.sr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "bsy",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Busy. This bit is 0 if the SPI controller is idle, 1 if it is currently sending/receiving a frame and/or the Tx FIFO is not empty."
                },
                {
                    "name": "rff",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Receive FIFO Full. This bit is 1 if the Receive FIFO is full, 0 if not."
                },
                {
                    "name": "rne",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Receive FIFO Not Empty. This bit is 0 if the Receive FIFO is empty, 1 if not."
                },
                {
                    "name": "tnf",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Transmit FIFO Not Full. This bit is 0 if the Tx FIFO is full, 1 if not."
                },
                {
                    "name": "tfe",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Transmit FIFO Empty. This bit is 1 is the Transmit FIFO is empty, 0 if not."
                }
            ],
            "id": "spi0.sr",
            "name": "sr",
            "offset": "0xc",
            "doc": "Status Register"
        },
        "spi0.cpsr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "cpsdvsr",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "This even value between 2 and 254, by which SPI_PCLK is divided to yield the prescaler output clock. Bit 0 always reads as 0."
                }
            ],
            "id": "spi0.cpsr",
            "name": "cpsr",
            "offset": "0x10",
            "doc": "Clock Prescale Register"
        },
        "spi0.imsc": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "txim",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Software should set this bit to enable interrupt when the Tx FIFO is at least half empty."
                },
                {
                    "name": "rxim",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Software should set this bit to enable interrupt when the Rx FIFO is at least half full."
                },
                {
                    "name": "rtim",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Software should set this bit to enable interrupt when a Receive Time-out condition occurs. A Receive Time-out occurs when the Rx FIFO is not empty, and no has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1])."
                },
                {
                    "name": "rorim",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Software should set this bit to enable interrupt when a Receive Overrun occurs, that is, when the Rx FIFO is full and another frame is completely received. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs."
                }
            ],
            "id": "spi0.imsc",
            "name": "imsc",
            "offset": "0x14",
            "doc": "Interrupt Mask Set and Clear Register"
        },
        "spi0.ris": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "txris",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "This bit is 1 if the Tx FIFO is at least half empty."
                },
                {
                    "name": "rxris",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if the Rx FIFO is at least half full."
                },
                {
                    "name": "rtris",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if the Rx FIFO is not empty, and has not been read for a time-out period. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1])."
                },
                {
                    "name": "rorris",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if another frame was completely received while the RxFIFO was full. The ARM spec implies that the preceding frame data is overwritten by the new frame data when this occurs."
                }
            ],
            "id": "spi0.ris",
            "name": "ris",
            "offset": "0x18",
            "doc": "Raw Interrupt Status Register"
        },
        "spi0.mis": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 4,
                    "nbits": 28,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "txmis",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if the Tx FIFO is at least half empty, and this interrupt is enabled."
                },
                {
                    "name": "rxmis",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if the Rx FIFO is at least half full, and this interrupt is enabled."
                },
                {
                    "name": "rtmis",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if the Rx FIFO is not empty, has not been read for a time-out period, and this interrupt is enabled. The time-out period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1])."
                },
                {
                    "name": "rormis",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "This bit is 1 if another frame was completely received while the RxFIFO was full, and this interrupt is enabled."
                }
            ],
            "id": "spi0.mis",
            "name": "mis",
            "offset": "0x1c",
            "doc": "Masked Interrupt Status Register"
        },
        "spi0.icr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved, user software should not write ones to reserved bits. The value read from a reserved bit is not defined."
                },
                {
                    "name": "rtic",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Writing a 1 to this bit clears the Rx FIFO was not empty and has not been read for a timeout period interrupt. The timeout period is the same for master and slave modes and is determined by the SSP bit rate: 32 bits at PCLK / (CPSDVSR x [SCR+1])."
                },
                {
                    "name": "roric",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Writing a 1 to this bit clears the frame was received when RxFIFO was full interrupt."
                }
            ],
            "id": "spi0.icr",
            "name": "icr",
            "offset": "0x20",
            "doc": "SSPICR Interrupt Clear Register"
        },
        "iocon": {
            "type": "blk",
            "children": [
                "iocon.reset_pio0_0",
                "iocon.iocon_pio0_1",
                "iocon.iocon_pio0_6",
                "iocon.pio0_8",
                "iocon.pio0_9",
                "iocon.swclk_pio0_10",
                "iocon.r_pio0_11",
                "iocon.r_pio1_0",
                "iocon.r_pio1_1",
                "iocon.r_pio1_2",
                "iocon.swdio_pio1_3",
                "iocon.pio1_6",
                "iocon.pio1_7"
            ],
            "id": "iocon",
            "name": "iocon",
            "offset": "0x40044000",
            "doc": "I/O Configuration "
        },
        "iocon.reset_pio0_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.reset_pio0_0",
            "name": "reset_pio0_0",
            "offset": "0xc",
            "doc": "I/O configuration for pin RESET/PIO0_0"
        },
        "iocon.iocon_pio0_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.iocon_pio0_1",
            "name": "iocon_pio0_1",
            "offset": "0x10",
            "doc": "I/O configuration for pin PIO0_1/CLKOUT/CT32B0_MAT2"
        },
        "iocon.iocon_pio0_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.iocon_pio0_6",
            "name": "iocon_pio0_6",
            "offset": "0x4c",
            "doc": "I/O configuration for pin PIO0_6/SCK0"
        },
        "iocon.pio0_8": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.pio0_8",
            "name": "pio0_8",
            "offset": "0x60",
            "doc": "I/O configuration for pin PIO0_8/MISO0/CT16B0_MAT0"
        },
        "iocon.pio0_9": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.pio0_9",
            "name": "pio0_9",
            "offset": "0x64",
            "doc": "I/O configuration for pin PIO0_9/MOSI0/CT16B0_MAT1"
        },
        "iocon.swclk_pio0_10": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.swclk_pio0_10",
            "name": "swclk_pio0_10",
            "offset": "0x68",
            "doc": "I/O configuration for pin SWCLK/PIO0_10/ SCK0/CT16B0_MAT2"
        },
        "iocon.r_pio0_11": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode."
                },
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "admode",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Selects Analog/Digital mode"
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.r_pio0_11",
            "name": "r_pio0_11",
            "offset": "0x74",
            "doc": "I/O configuration for pin R/PIO0_11/AD0/CT32B0_MAT3"
        },
        "iocon.r_pio1_0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "admode",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Selects Analog/Digital mode"
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.r_pio1_0",
            "name": "r_pio1_0",
            "offset": "0x78",
            "doc": "I/O configuration for pin R/PIO1_0/AD1/CT32B1_CAP0"
        },
        "iocon.r_pio1_1": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "admode",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Selects Analog/Digital mode"
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.r_pio1_1",
            "name": "r_pio1_1",
            "offset": "0x7c",
            "doc": "I/O configuration for pin R/PIO1_1/AD2/CT32B1_MAT0"
        },
        "iocon.r_pio1_2": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "admode",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Selects Analog/Digital mode"
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.r_pio1_2",
            "name": "r_pio1_2",
            "offset": "0x80",
            "doc": "I/O configuration for pin R/PIO1_2/AD3/CT32B1_MAT1"
        },
        "iocon.swdio_pio1_3": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode."
                },
                {
                    "name": "reserved_1",
                    "lsb": 8,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "admode",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Selects Analog/Digital mode"
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.swdio_pio1_3",
            "name": "swdio_pio1_3",
            "offset": "0x90",
            "doc": "I/O configuration for pin SWDIO/PIO1_3/AD4/CT32B1_MAT2"
        },
        "iocon.pio1_6": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.pio1_6",
            "name": "pio1_6",
            "offset": "0xa4",
            "doc": "I/O configuration for pin PIO1_6/RXD/CT32B0_MAT0"
        },
        "iocon.pio1_7": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 11,
                    "nbits": 21,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "od",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pseudo open-drain mode. See Section 7.1 for part specific details."
                },
                {
                    "name": "reserved_0",
                    "lsb": 6,
                    "nbits": 4,
                    "access": "",
                    "reset": "3",
                    "doc": "Reserved"
                },
                {
                    "name": "hys",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Hysteresis."
                },
                {
                    "name": "mode",
                    "lsb": 3,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "Selects function mode (on-chip pull-up/pull-down resistor control)."
                },
                {
                    "name": "func",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin function. All other values are reserved."
                }
            ],
            "id": "iocon.pio1_7",
            "name": "pio1_7",
            "offset": "0xa8",
            "doc": "I/O configuration for pin PIO1_7/TXD/CT32B0_MAT1"
        },
        "syscon": {
            "type": "blk",
            "children": [
                "syscon.sysmemremap",
                "syscon.presetctrl",
                "syscon.syspllctrl",
                "syscon.syspllstat",
                "syscon.sysoscctrl",
                "syscon.wdtoscctrl",
                "syscon.ircctrl",
                "syscon.sysrststat",
                "syscon.syspllclksel",
                "syscon.syspllclkuen",
                "syscon.mainclksel",
                "syscon.mainclkuen",
                "syscon.sysahbclkdiv",
                "syscon.sysahbclkctrl",
                "syscon.ssp0clkdiv",
                "syscon.uartclkdiv",
                "syscon.wdtclksel",
                "syscon.wdtclkuen",
                "syscon.wdtclkdiv",
                "syscon.clkoutclksel",
                "syscon.clkoutuen",
                "syscon.clkoutclkdiv",
                "syscon.pioporcap0",
                "syscon.bodctrl",
                "syscon.systckcal",
                "syscon.startaprp0",
                "syscon.starterp0",
                "syscon.startrsrp0clr",
                "syscon.startsrp0",
                "syscon.pdsleepcfg",
                "syscon.pdawakecfg",
                "syscon.pdruncfg",
                "syscon.device_id"
            ],
            "id": "syscon",
            "name": "syscon",
            "offset": "0x40048000",
            "doc": "System configuration "
        },
        "syscon.sysmemremap": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "map",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "2",
                    "doc": "System memory remap"
                }
            ],
            "id": "syscon.sysmemremap",
            "name": "sysmemremap",
            "offset": "0x0",
            "doc": "System memory remap"
        },
        "syscon.presetctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ssp0_rst_n",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "SPI0 reset control"
                }
            ],
            "id": "syscon.presetctrl",
            "name": "presetctrl",
            "offset": "0x4",
            "doc": "Peripheral reset control"
        },
        "syscon.syspllctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 7,
                    "nbits": 25,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Do not write ones to reserved bits."
                },
                {
                    "name": "psel",
                    "lsb": 5,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Post divider ratio P. The division ratio is 2 x P."
                },
                {
                    "name": "msel",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "",
                    "reset": "0",
                    "doc": "Feedback divider value. The division value M is the programmed MSEL value + 1. 00000: Division ratio M = 1 to 11111: Division ration M = 32"
                }
            ],
            "id": "syscon.syspllctrl",
            "name": "syspllctrl",
            "offset": "0x8",
            "doc": "System PLL control"
        },
        "syscon.syspllstat": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "lock",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "PLL lock status"
                }
            ],
            "id": "syscon.syspllstat",
            "name": "syspllstat",
            "offset": "0xc",
            "doc": "System PLL status"
        },
        "syscon.sysoscctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "freqrange",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Determines frequency range for Low-power oscillator."
                },
                {
                    "name": "bypass",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Bypass system oscillator"
                }
            ],
            "id": "syscon.sysoscctrl",
            "name": "sysoscctrl",
            "offset": "0x20",
            "doc": "System oscillator control"
        },
        "syscon.wdtoscctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "freqsel",
                    "lsb": 5,
                    "nbits": 4,
                    "access": "",
                    "reset": "0",
                    "doc": "Select watchdog oscillator analog output frequency (Fclkana)."
                },
                {
                    "name": "divsel",
                    "lsb": 0,
                    "nbits": 5,
                    "access": "",
                    "reset": "0",
                    "doc": "Select divider for Fclkana.  wdt_osc_clk = Fclkana/ (2 x (1 + DIVSEL)) 00000: 2 x (1 + DIVSEL) = 2 00001: 2 x (1 + DIVSEL) = 4 to 11111: 2 x (1 + DIVSEL) = 64"
                }
            ],
            "id": "syscon.wdtoscctrl",
            "name": "wdtoscctrl",
            "offset": "0x24",
            "doc": "Watchdog oscillator control"
        },
        "syscon.ircctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 9,
                    "nbits": 23,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsvd0",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "rsvd",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "trim",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "128",
                    "doc": "Trim value"
                }
            ],
            "id": "syscon.ircctrl",
            "name": "ircctrl",
            "offset": "0x28",
            "doc": "IRC control"
        },
        "syscon.sysrststat": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sysrst",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Status of the software system reset"
                },
                {
                    "name": "bod",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Status of the Brown-out detect reset"
                },
                {
                    "name": "wdt",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Status of the Watchdog reset"
                },
                {
                    "name": "extrst",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Status of the external RESET pin"
                },
                {
                    "name": "por",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "POR reset status"
                }
            ],
            "id": "syscon.sysrststat",
            "name": "sysrststat",
            "offset": "0x30",
            "doc": "System reset status register"
        },
        "syscon.syspllclksel": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "System PLL clock source"
                }
            ],
            "id": "syscon.syspllclksel",
            "name": "syspllclksel",
            "offset": "0x40",
            "doc": "System PLL clock source select"
        },
        "syscon.syspllclkuen": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable system PLL clock source update"
                }
            ],
            "id": "syscon.syspllclkuen",
            "name": "syspllclkuen",
            "offset": "0x44",
            "doc": "System PLL clock source update enable"
        },
        "syscon.mainclksel": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Clock source for main clock"
                }
            ],
            "id": "syscon.mainclksel",
            "name": "mainclksel",
            "offset": "0x70",
            "doc": "Main clock source select"
        },
        "syscon.mainclkuen": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable main clock source update"
                }
            ],
            "id": "syscon.mainclkuen",
            "name": "mainclkuen",
            "offset": "0x74",
            "doc": "Main clock source update enable"
        },
        "syscon.sysahbclkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "1",
                    "doc": "System AHB clock divider values 0: System clock disabled.  1: Divide by 1. to 255: Divide by 255."
                }
            ],
            "id": "syscon.sysahbclkdiv",
            "name": "sysahbclkdiv",
            "offset": "0x78",
            "doc": "System AHB clock divider"
        },
        "syscon.sysahbclkctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 17,
                    "nbits": 15,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "iocon",
                    "lsb": 16,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for I/O configuration block."
                },
                {
                    "name": "wdt",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for WDT."
                },
                {
                    "name": "reserved_1",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "adc",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for ADC."
                },
                {
                    "name": "uart",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for UART."
                },
                {
                    "name": "ssp0",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for SPI0."
                },
                {
                    "name": "ct32b1",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for 32-bit counter/timer 1."
                },
                {
                    "name": "ct32b0",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for 32-bit counter/timer 0."
                },
                {
                    "name": "ct16b1",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for 16-bit counter/timer 1."
                },
                {
                    "name": "ct16b0",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enables clock for 16-bit counter/timer 0."
                },
                {
                    "name": "gpio",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for GPIO."
                },
                {
                    "name": "reserved_0",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "flasharray",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for flash array access."
                },
                {
                    "name": "flashreg",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for flash register interface."
                },
                {
                    "name": "ram",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for RAM."
                },
                {
                    "name": "rom",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for ROM."
                },
                {
                    "name": "sys",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Enables clock for AHB to APB bridge, to the AHB matrix, to the Cortex-M0 FCLK and HCLK, to the SysCon, and to the PMU. This bit is read only."
                }
            ],
            "id": "syscon.sysahbclkctrl",
            "name": "sysahbclkctrl",
            "offset": "0x80",
            "doc": "System AHB clock control"
        },
        "syscon.ssp0clkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "SPI0_PCLK clock divider values 0: Disable SPI0_PCLK.  1: Divide by 1. to 255: Divide by 255."
                }
            ],
            "id": "syscon.ssp0clkdiv",
            "name": "ssp0clkdiv",
            "offset": "0x94",
            "doc": "SPI0 clock divder"
        },
        "syscon.uartclkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "UART_PCLK clock divider values 0: Disable UART_PCLK.  1: Divide by 1. to 255: Divide by 255."
                }
            ],
            "id": "syscon.uartclkdiv",
            "name": "uartclkdiv",
            "offset": "0x98",
            "doc": "UART clock divder"
        },
        "syscon.wdtclksel": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "WDT clock source"
                }
            ],
            "id": "syscon.wdtclksel",
            "name": "wdtclksel",
            "offset": "0xd0",
            "doc": "WDT clock source select"
        },
        "syscon.wdtclkuen": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable WDT clock source update"
                }
            ],
            "id": "syscon.wdtclkuen",
            "name": "wdtclkuen",
            "offset": "0xd4",
            "doc": "WDT clock source update enable"
        },
        "syscon.wdtclkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "WDT clock divider values 0: Disable WDCLK.  1: Divide by 1. to 255: Divide by 255."
                }
            ],
            "id": "syscon.wdtclkdiv",
            "name": "wdtclkdiv",
            "offset": "0xd8",
            "doc": "WDT clock divider"
        },
        "syscon.clkoutclksel": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 2,
                    "nbits": 30,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "sel",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "CLKOUT clock source"
                }
            ],
            "id": "syscon.clkoutclksel",
            "name": "clkoutclksel",
            "offset": "0xe0",
            "doc": "CLKOUT clock source select"
        },
        "syscon.clkoutuen": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 1,
                    "nbits": 31,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ena",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable CLKOUT clock source update"
                }
            ],
            "id": "syscon.clkoutuen",
            "name": "clkoutuen",
            "offset": "0xe4",
            "doc": "CLKOUT clock source update enable"
        },
        "syscon.clkoutclkdiv": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 8,
                    "nbits": 24,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "div",
                    "lsb": 0,
                    "nbits": 8,
                    "access": "",
                    "reset": "0",
                    "doc": "Clock output divider values 0: Disable CLKOUT.  1: Divide by 1. to 255: Divide by 255."
                }
            ],
            "id": "syscon.clkoutclkdiv",
            "name": "clkoutclkdiv",
            "offset": "0xe8",
            "doc": "CLKOUT clock divider"
        },
        "syscon.pioporcap0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_2",
                    "lsb": 20,
                    "nbits": 12,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "cappio1_7",
                    "lsb": 19,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_7"
                },
                {
                    "name": "cappio1_6",
                    "lsb": 18,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_6"
                },
                {
                    "name": "reserved_1",
                    "lsb": 16,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "cappio1_3",
                    "lsb": 15,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_3"
                },
                {
                    "name": "cappio1_2",
                    "lsb": 14,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_2"
                },
                {
                    "name": "cappio1_1",
                    "lsb": 13,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_1"
                },
                {
                    "name": "cappio1_0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO1_0"
                },
                {
                    "name": "cappio0_11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO0_11"
                },
                {
                    "name": "cappio0_10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO0_10"
                },
                {
                    "name": "cappio0_9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO0_9"
                },
                {
                    "name": "cappio0_8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO0_8"
                },
                {
                    "name": "reserved_0",
                    "lsb": 1,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved."
                },
                {
                    "name": "cappio0_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw reset status input PIO0_0"
                }
            ],
            "id": "syscon.pioporcap0",
            "name": "pioporcap0",
            "offset": "0x100",
            "doc": "POR captured PIO status 0"
        },
        "syscon.bodctrl": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 5,
                    "nbits": 27,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "bodrstena",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD reset enable"
                },
                {
                    "name": "bodintval",
                    "lsb": 2,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD interrupt level"
                },
                {
                    "name": "bodrstlev",
                    "lsb": 0,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD reset level"
                }
            ],
            "id": "syscon.bodctrl",
            "name": "bodctrl",
            "offset": "0x150",
            "doc": "BOD control"
        },
        "syscon.systckcal": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 26,
                    "nbits": 6,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "cal",
                    "lsb": 0,
                    "nbits": 26,
                    "access": "",
                    "reset": "4",
                    "doc": "System tick timer calibration value"
                }
            ],
            "id": "syscon.systckcal",
            "name": "systckcal",
            "offset": "0x154",
            "doc": "System tick counter calibration"
        },
        "syscon.startaprp0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "aprpio1_0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO1_0."
                },
                {
                    "name": "aprpio0_11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO0_11"
                },
                {
                    "name": "aprpio0_10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO0_10"
                },
                {
                    "name": "aprpio0_9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO0_9"
                },
                {
                    "name": "aprpio0_8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO0_8"
                },
                {
                    "name": "reserved_0",
                    "lsb": 1,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "aprpio0_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Edge select for start logic input PIO0_0"
                }
            ],
            "id": "syscon.startaprp0",
            "name": "startaprp0",
            "offset": "0x200",
            "doc": "Start logic edge control register 0"
        },
        "syscon.starterp0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Do not set reserved bits in this register to one."
                },
                {
                    "name": "erpio1_0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO1_0"
                },
                {
                    "name": "erpio0_11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO0_11"
                },
                {
                    "name": "erpio0_10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO0_10"
                },
                {
                    "name": "erpio0_9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO0_9"
                },
                {
                    "name": "erpio0_8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO0_8"
                },
                {
                    "name": "reserved_0",
                    "lsb": 1,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "erpio0_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Enable start signal for start logic input PIO0_0"
                }
            ],
            "id": "syscon.starterp0",
            "name": "starterp0",
            "offset": "0x204",
            "doc": "Start logic signal enable register 0"
        },
        "syscon.startrsrp0clr": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsrpio1_0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO1_0"
                },
                {
                    "name": "rsrpio0_11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO0_11"
                },
                {
                    "name": "rsrpio0_10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO0_10"
                },
                {
                    "name": "rsrpio0_9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO0_9"
                },
                {
                    "name": "rsrpio0_8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO0_8"
                },
                {
                    "name": "reserved_0",
                    "lsb": 1,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rsrpio0_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal reset for start logic input PIO0_0"
                }
            ],
            "id": "syscon.startrsrp0clr",
            "name": "startrsrp0clr",
            "offset": "0x208",
            "doc": "Start logic reset register 0"
        },
        "syscon.startsrp0": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_1",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "srpio1_0",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input PIO1_0"
                },
                {
                    "name": "srpio0_11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input PIO0_11"
                },
                {
                    "name": "srpio0_10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input PIO0_10"
                },
                {
                    "name": "srpio0_9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input PIO0_9"
                },
                {
                    "name": "srpio0_8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input PIO0_8"
                },
                {
                    "name": "reserved_0",
                    "lsb": 1,
                    "nbits": 7,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "srpio0_0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Start signal status for start logic input 0PIO0_0"
                }
            ],
            "id": "syscon.startsrp0",
            "name": "startsrp0",
            "offset": "0x20c",
            "doc": "Start logic status register 0"
        },
        "syscon.pdsleepcfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_5",
                    "lsb": 13,
                    "nbits": 19,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reserved_4",
                    "lsb": 11,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write these bits as 11."
                },
                {
                    "name": "reserved_3",
                    "lsb": 8,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write these bits as 000."
                },
                {
                    "name": "reserved_2",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "wdtosc_pd",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Watchdog oscillator power control in Deep-sleep mode, see Table 35."
                },
                {
                    "name": "reserved_1",
                    "lsb": 4,
                    "nbits": 2,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write these bits as 11."
                },
                {
                    "name": "bod_pd",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD power-down control in Deep-sleep mode, see Table 35."
                },
                {
                    "name": "reserved_0",
                    "lsb": 0,
                    "nbits": 3,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write these bits as 111."
                }
            ],
            "id": "syscon.pdsleepcfg",
            "name": "pdsleepcfg",
            "offset": "0x230",
            "doc": "Power-down states in Deep-sleep mode"
        },
        "syscon.pdawakecfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_6",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reserved_5",
                    "lsb": 13,
                    "nbits": 3,
                    "access": "",
                    "reset": "7",
                    "doc": "Reserved. Always write these bits as 111."
                },
                {
                    "name": "reserved_4",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write this bit as 0."
                },
                {
                    "name": "reserved_3",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "reserved_2",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "reserved_1",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write this bit as 0."
                },
                {
                    "name": "reserved_0",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "syspll_pd",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "System PLL wake-up configuration"
                },
                {
                    "name": "wdtosc_pd",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Watchdog oscillator wake-up configuration"
                },
                {
                    "name": "sysosc_pd",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "System oscillator wake-up configuration"
                },
                {
                    "name": "adc_pd",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "ADC wake-up configuration"
                },
                {
                    "name": "bod_pd",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD wake-up configuration"
                },
                {
                    "name": "flash_pd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Flash wake-up configuration"
                },
                {
                    "name": "irc_pd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "IRC oscillator power-down wake-up configuration"
                },
                {
                    "name": "ircout_pd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "IRC oscillator output wake-up configuration"
                }
            ],
            "id": "syscon.pdawakecfg",
            "name": "pdawakecfg",
            "offset": "0x234",
            "doc": "Power-down states after wake-up from Deep-sleep mode"
        },
        "syscon.pdruncfg": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved_6",
                    "lsb": 16,
                    "nbits": 16,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "reserved_5",
                    "lsb": 13,
                    "nbits": 3,
                    "access": "",
                    "reset": "7",
                    "doc": "Reserved. Always write these bits as 111."
                },
                {
                    "name": "reserved_4",
                    "lsb": 12,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved.  Always write this bit as 0."
                },
                {
                    "name": "reserved_3",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "reserved_2",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "reserved_1",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved. Always write this bit as 0."
                },
                {
                    "name": "reserved_0",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Reserved. Always write this bit as 1."
                },
                {
                    "name": "syspll_pd",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "System PLL power-down"
                },
                {
                    "name": "wdtosc_pd",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "Watchdog oscillator power-down"
                },
                {
                    "name": "sysosc_pd",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "System oscillator power-down"
                },
                {
                    "name": "adc_pd",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "1",
                    "doc": "ADC power-down"
                },
                {
                    "name": "bod_pd",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "BOD power-down"
                },
                {
                    "name": "flash_pd",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Flash power-down"
                },
                {
                    "name": "irc_pd",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "IRC oscillator power-down"
                },
                {
                    "name": "ircout_pd",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "IRC oscillator output power-down"
                }
            ],
            "id": "syscon.pdruncfg",
            "name": "pdruncfg",
            "offset": "0x238",
            "doc": "Power-down configuration register"
        },
        "syscon.device_id": {
            "type": "reg",
            "fields": [
                {
                    "name": "deviceid",
                    "lsb": 0,
                    "nbits": 32,
                    "access": "",
                    "reset": "0",
                    "doc": "Part ID numbers for LPC1102/04 parts LPC1102 = 0x2500 102B LPC1104 = 0x2548 102B"
                }
            ],
            "id": "syscon.device_id",
            "name": "device_id",
            "offset": "0x3f4",
            "doc": "Device ID"
        },
        "gpio0": {
            "type": "blk",
            "children": [
                "gpio0.data",
                "gpio0.dir",
                "gpio0.is",
                "gpio0.ibe",
                "gpio0.iev",
                "gpio0.ie",
                "gpio0.ris",
                "gpio0.mis",
                "gpio0.ic"
            ],
            "id": "gpio0",
            "name": "gpio0",
            "offset": "0x50000000",
            "doc": "General Purpose I/O (GPIO) "
        },
        "gpio0.data": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "data11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                },
                {
                    "name": "data0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Logic levels for pins PIOn_0 to PIOn_11. HIGH = 1, LOW = 0."
                }
            ],
            "id": "gpio0.data",
            "name": "data",
            "offset": "0x3ff8",
            "doc": "Port n data address masking register locations for pins PIOn_0 to PIOn_11 (see  Section 9.4.1)."
        },
        "gpio0.dir": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "io11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                },
                {
                    "name": "io0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects pin x as input or output (x = 0 to 11). 0 = Pin PIOn_x is configured as input. 1 = Pin PIOn_x is configured as output."
                }
            ],
            "id": "gpio0.dir",
            "name": "dir",
            "offset": "0x8000",
            "doc": "Data direction register for port n"
        },
        "gpio0.is": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "isense11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                },
                {
                    "name": "isense0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x as level or edge sensitive (x = 0 to 11). 0 = Interrupt on pin PIOn_x is configured as edge sensitive. 1 = Interrupt on pin PIOn_x is configured as level sensitive."
                }
            ],
            "id": "gpio0.is",
            "name": "is",
            "offset": "0x8004",
            "doc": "Interrupt sense register for port n"
        },
        "gpio0.ibe": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "ibe11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "ibe0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered on both edges (x = 0 to 11). 0 = Interrupt on pin PIOn_x is controlled through register IEV. 1 = Both edges on pin PIOn_x trigger an interrupt."
                }
            ],
            "id": "gpio0.ibe",
            "name": "ibe",
            "offset": "0x8008",
            "doc": "Interrupt both edges register for port n"
        },
        "gpio0.iev": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "iev11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS MR0 to 3, rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register GIS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                },
                {
                    "name": "iev0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be triggered rising or falling edges (x = 0 to 11). 0 = Depending on setting in register IS , falling edges or LOW level on pin PIOn_x trigger an interrupt. 1 = Depending on setting in register IS , rising edges or HIGH level on pin PIOn_x trigger an interrupt."
                }
            ],
            "id": "gpio0.iev",
            "name": "iev",
            "offset": "0x800c",
            "doc": "Interrupt event register for port n"
        },
        "gpio0.ie": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mask11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                },
                {
                    "name": "mask0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = Interrupt on pin PIOn_x is masked. 1 = Interrupt on pin PIOn_x is not masked."
                }
            ],
            "id": "gpio0.ie",
            "name": "ie",
            "offset": "0x8010",
            "doc": "Interrupt mask register for port n"
        },
        "gpio0.ris": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "rawst11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                },
                {
                    "name": "rawst0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Raw interrupt status (x = 0 to 11). 0 = No interrupt on pin PIOn_x. 1 = Interrupt requirements met on PIOn_x."
                }
            ],
            "id": "gpio0.ris",
            "name": "ris",
            "offset": "0x8014",
            "doc": "Raw interrupt status register for port n"
        },
        "gpio0.mis": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "mask11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                },
                {
                    "name": "mask0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be masked (x = 0 to 11). 0 = No interrupt or interrupt masked on pin PIOn_x. 1 = Interrupt on PIOn_x."
                }
            ],
            "id": "gpio0.mis",
            "name": "mis",
            "offset": "0x8018",
            "doc": "Masked interrupt status register for port n"
        },
        "gpio0.ic": {
            "type": "reg",
            "fields": [
                {
                    "name": "reserved",
                    "lsb": 12,
                    "nbits": 20,
                    "access": "",
                    "reset": "0",
                    "doc": "Reserved"
                },
                {
                    "name": "clr11",
                    "lsb": 11,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr10",
                    "lsb": 10,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr9",
                    "lsb": 9,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr8",
                    "lsb": 8,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr7",
                    "lsb": 7,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr6",
                    "lsb": 6,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr5",
                    "lsb": 5,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr4",
                    "lsb": 4,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr3",
                    "lsb": 3,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr2",
                    "lsb": 2,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr1",
                    "lsb": 1,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                },
                {
                    "name": "clr0",
                    "lsb": 0,
                    "nbits": 1,
                    "access": "",
                    "reset": "0",
                    "doc": "Selects interrupt on pin x to be cleared (x = 0 to 11). Clears the interrupt edge detection logic. This register is write-only. The synchronizer between the GPIO and the NVIC blocks causes a delay of 2 clocks. It is recommended to add two NOPs after the clear of the interrupt edge detection logic before the exit of the interrupt service routine. 0 = No effect. 1 = Clears edge detection logic for pin PIOn_x."
                }
            ],
            "id": "gpio0.ic",
            "name": "ic",
            "offset": "0x801c",
            "doc": "Interrupt clear register for port n"
        },
        "gpio1": {
            "type": "blk",
            "children": [],
            "id": "gpio1",
            "name": "gpio1",
            "offset": "0x50010000",
            "doc": ""
        }
    }
}